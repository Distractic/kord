var pages = [{'name': 'class Image', 'description':'dev.kord.rest.Image', 'location':'rest/dev.kord.rest/-image/index.html', 'searchKey':'Image'},
{'name': 'object Companion', 'description':'dev.kord.rest.Image.Companion', 'location':'rest/dev.kord.rest/-image/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.Image.Format.Companion', 'location':'rest/dev.kord.rest/-image/-format/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Companion', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.ratelimit.BucketKey.Companion', 'location':'rest/dev.kord.rest.ratelimit/-bucket-key/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.ratelimit.RateLimit.Companion', 'location':'rest/dev.kord.rest.ratelimit/-rate-limit/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.ratelimit.Remaining.Companion', 'location':'rest/dev.kord.rest.ratelimit/-remaining/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.ratelimit.RequestResponse.Companion', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.ratelimit.Reset.Companion', 'location':'rest/dev.kord.rest.ratelimit/-reset/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.ratelimit.Total.Companion', 'location':'rest/dev.kord.rest.ratelimit/-total/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.request.KtorRequestHandler.Companion', 'location':'rest/dev.kord.rest.request/-ktor-request-handler/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.route.Route.Companion', 'location':'rest/dev.kord.rest.route/-route/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'dev.kord.rest.service.RestClient.Companion', 'location':'rest/dev.kord.rest.service/-rest-client/-companion/index.html', 'searchKey':'Companion'},
{'name': 'suspend fun fromUrl(client: HttpClient, url: String): Image', 'description':'dev.kord.rest.Image.Companion.fromUrl', 'location':'rest/dev.kord.rest/-image/-companion/from-url.html', 'searchKey':'fromUrl'},
{'name': 'fun raw(data: ByteArray, format: Image.Format): Image', 'description':'dev.kord.rest.Image.Companion.raw', 'location':'rest/dev.kord.rest/-image/-companion/raw.html', 'searchKey':'raw'},
{'name': 'sealed class Format', 'description':'dev.kord.rest.Image.Format', 'location':'rest/dev.kord.rest/-image/-format/index.html', 'searchKey':'Format'},
{'name': 'fun fromContentType(type: String): Image.Format', 'description':'dev.kord.rest.Image.Format.Companion.fromContentType', 'location':'rest/dev.kord.rest/-image/-format/-companion/from-content-type.html', 'searchKey':'fromContentType'},
{'name': 'object GIF : Image.Format', 'description':'dev.kord.rest.Image.Format.GIF', 'location':'rest/dev.kord.rest/-image/-format/-g-i-f/index.html', 'searchKey':'GIF'},
{'name': 'object JPEG : Image.Format', 'description':'dev.kord.rest.Image.Format.JPEG', 'location':'rest/dev.kord.rest/-image/-format/-j-p-e-g/index.html', 'searchKey':'JPEG'},
{'name': 'object PNG : Image.Format', 'description':'dev.kord.rest.Image.Format.PNG', 'location':'rest/dev.kord.rest/-image/-format/-p-n-g/index.html', 'searchKey':'PNG'},
{'name': 'object WEBP : Image.Format', 'description':'dev.kord.rest.Image.Format.WEBP', 'location':'rest/dev.kord.rest/-image/-format/-w-e-b-p/index.html', 'searchKey':'WEBP'},
{'name': 'enum Size : Enum<Image.Size> ', 'description':'dev.kord.rest.Image.Size', 'location':'rest/dev.kord.rest/-image/-size/index.html', 'searchKey':'Size'},
{'name': 'Size1024(1024)', 'description':'dev.kord.rest.Image.Size.Size1024', 'location':'rest/dev.kord.rest/-image/-size/-size1024/index.html', 'searchKey':'Size1024'},
{'name': 'Size128(128)', 'description':'dev.kord.rest.Image.Size.Size128', 'location':'rest/dev.kord.rest/-image/-size/-size128/index.html', 'searchKey':'Size128'},
{'name': 'Size16(16)', 'description':'dev.kord.rest.Image.Size.Size16', 'location':'rest/dev.kord.rest/-image/-size/-size16/index.html', 'searchKey':'Size16'},
{'name': 'Size2048(2048)', 'description':'dev.kord.rest.Image.Size.Size2048', 'location':'rest/dev.kord.rest/-image/-size/-size2048/index.html', 'searchKey':'Size2048'},
{'name': 'Size256(256)', 'description':'dev.kord.rest.Image.Size.Size256', 'location':'rest/dev.kord.rest/-image/-size/-size256/index.html', 'searchKey':'Size256'},
{'name': 'Size32(32)', 'description':'dev.kord.rest.Image.Size.Size32', 'location':'rest/dev.kord.rest/-image/-size/-size32/index.html', 'searchKey':'Size32'},
{'name': 'Size4096(4096)', 'description':'dev.kord.rest.Image.Size.Size4096', 'location':'rest/dev.kord.rest/-image/-size/-size4096/index.html', 'searchKey':'Size4096'},
{'name': 'Size512(512)', 'description':'dev.kord.rest.Image.Size.Size512', 'location':'rest/dev.kord.rest/-image/-size/-size512/index.html', 'searchKey':'Size512'},
{'name': 'Size64(64)', 'description':'dev.kord.rest.Image.Size.Size64', 'location':'rest/dev.kord.rest/-image/-size/-size64/index.html', 'searchKey':'Size64'},
{'name': 'interface AuditRequestBuilder<T> : RequestBuilder<T> ', 'description':'dev.kord.rest.builder.AuditRequestBuilder', 'location':'rest/dev.kord.rest.builder/-audit-request-builder/index.html', 'searchKey':'AuditRequestBuilder'},
{'name': 'interface RequestBuilder<T>', 'description':'dev.kord.rest.builder.RequestBuilder', 'location':'rest/dev.kord.rest.builder/-request-builder/index.html', 'searchKey':'RequestBuilder'},
{'name': 'class RequestBuilder<T>(route: Route<T>, keySize: Int)', 'description':'dev.kord.rest.request.RequestBuilder', 'location':'rest/dev.kord.rest.request/-request-builder/index.html', 'searchKey':'RequestBuilder'},
{'name': 'fun <T> RequestBuilder(route: Route<T>, keySize: Int)', 'description':'dev.kord.rest.request.RequestBuilder.RequestBuilder', 'location':'rest/dev.kord.rest.request/-request-builder/-request-builder.html', 'searchKey':'RequestBuilder'},
{'name': 'abstract fun toRequest(): T', 'description':'dev.kord.rest.builder.RequestBuilder.toRequest', 'location':'rest/dev.kord.rest.builder/-request-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): AuditLogGetRequest', 'description':'dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildBanCreateRequest', 'description':'dev.kord.rest.builder.ban.BanCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.ban/-ban-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildChannelCreateRequest', 'description':'dev.kord.rest.builder.channel.CategoryCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-category-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): ChannelModifyPatchRequest', 'description':'dev.kord.rest.builder.channel.CategoryModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-category-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): ChannelPermissionEditRequest', 'description':'dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildChannelPositionModifyRequest', 'description':'dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'fun toRequest(): ChannelPositionSwapRequest', 'description':'dev.kord.rest.builder.channel.GuildChannelSwapBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): InviteCreateRequest', 'description':'dev.kord.rest.builder.channel.InviteCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-invite-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildChannelCreateRequest', 'description':'dev.kord.rest.builder.channel.NewsChannelCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-news-channel-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): ChannelModifyPatchRequest', 'description':'dev.kord.rest.builder.channel.NewsChannelModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): ChannelModifyPatchRequest', 'description':'dev.kord.rest.builder.channel.StoreChannelModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-store-channel-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildChannelCreateRequest', 'description':'dev.kord.rest.builder.channel.TextChannelCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-text-channel-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): ChannelModifyPatchRequest', 'description':'dev.kord.rest.builder.channel.TextChannelModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildChannelCreateRequest', 'description':'dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): ChannelModifyPatchRequest', 'description':'dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): EmojiCreateRequest', 'description':'dev.kord.rest.builder.guild.EmojiCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.guild/-emoji-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): EmojiModifyRequest', 'description':'dev.kord.rest.builder.guild.EmojiModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.guild/-emoji-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildCreateRequest', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildModifyRequest', 'description':'dev.kord.rest.builder.guild.GuildModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.guild/-guild-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildWidgetModifyRequest', 'description':'dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildIntegrationModifyRequest', 'description':'dev.kord.rest.builder.integration.IntegrationModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.integration/-integration-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildMemberAddRequest', 'description':'dev.kord.rest.builder.member.MemberAddBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.member/-member-add-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildMemberModifyRequest', 'description':'dev.kord.rest.builder.member.MemberModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.member/-member-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): EmbedAuthorRequest', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Author.toRequest', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-author/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): EmbedFieldRequest', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Field.toRequest', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-field/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): EmbedFooterRequest', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Footer.toRequest', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-footer/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): EmbedThumbnailRequest', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.toRequest', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-thumbnail/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): EmbedRequest', 'description':'dev.kord.rest.builder.message.EmbedBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): MultipartMessageCreateRequest', 'description':'dev.kord.rest.builder.message.MessageCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.message/-message-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): MessageEditPatchRequest', 'description':'dev.kord.rest.builder.message.MessageModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.message/-message-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildRoleCreateRequest', 'description':'dev.kord.rest.builder.role.RoleCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.role/-role-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildRoleModifyRequest', 'description':'dev.kord.rest.builder.role.RoleModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.role/-role-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildRolePositionModifyRequest', 'description':'dev.kord.rest.builder.role.RolePositionsModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.role/-role-positions-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GuildTemplateCreateRequest', 'description':'dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): CurrentUserModifyRequest', 'description':'dev.kord.rest.builder.user.CurrentUserModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.user/-current-user-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): GroupDMCreateRequest', 'description':'dev.kord.rest.builder.user.GroupDMCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.user/-group-d-m-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): MultiPartWebhookExecuteRequest', 'description':'dev.kord.rest.builder.webhook.ExecuteWebhookBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.webhook/-execute-webhook-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): WebhookCreateRequest', 'description':'dev.kord.rest.builder.webhook.WebhookCreateBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.webhook/-webhook-create-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'open override fun toRequest(): WebhookModifyRequest', 'description':'dev.kord.rest.builder.webhook.WebhookModifyBuilder.toRequest', 'location':'rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/to-request.html', 'searchKey':'toRequest'},
{'name': 'class AuditLogGetRequestBuilder : RequestBuilder<AuditLogGetRequest> ', 'description':'dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder', 'location':'rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/index.html', 'searchKey':'AuditLogGetRequestBuilder'},
{'name': 'fun AuditLogGetRequestBuilder()', 'description':'dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.AuditLogGetRequestBuilder', 'location':'rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/-audit-log-get-request-builder.html', 'searchKey':'AuditLogGetRequestBuilder'},
{'name': 'class BanCreateBuilder : AuditRequestBuilder<GuildBanCreateRequest> ', 'description':'dev.kord.rest.builder.ban.BanCreateBuilder', 'location':'rest/dev.kord.rest.builder.ban/-ban-create-builder/index.html', 'searchKey':'BanCreateBuilder'},
{'name': 'fun BanCreateBuilder()', 'description':'dev.kord.rest.builder.ban.BanCreateBuilder.BanCreateBuilder', 'location':'rest/dev.kord.rest.builder.ban/-ban-create-builder/-ban-create-builder.html', 'searchKey':'BanCreateBuilder'},
{'name': 'class CategoryCreateBuilder(name: String) : AuditRequestBuilder<GuildChannelCreateRequest> ', 'description':'dev.kord.rest.builder.channel.CategoryCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-category-create-builder/index.html', 'searchKey':'CategoryCreateBuilder'},
{'name': 'fun CategoryCreateBuilder(name: String)', 'description':'dev.kord.rest.builder.channel.CategoryCreateBuilder.CategoryCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-category-create-builder/-category-create-builder.html', 'searchKey':'CategoryCreateBuilder'},
{'name': 'inline fun addMemberOverwrite(memberId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.channel.CategoryCreateBuilder.addMemberOverwrite', 'location':'rest/dev.kord.rest.builder.channel/-category-create-builder/add-member-overwrite.html', 'searchKey':'addMemberOverwrite'},
{'name': 'inline fun addMemberOverwrite(memberId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.channel.CategoryModifyBuilder.addMemberOverwrite', 'location':'rest/dev.kord.rest.builder.channel/-category-modify-builder/add-member-overwrite.html', 'searchKey':'addMemberOverwrite'},
{'name': 'inline fun addRoleOverwrite(roleId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.channel.CategoryCreateBuilder.addRoleOverwrite', 'location':'rest/dev.kord.rest.builder.channel/-category-create-builder/add-role-overwrite.html', 'searchKey':'addRoleOverwrite'},
{'name': 'inline fun addRoleOverwrite(roleId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.channel.CategoryModifyBuilder.addRoleOverwrite', 'location':'rest/dev.kord.rest.builder.channel/-category-modify-builder/add-role-overwrite.html', 'searchKey':'addRoleOverwrite'},
{'name': 'class CategoryModifyBuilder : AuditRequestBuilder<ChannelModifyPatchRequest> ', 'description':'dev.kord.rest.builder.channel.CategoryModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-category-modify-builder/index.html', 'searchKey':'CategoryModifyBuilder'},
{'name': 'fun CategoryModifyBuilder()', 'description':'dev.kord.rest.builder.channel.CategoryModifyBuilder.CategoryModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-category-modify-builder/-category-modify-builder.html', 'searchKey':'CategoryModifyBuilder'},
{'name': 'class ChannelPermissionModifyBuilder(type: OverwriteType) : AuditRequestBuilder<ChannelPermissionEditRequest> ', 'description':'dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/index.html', 'searchKey':'ChannelPermissionModifyBuilder'},
{'name': 'fun ChannelPermissionModifyBuilder(type: OverwriteType)', 'description':'dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.ChannelPermissionModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/-channel-permission-modify-builder.html', 'searchKey':'ChannelPermissionModifyBuilder'},
{'name': 'class GuildChannelPositionModifyBuilder : AuditRequestBuilder<GuildChannelPositionModifyRequest> ', 'description':'dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/index.html', 'searchKey':'GuildChannelPositionModifyBuilder'},
{'name': 'fun GuildChannelPositionModifyBuilder()', 'description':'dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.GuildChannelPositionModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/-guild-channel-position-modify-builder.html', 'searchKey':'GuildChannelPositionModifyBuilder'},
{'name': 'class GuildChannelSwapBuilder(channelId: Snowflake)', 'description':'dev.kord.rest.builder.channel.GuildChannelSwapBuilder', 'location':'rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/index.html', 'searchKey':'GuildChannelSwapBuilder'},
{'name': 'fun GuildChannelSwapBuilder(channelId: Snowflake)', 'description':'dev.kord.rest.builder.channel.GuildChannelSwapBuilder.GuildChannelSwapBuilder', 'location':'rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/-guild-channel-swap-builder.html', 'searchKey':'GuildChannelSwapBuilder'},
{'name': 'class InviteCreateBuilder : AuditRequestBuilder<InviteCreateRequest> ', 'description':'dev.kord.rest.builder.channel.InviteCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-invite-create-builder/index.html', 'searchKey':'InviteCreateBuilder'},
{'name': 'fun InviteCreateBuilder()', 'description':'dev.kord.rest.builder.channel.InviteCreateBuilder.InviteCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-invite-create-builder/-invite-create-builder.html', 'searchKey':'InviteCreateBuilder'},
{'name': 'class NewsChannelCreateBuilder(name: String) : AuditRequestBuilder<GuildChannelCreateRequest> ', 'description':'dev.kord.rest.builder.channel.NewsChannelCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-news-channel-create-builder/index.html', 'searchKey':'NewsChannelCreateBuilder'},
{'name': 'fun NewsChannelCreateBuilder(name: String)', 'description':'dev.kord.rest.builder.channel.NewsChannelCreateBuilder.NewsChannelCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-news-channel-create-builder/-news-channel-create-builder.html', 'searchKey':'NewsChannelCreateBuilder'},
{'name': 'class NewsChannelModifyBuilder : AuditRequestBuilder<ChannelModifyPatchRequest> ', 'description':'dev.kord.rest.builder.channel.NewsChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/index.html', 'searchKey':'NewsChannelModifyBuilder'},
{'name': 'fun NewsChannelModifyBuilder()', 'description':'dev.kord.rest.builder.channel.NewsChannelModifyBuilder.NewsChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/-news-channel-modify-builder.html', 'searchKey':'NewsChannelModifyBuilder'},
{'name': 'class PermissionOverwriteBuilder(type: OverwriteType, id: Snowflake)', 'description':'dev.kord.rest.builder.channel.PermissionOverwriteBuilder', 'location':'rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/index.html', 'searchKey':'PermissionOverwriteBuilder'},
{'name': 'fun PermissionOverwriteBuilder(type: OverwriteType, id: Snowflake)', 'description':'dev.kord.rest.builder.channel.PermissionOverwriteBuilder.PermissionOverwriteBuilder', 'location':'rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/-permission-overwrite-builder.html', 'searchKey':'PermissionOverwriteBuilder'},
{'name': 'fun toOverwrite(): Overwrite', 'description':'dev.kord.rest.builder.channel.PermissionOverwriteBuilder.toOverwrite', 'location':'rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/to-overwrite.html', 'searchKey':'toOverwrite'},
{'name': 'class StoreChannelModifyBuilder : AuditRequestBuilder<ChannelModifyPatchRequest> ', 'description':'dev.kord.rest.builder.channel.StoreChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-store-channel-modify-builder/index.html', 'searchKey':'StoreChannelModifyBuilder'},
{'name': 'fun StoreChannelModifyBuilder()', 'description':'dev.kord.rest.builder.channel.StoreChannelModifyBuilder.StoreChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-store-channel-modify-builder/-store-channel-modify-builder.html', 'searchKey':'StoreChannelModifyBuilder'},
{'name': 'class TextChannelCreateBuilder(name: String) : AuditRequestBuilder<GuildChannelCreateRequest> ', 'description':'dev.kord.rest.builder.channel.TextChannelCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-text-channel-create-builder/index.html', 'searchKey':'TextChannelCreateBuilder'},
{'name': 'fun TextChannelCreateBuilder(name: String)', 'description':'dev.kord.rest.builder.channel.TextChannelCreateBuilder.TextChannelCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-text-channel-create-builder/-text-channel-create-builder.html', 'searchKey':'TextChannelCreateBuilder'},
{'name': 'class TextChannelModifyBuilder : AuditRequestBuilder<ChannelModifyPatchRequest> ', 'description':'dev.kord.rest.builder.channel.TextChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/index.html', 'searchKey':'TextChannelModifyBuilder'},
{'name': 'fun TextChannelModifyBuilder()', 'description':'dev.kord.rest.builder.channel.TextChannelModifyBuilder.TextChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/-text-channel-modify-builder.html', 'searchKey':'TextChannelModifyBuilder'},
{'name': 'class VoiceChannelCreateBuilder(name: String) : AuditRequestBuilder<GuildChannelCreateRequest> ', 'description':'dev.kord.rest.builder.channel.VoiceChannelCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/index.html', 'searchKey':'VoiceChannelCreateBuilder'},
{'name': 'fun VoiceChannelCreateBuilder(name: String)', 'description':'dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.VoiceChannelCreateBuilder', 'location':'rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/-voice-channel-create-builder.html', 'searchKey':'VoiceChannelCreateBuilder'},
{'name': 'class VoiceChannelModifyBuilder : AuditRequestBuilder<ChannelModifyPatchRequest> ', 'description':'dev.kord.rest.builder.channel.VoiceChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/index.html', 'searchKey':'VoiceChannelModifyBuilder'},
{'name': 'fun VoiceChannelModifyBuilder()', 'description':'dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.VoiceChannelModifyBuilder', 'location':'rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/-voice-channel-modify-builder.html', 'searchKey':'VoiceChannelModifyBuilder'},
{'name': 'class EmojiCreateBuilder(name: String, image: Image) : AuditRequestBuilder<EmojiCreateRequest> ', 'description':'dev.kord.rest.builder.guild.EmojiCreateBuilder', 'location':'rest/dev.kord.rest.builder.guild/-emoji-create-builder/index.html', 'searchKey':'EmojiCreateBuilder'},
{'name': 'fun EmojiCreateBuilder(name: String, image: Image)', 'description':'dev.kord.rest.builder.guild.EmojiCreateBuilder.EmojiCreateBuilder', 'location':'rest/dev.kord.rest.builder.guild/-emoji-create-builder/-emoji-create-builder.html', 'searchKey':'EmojiCreateBuilder'},
{'name': 'class EmojiModifyBuilder : AuditRequestBuilder<EmojiModifyRequest> ', 'description':'dev.kord.rest.builder.guild.EmojiModifyBuilder', 'location':'rest/dev.kord.rest.builder.guild/-emoji-modify-builder/index.html', 'searchKey':'EmojiModifyBuilder'},
{'name': 'fun EmojiModifyBuilder()', 'description':'dev.kord.rest.builder.guild.EmojiModifyBuilder.EmojiModifyBuilder', 'location':'rest/dev.kord.rest.builder.guild/-emoji-modify-builder/-emoji-modify-builder.html', 'searchKey':'EmojiModifyBuilder'},
{'name': 'class GuildCreateBuilder(name: String) : RequestBuilder<GuildCreateRequest> ', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/index.html', 'searchKey':'GuildCreateBuilder'},
{'name': 'fun GuildCreateBuilder(name: String)', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.GuildCreateBuilder', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/-guild-create-builder.html', 'searchKey':'GuildCreateBuilder'},
{'name': 'inline fun category(name: String, id: Snowflake, builder: CategoryCreateBuilder.() -> Unit): Snowflake', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.category', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/category.html', 'searchKey':'category'},
{'name': 'inline fun everyoneRole(builder: RoleCreateBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.everyoneRole', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/everyone-role.html', 'searchKey':'everyoneRole'},
{'name': 'fun newUniqueSnowflake(): Snowflake', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.newUniqueSnowflake', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/new-unique-snowflake.html', 'searchKey':'newUniqueSnowflake'},
{'name': 'inline fun newsChannel(name: String, id: Snowflake, builder: NewsChannelCreateBuilder.() -> Unit): Snowflake', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.newsChannel', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/news-channel.html', 'searchKey':'newsChannel'},
{'name': 'inline fun role(id: Snowflake, builder: RoleCreateBuilder.() -> Unit): Snowflake', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.role', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/role.html', 'searchKey':'role'},
{'name': 'inline fun textChannel(name: String, id: Snowflake, builder: TextChannelCreateBuilder.() -> Unit): Snowflake', 'description':'dev.kord.rest.builder.guild.GuildCreateBuilder.textChannel', 'location':'rest/dev.kord.rest.builder.guild/-guild-create-builder/text-channel.html', 'searchKey':'textChannel'},
{'name': 'class GuildModifyBuilder : AuditRequestBuilder<GuildModifyRequest> ', 'description':'dev.kord.rest.builder.guild.GuildModifyBuilder', 'location':'rest/dev.kord.rest.builder.guild/-guild-modify-builder/index.html', 'searchKey':'GuildModifyBuilder'},
{'name': 'fun GuildModifyBuilder()', 'description':'dev.kord.rest.builder.guild.GuildModifyBuilder.GuildModifyBuilder', 'location':'rest/dev.kord.rest.builder.guild/-guild-modify-builder/-guild-modify-builder.html', 'searchKey':'GuildModifyBuilder'},
{'name': 'class GuildWidgetModifyBuilder : RequestBuilder<GuildWidgetModifyRequest> ', 'description':'dev.kord.rest.builder.guild.GuildWidgetModifyBuilder', 'location':'rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/index.html', 'searchKey':'GuildWidgetModifyBuilder'},
{'name': 'fun GuildWidgetModifyBuilder()', 'description':'dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.GuildWidgetModifyBuilder', 'location':'rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/-guild-widget-modify-builder.html', 'searchKey':'GuildWidgetModifyBuilder'},
{'name': 'class IntegrationModifyBuilder : RequestBuilder<GuildIntegrationModifyRequest> ', 'description':'dev.kord.rest.builder.integration.IntegrationModifyBuilder', 'location':'rest/dev.kord.rest.builder.integration/-integration-modify-builder/index.html', 'searchKey':'IntegrationModifyBuilder'},
{'name': 'fun IntegrationModifyBuilder()', 'description':'dev.kord.rest.builder.integration.IntegrationModifyBuilder.IntegrationModifyBuilder', 'location':'rest/dev.kord.rest.builder.integration/-integration-modify-builder/-integration-modify-builder.html', 'searchKey':'IntegrationModifyBuilder'},
{'name': 'class MemberAddBuilder(token: String) : RequestBuilder<GuildMemberAddRequest> ', 'description':'dev.kord.rest.builder.member.MemberAddBuilder', 'location':'rest/dev.kord.rest.builder.member/-member-add-builder/index.html', 'searchKey':'MemberAddBuilder'},
{'name': 'fun MemberAddBuilder(token: String)', 'description':'dev.kord.rest.builder.member.MemberAddBuilder.MemberAddBuilder', 'location':'rest/dev.kord.rest.builder.member/-member-add-builder/-member-add-builder.html', 'searchKey':'MemberAddBuilder'},
{'name': 'class MemberModifyBuilder : AuditRequestBuilder<GuildMemberModifyRequest> ', 'description':'dev.kord.rest.builder.member.MemberModifyBuilder', 'location':'rest/dev.kord.rest.builder.member/-member-modify-builder/index.html', 'searchKey':'MemberModifyBuilder'},
{'name': 'fun MemberModifyBuilder()', 'description':'dev.kord.rest.builder.member.MemberModifyBuilder.MemberModifyBuilder', 'location':'rest/dev.kord.rest.builder.member/-member-modify-builder/-member-modify-builder.html', 'searchKey':'MemberModifyBuilder'},
{'name': 'class AllowedMentionsBuilder', 'description':'dev.kord.rest.builder.message.AllowedMentionsBuilder', 'location':'rest/dev.kord.rest.builder.message/-allowed-mentions-builder/index.html', 'searchKey':'AllowedMentionsBuilder'},
{'name': 'fun AllowedMentionsBuilder()', 'description':'dev.kord.rest.builder.message.AllowedMentionsBuilder.AllowedMentionsBuilder', 'location':'rest/dev.kord.rest.builder.message/-allowed-mentions-builder/-allowed-mentions-builder.html', 'searchKey':'AllowedMentionsBuilder'},
{'name': 'fun add(type: AllowedMentionType)', 'description':'dev.kord.rest.builder.message.AllowedMentionsBuilder.add', 'location':'rest/dev.kord.rest.builder.message/-allowed-mentions-builder/add.html', 'searchKey':'add'},
{'name': 'fun build(): AllowedMentions', 'description':'dev.kord.rest.builder.message.AllowedMentionsBuilder.build', 'location':'rest/dev.kord.rest.builder.message/-allowed-mentions-builder/build.html', 'searchKey':'build'},
{'name': 'fun build(): Request<*, T>', 'description':'dev.kord.rest.request.RequestBuilder.build', 'location':'rest/dev.kord.rest.request/-request-builder/build.html', 'searchKey':'build'},
{'name': 'operator fun AllowedMentionType.unaryPlus()', 'description':'dev.kord.rest.builder.message.AllowedMentionsBuilder.unaryPlus', 'location':'rest/dev.kord.rest.builder.message/-allowed-mentions-builder/unary-plus.html', 'searchKey':'unaryPlus'},
{'name': 'class EmbedBuilder : RequestBuilder<EmbedRequest> ', 'description':'dev.kord.rest.builder.message.EmbedBuilder', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/index.html', 'searchKey':'EmbedBuilder'},
{'name': 'fun EmbedBuilder()', 'description':'dev.kord.rest.builder.message.EmbedBuilder.EmbedBuilder', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-embed-builder.html', 'searchKey':'EmbedBuilder'},
{'name': 'class Author : RequestBuilder<EmbedAuthorRequest> ', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Author', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-author/index.html', 'searchKey':'Author'},
{'name': 'fun Author()', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Author.Author', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-author/-author.html', 'searchKey':'Author'},
{'name': 'object Limits', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Author.Limits', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-author/-limits/index.html', 'searchKey':'Limits'},
{'name': 'object Limits', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Field.Limits', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-field/-limits/index.html', 'searchKey':'Limits'},
{'name': 'object Limits', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Footer.Limits', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-footer/-limits/index.html', 'searchKey':'Limits'},
{'name': 'object Limits', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Limits', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-limits/index.html', 'searchKey':'Limits'},
{'name': 'class Field : RequestBuilder<EmbedFieldRequest> ', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Field', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-field/index.html', 'searchKey':'Field'},
{'name': 'fun Field()', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Field.Field', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-field/-field.html', 'searchKey':'Field'},
{'name': 'class Footer : RequestBuilder<EmbedFooterRequest> ', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Footer', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-footer/index.html', 'searchKey':'Footer'},
{'name': 'fun Footer()', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Footer.Footer', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-footer/-footer.html', 'searchKey':'Footer'},
{'name': 'class Thumbnail : RequestBuilder<EmbedThumbnailRequest> ', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Thumbnail', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-thumbnail/index.html', 'searchKey':'Thumbnail'},
{'name': 'fun Thumbnail()', 'description':'dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.Thumbnail', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/-thumbnail/-thumbnail.html', 'searchKey':'Thumbnail'},
{'name': 'inline fun author(builder: EmbedBuilder.Author.() -> Unit)', 'description':'dev.kord.rest.builder.message.EmbedBuilder.author', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/author.html', 'searchKey':'author'},
{'name': 'inline fun footer(builder: EmbedBuilder.Footer.() -> Unit)', 'description':'dev.kord.rest.builder.message.EmbedBuilder.footer', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/footer.html', 'searchKey':'footer'},
{'name': 'inline fun thumbnail(builder: EmbedBuilder.Thumbnail.() -> Unit)', 'description':'dev.kord.rest.builder.message.EmbedBuilder.thumbnail', 'location':'rest/dev.kord.rest.builder.message/-embed-builder/thumbnail.html', 'searchKey':'thumbnail'},
{'name': 'class MessageCreateBuilder : RequestBuilder<MultipartMessageCreateRequest> ', 'description':'dev.kord.rest.builder.message.MessageCreateBuilder', 'location':'rest/dev.kord.rest.builder.message/-message-create-builder/index.html', 'searchKey':'MessageCreateBuilder'},
{'name': 'fun MessageCreateBuilder()', 'description':'dev.kord.rest.builder.message.MessageCreateBuilder.MessageCreateBuilder', 'location':'rest/dev.kord.rest.builder.message/-message-create-builder/-message-create-builder.html', 'searchKey':'MessageCreateBuilder'},
{'name': 'inline fun allowedMentions(block: AllowedMentionsBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.message.MessageCreateBuilder.allowedMentions', 'location':'rest/dev.kord.rest.builder.message/-message-create-builder/allowed-mentions.html', 'searchKey':'allowedMentions'},
{'name': 'inline fun allowedMentions(block: AllowedMentionsBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.message.MessageModifyBuilder.allowedMentions', 'location':'rest/dev.kord.rest.builder.message/-message-modify-builder/allowed-mentions.html', 'searchKey':'allowedMentions'},
{'name': 'inline fun embed(block: EmbedBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.message.MessageCreateBuilder.embed', 'location':'rest/dev.kord.rest.builder.message/-message-create-builder/embed.html', 'searchKey':'embed'},
{'name': 'inline fun embed(block: EmbedBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.message.MessageModifyBuilder.embed', 'location':'rest/dev.kord.rest.builder.message/-message-modify-builder/embed.html', 'searchKey':'embed'},
{'name': 'inline fun embed(builder: EmbedBuilder.() -> Unit)', 'description':'dev.kord.rest.builder.webhook.ExecuteWebhookBuilder.embed', 'location':'rest/dev.kord.rest.builder.webhook/-execute-webhook-builder/embed.html', 'searchKey':'embed'},
{'name': 'class MessageModifyBuilder : RequestBuilder<MessageEditPatchRequest> ', 'description':'dev.kord.rest.builder.message.MessageModifyBuilder', 'location':'rest/dev.kord.rest.builder.message/-message-modify-builder/index.html', 'searchKey':'MessageModifyBuilder'},
{'name': 'fun MessageModifyBuilder()', 'description':'dev.kord.rest.builder.message.MessageModifyBuilder.MessageModifyBuilder', 'location':'rest/dev.kord.rest.builder.message/-message-modify-builder/-message-modify-builder.html', 'searchKey':'MessageModifyBuilder'},
{'name': 'class RoleCreateBuilder : AuditRequestBuilder<GuildRoleCreateRequest> ', 'description':'dev.kord.rest.builder.role.RoleCreateBuilder', 'location':'rest/dev.kord.rest.builder.role/-role-create-builder/index.html', 'searchKey':'RoleCreateBuilder'},
{'name': 'fun RoleCreateBuilder()', 'description':'dev.kord.rest.builder.role.RoleCreateBuilder.RoleCreateBuilder', 'location':'rest/dev.kord.rest.builder.role/-role-create-builder/-role-create-builder.html', 'searchKey':'RoleCreateBuilder'},
{'name': 'class RoleModifyBuilder : AuditRequestBuilder<GuildRoleModifyRequest> ', 'description':'dev.kord.rest.builder.role.RoleModifyBuilder', 'location':'rest/dev.kord.rest.builder.role/-role-modify-builder/index.html', 'searchKey':'RoleModifyBuilder'},
{'name': 'fun RoleModifyBuilder()', 'description':'dev.kord.rest.builder.role.RoleModifyBuilder.RoleModifyBuilder', 'location':'rest/dev.kord.rest.builder.role/-role-modify-builder/-role-modify-builder.html', 'searchKey':'RoleModifyBuilder'},
{'name': 'class RolePositionsModifyBuilder : AuditRequestBuilder<GuildRolePositionModifyRequest> ', 'description':'dev.kord.rest.builder.role.RolePositionsModifyBuilder', 'location':'rest/dev.kord.rest.builder.role/-role-positions-modify-builder/index.html', 'searchKey':'RolePositionsModifyBuilder'},
{'name': 'fun RolePositionsModifyBuilder()', 'description':'dev.kord.rest.builder.role.RolePositionsModifyBuilder.RolePositionsModifyBuilder', 'location':'rest/dev.kord.rest.builder.role/-role-positions-modify-builder/-role-positions-modify-builder.html', 'searchKey':'RolePositionsModifyBuilder'},
{'name': 'class GuildFromTemplateCreateBuilder(name: String) : RequestBuilder<GuildTemplateCreateRequest> ', 'description':'dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder', 'location':'rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/index.html', 'searchKey':'GuildFromTemplateCreateBuilder'},
{'name': 'fun GuildFromTemplateCreateBuilder(name: String)', 'description':'dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.GuildFromTemplateCreateBuilder', 'location':'rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/-guild-from-template-create-builder.html', 'searchKey':'GuildFromTemplateCreateBuilder'},
{'name': 'class CurrentUserModifyBuilder : RequestBuilder<CurrentUserModifyRequest> ', 'description':'dev.kord.rest.builder.user.CurrentUserModifyBuilder', 'location':'rest/dev.kord.rest.builder.user/-current-user-modify-builder/index.html', 'searchKey':'CurrentUserModifyBuilder'},
{'name': 'fun CurrentUserModifyBuilder()', 'description':'dev.kord.rest.builder.user.CurrentUserModifyBuilder.CurrentUserModifyBuilder', 'location':'rest/dev.kord.rest.builder.user/-current-user-modify-builder/-current-user-modify-builder.html', 'searchKey':'CurrentUserModifyBuilder'},
{'name': 'class GroupDMCreateBuilder : RequestBuilder<GroupDMCreateRequest> ', 'description':'dev.kord.rest.builder.user.GroupDMCreateBuilder', 'location':'rest/dev.kord.rest.builder.user/-group-d-m-create-builder/index.html', 'searchKey':'GroupDMCreateBuilder'},
{'name': 'fun GroupDMCreateBuilder()', 'description':'dev.kord.rest.builder.user.GroupDMCreateBuilder.GroupDMCreateBuilder', 'location':'rest/dev.kord.rest.builder.user/-group-d-m-create-builder/-group-d-m-create-builder.html', 'searchKey':'GroupDMCreateBuilder'},
{'name': 'class ExecuteWebhookBuilder : RequestBuilder<MultiPartWebhookExecuteRequest> ', 'description':'dev.kord.rest.builder.webhook.ExecuteWebhookBuilder', 'location':'rest/dev.kord.rest.builder.webhook/-execute-webhook-builder/index.html', 'searchKey':'ExecuteWebhookBuilder'},
{'name': 'fun ExecuteWebhookBuilder()', 'description':'dev.kord.rest.builder.webhook.ExecuteWebhookBuilder.ExecuteWebhookBuilder', 'location':'rest/dev.kord.rest.builder.webhook/-execute-webhook-builder/-execute-webhook-builder.html', 'searchKey':'ExecuteWebhookBuilder'},
{'name': 'class WebhookCreateBuilder(name: String) : AuditRequestBuilder<WebhookCreateRequest> ', 'description':'dev.kord.rest.builder.webhook.WebhookCreateBuilder', 'location':'rest/dev.kord.rest.builder.webhook/-webhook-create-builder/index.html', 'searchKey':'WebhookCreateBuilder'},
{'name': 'fun WebhookCreateBuilder(name: String)', 'description':'dev.kord.rest.builder.webhook.WebhookCreateBuilder.WebhookCreateBuilder', 'location':'rest/dev.kord.rest.builder.webhook/-webhook-create-builder/-webhook-create-builder.html', 'searchKey':'WebhookCreateBuilder'},
{'name': 'class WebhookModifyBuilder : AuditRequestBuilder<WebhookModifyRequest> ', 'description':'dev.kord.rest.builder.webhook.WebhookModifyBuilder', 'location':'rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/index.html', 'searchKey':'WebhookModifyBuilder'},
{'name': 'fun WebhookModifyBuilder()', 'description':'dev.kord.rest.builder.webhook.WebhookModifyBuilder.WebhookModifyBuilder', 'location':'rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/-webhook-modify-builder.html', 'searchKey':'WebhookModifyBuilder'},
{'name': 'enum JsonErrorCode : Enum<JsonErrorCode> ', 'description':'dev.kord.rest.json.JsonErrorCode', 'location':'rest/dev.kord.rest.json/-json-error-code/index.html', 'searchKey':'JsonErrorCode'},
{'name': 'APIResourceOverloaded(130000)', 'description':'dev.kord.rest.json.JsonErrorCode.APIResourceOverloaded', 'location':'rest/dev.kord.rest.json/-json-error-code/-a-p-i-resource-overloaded/index.html', 'searchKey':'APIResourceOverloaded'},
{'name': 'BotsEndpoint(20002)', 'description':'dev.kord.rest.json.JsonErrorCode.BotsEndpoint', 'location':'rest/dev.kord.rest.json/-json-error-code/-bots-endpoint/index.html', 'searchKey':'BotsEndpoint'},
{'name': 'BulkDeleteOldMessage(50034)', 'description':'dev.kord.rest.json.JsonErrorCode.BulkDeleteOldMessage', 'location':'rest/dev.kord.rest.json/-json-error-code/-bulk-delete-old-message/index.html', 'searchKey':'BulkDeleteOldMessage'},
{'name': 'CannotDeleteRequiredCommunityChannel(50074)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotDeleteRequiredCommunityChannel', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-delete-required-community-channel/index.html', 'searchKey':'CannotDeleteRequiredCommunityChannel'},
{'name': 'CannotEditMessageByAnotherUser(50005)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotEditMessageByAnotherUser', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-edit-message-by-another-user/index.html', 'searchKey':'CannotEditMessageByAnotherUser'},
{'name': 'CannotExecuteOnDM(50003)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotExecuteOnDM', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-execute-on-d-m/index.html', 'searchKey':'CannotExecuteOnDM'},
{'name': 'CannotExecuteOnSystemMessage(50021)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotExecuteOnSystemMessage', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-execute-on-system-message/index.html', 'searchKey':'CannotExecuteOnSystemMessage'},
{'name': 'CannotPinMessageFromAnotherChannel(50019)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotPinMessageFromAnotherChannel', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-pin-message-from-another-channel/index.html', 'searchKey':'CannotPinMessageFromAnotherChannel'},
{'name': 'CannotSendEmptyMessage(50006)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotSendEmptyMessage', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-send-empty-message/index.html', 'searchKey':'CannotSendEmptyMessage'},
{'name': 'CannotSendMessagesInVoiceChannel(50008)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotSendMessagesInVoiceChannel', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-send-messages-in-voice-channel/index.html', 'searchKey':'CannotSendMessagesInVoiceChannel'},
{'name': 'CannotSendMessagesToUser(50007)', 'description':'dev.kord.rest.json.JsonErrorCode.CannotSendMessagesToUser', 'location':'rest/dev.kord.rest.json/-json-error-code/-cannot-send-messages-to-user/index.html', 'searchKey':'CannotSendMessagesToUser'},
{'name': 'ChannelVerificationTooHigh(50009)', 'description':'dev.kord.rest.json.JsonErrorCode.ChannelVerificationTooHigh', 'location':'rest/dev.kord.rest.json/-json-error-code/-channel-verification-too-high/index.html', 'searchKey':'ChannelVerificationTooHigh'},
{'name': 'General(0)', 'description':'dev.kord.rest.json.JsonErrorCode.General', 'location':'rest/dev.kord.rest.json/-json-error-code/-general/index.html', 'searchKey':'General'},
{'name': 'GuildWidgetDisabled(50004)', 'description':'dev.kord.rest.json.JsonErrorCode.GuildWidgetDisabled', 'location':'rest/dev.kord.rest.json/-json-error-code/-guild-widget-disabled/index.html', 'searchKey':'GuildWidgetDisabled'},
{'name': 'InvalidAPIVersion(50041)', 'description':'dev.kord.rest.json.JsonErrorCode.InvalidAPIVersion', 'location':'rest/dev.kord.rest.json/-json-error-code/-invalid-a-p-i-version/index.html', 'searchKey':'InvalidAPIVersion'},
{'name': 'InvalidAccountType(50002)', 'description':'dev.kord.rest.json.JsonErrorCode.InvalidAccountType', 'location':'rest/dev.kord.rest.json/-json-error-code/-invalid-account-type/index.html', 'searchKey':'InvalidAccountType'},
{'name': 'InvalidAuthToken(50014)', 'description':'dev.kord.rest.json.JsonErrorCode.InvalidAuthToken', 'location':'rest/dev.kord.rest.json/-json-error-code/-invalid-auth-token/index.html', 'searchKey':'InvalidAuthToken'},
{'name': 'InvalidFormBody(50035)', 'description':'dev.kord.rest.json.JsonErrorCode.InvalidFormBody', 'location':'rest/dev.kord.rest.json/-json-error-code/-invalid-form-body/index.html', 'searchKey':'InvalidFormBody'},
{'name': 'InvalidOAuth2AccessToken(50025)', 'description':'dev.kord.rest.json.JsonErrorCode.InvalidOAuth2AccessToken', 'location':'rest/dev.kord.rest.json/-json-error-code/-invalid-o-auth2-access-token/index.html', 'searchKey':'InvalidOAuth2AccessToken'},
{'name': 'InvalidOAuth2State(50012)', 'description':'dev.kord.rest.json.JsonErrorCode.InvalidOAuth2State', 'location':'rest/dev.kord.rest.json/-json-error-code/-invalid-o-auth2-state/index.html', 'searchKey':'InvalidOAuth2State'},
{'name': 'InvalidStickerSent(50081)', 'description':'dev.kord.rest.json.JsonErrorCode.InvalidStickerSent', 'location':'rest/dev.kord.rest.json/-json-error-code/-invalid-sticker-sent/index.html', 'searchKey':'InvalidStickerSent'},
{'name': 'InviteCodeInvalidOrTaken(50020)', 'description':'dev.kord.rest.json.JsonErrorCode.InviteCodeInvalidOrTaken', 'location':'rest/dev.kord.rest.json/-json-error-code/-invite-code-invalid-or-taken/index.html', 'searchKey':'InviteCodeInvalidOrTaken'},
{'name': 'object JsonErrorCodeSerializer : KSerializer<JsonErrorCode> ', 'description':'dev.kord.rest.json.JsonErrorCode.JsonErrorCodeSerializer', 'location':'rest/dev.kord.rest.json/-json-error-code/-json-error-code-serializer/index.html', 'searchKey':'JsonErrorCodeSerializer'},
{'name': 'open override fun deserialize(decoder: Decoder): JsonErrorCode', 'description':'dev.kord.rest.json.JsonErrorCode.JsonErrorCodeSerializer.deserialize', 'location':'rest/dev.kord.rest.json/-json-error-code/-json-error-code-serializer/deserialize.html', 'searchKey':'deserialize'},
{'name': 'open override fun serialize(encoder: Encoder, value: JsonErrorCode)', 'description':'dev.kord.rest.json.JsonErrorCode.JsonErrorCodeSerializer.serialize', 'location':'rest/dev.kord.rest.json/-json-error-code/-json-error-code-serializer/serialize.html', 'searchKey':'serialize'},
{'name': 'MaxAttachments(30015)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxAttachments', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-attachments/index.html', 'searchKey':'MaxAttachments'},
{'name': 'MaxFriends(30002)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxFriends', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-friends/index.html', 'searchKey':'MaxFriends'},
{'name': 'MaxGuildChannels(30013)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxGuildChannels', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-guild-channels/index.html', 'searchKey':'MaxGuildChannels'},
{'name': 'MaxGuildRoles(30005)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxGuildRoles', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-guild-roles/index.html', 'searchKey':'MaxGuildRoles'},
{'name': 'MaxGuilds(30001)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxGuilds', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-guilds/index.html', 'searchKey':'MaxGuilds'},
{'name': 'MaxInvites(30016)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxInvites', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-invites/index.html', 'searchKey':'MaxInvites'},
{'name': 'MaxPins(30003)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxPins', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-pins/index.html', 'searchKey':'MaxPins'},
{'name': 'MaxReactions(30010)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxReactions', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-reactions/index.html', 'searchKey':'MaxReactions'},
{'name': 'MaxWebhooks(30007)', 'description':'dev.kord.rest.json.JsonErrorCode.MaxWebhooks', 'location':'rest/dev.kord.rest.json/-json-error-code/-max-webhooks/index.html', 'searchKey':'MaxWebhooks'},
{'name': 'MissingAccess(50001)', 'description':'dev.kord.rest.json.JsonErrorCode.MissingAccess', 'location':'rest/dev.kord.rest.json/-json-error-code/-missing-access/index.html', 'searchKey':'MissingAccess'},
{'name': 'NonBotEndpoint(20001)', 'description':'dev.kord.rest.json.JsonErrorCode.NonBotEndpoint', 'location':'rest/dev.kord.rest.json/-json-error-code/-non-bot-endpoint/index.html', 'searchKey':'NonBotEndpoint'},
{'name': 'NonBotGuildInviteAccepted(50036)', 'description':'dev.kord.rest.json.JsonErrorCode.NonBotGuildInviteAccepted', 'location':'rest/dev.kord.rest.json/-json-error-code/-non-bot-guild-invite-accepted/index.html', 'searchKey':'NonBotGuildInviteAccepted'},
{'name': 'OAuth2ApplicationLimit(50011)', 'description':'dev.kord.rest.json.JsonErrorCode.OAuth2ApplicationLimit', 'location':'rest/dev.kord.rest.json/-json-error-code/-o-auth2-application-limit/index.html', 'searchKey':'OAuth2ApplicationLimit'},
{'name': 'OAuth2HasNoBot(50010)', 'description':'dev.kord.rest.json.JsonErrorCode.OAuth2HasNoBot', 'location':'rest/dev.kord.rest.json/-json-error-code/-o-auth2-has-no-bot/index.html', 'searchKey':'OAuth2HasNoBot'},
{'name': 'PermissionLack(50013)', 'description':'dev.kord.rest.json.JsonErrorCode.PermissionLack', 'location':'rest/dev.kord.rest.json/-json-error-code/-permission-lack/index.html', 'searchKey':'PermissionLack'},
{'name': 'ProvidedMessageCountInsufficient(50016)', 'description':'dev.kord.rest.json.JsonErrorCode.ProvidedMessageCountInsufficient', 'location':'rest/dev.kord.rest.json/-json-error-code/-provided-message-count-insufficient/index.html', 'searchKey':'ProvidedMessageCountInsufficient'},
{'name': 'ReactionBlocked(90001)', 'description':'dev.kord.rest.json.JsonErrorCode.ReactionBlocked', 'location':'rest/dev.kord.rest.json/-json-error-code/-reaction-blocked/index.html', 'searchKey':'ReactionBlocked'},
{'name': 'RequestEntityTooLarge(40005)', 'description':'dev.kord.rest.json.JsonErrorCode.RequestEntityTooLarge', 'location':'rest/dev.kord.rest.json/-json-error-code/-request-entity-too-large/index.html', 'searchKey':'RequestEntityTooLarge'},
{'name': 'Require2FA(60003)', 'description':'dev.kord.rest.json.JsonErrorCode.Require2FA', 'location':'rest/dev.kord.rest.json/-json-error-code/-require2-f-a/index.html', 'searchKey':'Require2FA'},
{'name': 'TemporarilyDisabled(40006)', 'description':'dev.kord.rest.json.JsonErrorCode.TemporarilyDisabled', 'location':'rest/dev.kord.rest.json/-json-error-code/-temporarily-disabled/index.html', 'searchKey':'TemporarilyDisabled'},
{'name': 'TooLongNote(50015)', 'description':'dev.kord.rest.json.JsonErrorCode.TooLongNote', 'location':'rest/dev.kord.rest.json/-json-error-code/-too-long-note/index.html', 'searchKey':'TooLongNote'},
{'name': 'Unauthorized(40001)', 'description':'dev.kord.rest.json.JsonErrorCode.Unauthorized', 'location':'rest/dev.kord.rest.json/-json-error-code/-unauthorized/index.html', 'searchKey':'Unauthorized'},
{'name': 'Unknown(-1)', 'description':'dev.kord.rest.json.JsonErrorCode.Unknown', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown/index.html', 'searchKey':'Unknown'},
{'name': 'class Unknown(value: String) : AllowedMentionType', 'description':'dev.kord.rest.json.request.AllowedMentionType.Unknown', 'location':'rest/dev.kord.rest.json.request/-allowed-mention-type/-unknown/index.html', 'searchKey':'Unknown'},
{'name': 'fun Unknown(value: String)', 'description':'dev.kord.rest.json.request.AllowedMentionType.Unknown.Unknown', 'location':'rest/dev.kord.rest.json.request/-allowed-mention-type/-unknown/-unknown.html', 'searchKey':'Unknown'},
{'name': 'UnknownAccount(10001)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownAccount', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-account/index.html', 'searchKey':'UnknownAccount'},
{'name': 'UnknownApplication(10002)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownApplication', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-application/index.html', 'searchKey':'UnknownApplication'},
{'name': 'UnknownBan(10026)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownBan', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-ban/index.html', 'searchKey':'UnknownBan'},
{'name': 'UnknownBranch(10032)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownBranch', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-branch/index.html', 'searchKey':'UnknownBranch'},
{'name': 'UnknownBuild(10030)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownBuild', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-build/index.html', 'searchKey':'UnknownBuild'},
{'name': 'UnknownChannel(10003)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownChannel', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-channel/index.html', 'searchKey':'UnknownChannel'},
{'name': 'UnknownEmoji(10014)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownEmoji', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-emoji/index.html', 'searchKey':'UnknownEmoji'},
{'name': 'UnknownEntitlement(10029)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownEntitlement', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-entitlement/index.html', 'searchKey':'UnknownEntitlement'},
{'name': 'UnknownGuild(10004)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownGuild', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-guild/index.html', 'searchKey':'UnknownGuild'},
{'name': 'UnknownIntegration(10005)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownIntegration', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-integration/index.html', 'searchKey':'UnknownIntegration'},
{'name': 'UnknownInvite(10006)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownInvite', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-invite/index.html', 'searchKey':'UnknownInvite'},
{'name': 'UnknownLobby(10031)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownLobby', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-lobby/index.html', 'searchKey':'UnknownLobby'},
{'name': 'UnknownMember(10007)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownMember', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-member/index.html', 'searchKey':'UnknownMember'},
{'name': 'UnknownMessage(10008)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownMessage', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-message/index.html', 'searchKey':'UnknownMessage'},
{'name': 'UnknownPermissionOverwrite(10009)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownPermissionOverwrite', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-permission-overwrite/index.html', 'searchKey':'UnknownPermissionOverwrite'},
{'name': 'UnknownProvider(10010)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownProvider', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-provider/index.html', 'searchKey':'UnknownProvider'},
{'name': 'UnknownRedistributable(10036)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownRedistributable', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-redistributable/index.html', 'searchKey':'UnknownRedistributable'},
{'name': 'UnknownRole(10011)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownRole', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-role/index.html', 'searchKey':'UnknownRole'},
{'name': 'UnknownSKU(10027)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownSKU', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-s-k-u/index.html', 'searchKey':'UnknownSKU'},
{'name': 'UnknownStoreListing(10028)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownStoreListing', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-store-listing/index.html', 'searchKey':'UnknownStoreListing'},
{'name': 'UnknownToken(10012)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownToken', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-token/index.html', 'searchKey':'UnknownToken'},
{'name': 'UnknownUser(10013)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownUser', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-user/index.html', 'searchKey':'UnknownUser'},
{'name': 'UnknownWebhook(10015)', 'description':'dev.kord.rest.json.JsonErrorCode.UnknownWebhook', 'location':'rest/dev.kord.rest.json/-json-error-code/-unknown-webhook/index.html', 'searchKey':'UnknownWebhook'},
{'name': 'UserBannedFromGuild(40007)', 'description':'dev.kord.rest.json.JsonErrorCode.UserBannedFromGuild', 'location':'rest/dev.kord.rest.json/-json-error-code/-user-banned-from-guild/index.html', 'searchKey':'UserBannedFromGuild'},
{'name': 'VerifyAccount(40002)', 'description':'dev.kord.rest.json.JsonErrorCode.VerifyAccount', 'location':'rest/dev.kord.rest.json/-json-error-code/-verify-account/index.html', 'searchKey':'VerifyAccount'},
{'name': 'sealed class AllowedMentionType', 'description':'dev.kord.rest.json.request.AllowedMentionType', 'location':'rest/dev.kord.rest.json.request/-allowed-mention-type/index.html', 'searchKey':'AllowedMentionType'},
{'name': 'object EveryoneMentions : AllowedMentionType', 'description':'dev.kord.rest.json.request.AllowedMentionType.EveryoneMentions', 'location':'rest/dev.kord.rest.json.request/-allowed-mention-type/-everyone-mentions/index.html', 'searchKey':'EveryoneMentions'},
{'name': 'object RoleMentions : AllowedMentionType', 'description':'dev.kord.rest.json.request.AllowedMentionType.RoleMentions', 'location':'rest/dev.kord.rest.json.request/-allowed-mention-type/-role-mentions/index.html', 'searchKey':'RoleMentions'},
{'name': 'object UserMentions : AllowedMentionType', 'description':'dev.kord.rest.json.request.AllowedMentionType.UserMentions', 'location':'rest/dev.kord.rest.json.request/-allowed-mention-type/-user-mentions/index.html', 'searchKey':'UserMentions'},
{'name': 'data class AllowedMentions(parse: List<AllowedMentionType>, users: List<String>, roles: List<String>, repliedUser: OptionalBoolean)', 'description':'dev.kord.rest.json.request.AllowedMentions', 'location':'rest/dev.kord.rest.json.request/-allowed-mentions/index.html', 'searchKey':'AllowedMentions'},
{'name': 'fun AllowedMentions(parse: List<AllowedMentionType>, users: List<String>, roles: List<String>, repliedUser: OptionalBoolean)', 'description':'dev.kord.rest.json.request.AllowedMentions.AllowedMentions', 'location':'rest/dev.kord.rest.json.request/-allowed-mentions/-allowed-mentions.html', 'searchKey':'AllowedMentions'},
{'name': 'operator fun component1(): List<AllowedMentionType>', 'description':'dev.kord.rest.json.request.AllowedMentions.component1', 'location':'rest/dev.kord.rest.json.request/-allowed-mentions/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Snowflake?', 'description':'dev.kord.rest.json.request.AuditLogGetRequest.component1', 'location':'rest/dev.kord.rest.json.request/-audit-log-get-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): List<Snowflake>', 'description':'dev.kord.rest.json.request.BulkDeleteRequest.component1', 'location':'rest/dev.kord.rest.json.request/-bulk-delete-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component1', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component1', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Permissions', 'description':'dev.kord.rest.json.request.ChannelPermissionEditRequest.component1', 'location':'rest/dev.kord.rest.json.request/-channel-permission-edit-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Snowflake', 'description':'dev.kord.rest.json.request.ChannelPositionSwapRequest.component1', 'location':'rest/dev.kord.rest.json.request/-channel-position-swap-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.CurrentUserModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-current-user-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String?>', 'description':'dev.kord.rest.json.request.CurrentUserNicknameModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-current-user-nickname-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.DMCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-d-m-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedAuthorRequest.component1', 'location':'rest/dev.kord.rest.json.request/-embed-author-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.EmbedFieldRequest.component1', 'location':'rest/dev.kord.rest.json.request/-embed-field-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.EmbedFooterRequest.component1', 'location':'rest/dev.kord.rest.json.request/-embed-footer-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.EmbedImageRequest.component1', 'location':'rest/dev.kord.rest.json.request/-embed-image-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedRequest.component1', 'location':'rest/dev.kord.rest.json.request/-embed-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.EmbedThumbnailRequest.component1', 'location':'rest/dev.kord.rest.json.request/-embed-thumbnail-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.EmojiCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-emoji-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.EmojiModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-emoji-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): List<String>', 'description':'dev.kord.rest.json.request.GroupDMCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-group-d-m-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildBanCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-ban-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): List<ChannelPositionSwapRequest>', 'description':'dev.kord.rest.json.request.GuildChannelPositionModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-channel-position-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Boolean', 'description':'dev.kord.rest.json.request.GuildEmbedModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-embed-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Int', 'description':'dev.kord.rest.json.request.GuildIntegrationCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-integration-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<IntegrationExpireBehavior>', 'description':'dev.kord.rest.json.request.GuildIntegrationModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-integration-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String?>', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String?>', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): List<Pair<Snowflake, Int>>', 'description':'dev.kord.rest.json.request.GuildRolePositionModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-role-position-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.GuildTemplateCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-template-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): OptionalBoolean', 'description':'dev.kord.rest.json.request.GuildWidgetModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-guild-widget-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): OptionalInt', 'description':'dev.kord.rest.json.request.InviteCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.MessageCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-message-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String?>', 'description':'dev.kord.rest.json.request.MessageEditPatchRequest.component1', 'location':'rest/dev.kord.rest.json.request/-message-edit-patch-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): WebhookExecuteRequest', 'description':'dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.component1', 'location':'rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): MessageCreateRequest', 'description':'dev.kord.rest.json.request.MultipartMessageCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-multipart-message-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.UserAddDMRequest.component1', 'location':'rest/dev.kord.rest.json.request/-user-add-d-m-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.request.WebhookCreateRequest.component1', 'location':'rest/dev.kord.rest.json.request/-webhook-create-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.component1', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Optional<String>', 'description':'dev.kord.rest.json.request.WebhookModifyRequest.component1', 'location':'rest/dev.kord.rest.json.request/-webhook-modify-request/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Snowflake', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component1', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String?', 'description':'dev.kord.rest.json.response.BanResponse.component1', 'location':'rest/dev.kord.rest.json.response/-ban-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.response.BotGatewayResponse.component1', 'location':'rest/dev.kord.rest.json.response/-bot-gateway-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.response.Connection.component1', 'location':'rest/dev.kord.rest.json.response/-connection/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.response.CurrentUserNicknameModifyResponse.component1', 'location':'rest/dev.kord.rest.json.response/-current-user-nickname-modify-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Boolean', 'description':'dev.kord.rest.json.response.EmbedResponse.component1', 'location':'rest/dev.kord.rest.json.response/-embed-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Snowflake', 'description':'dev.kord.rest.json.response.FollowedChannelResponse.component1', 'location':'rest/dev.kord.rest.json.response/-followed-channel-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.response.GatewayResponse.component1', 'location':'rest/dev.kord.rest.json.response/-gateway-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Int', 'description':'dev.kord.rest.json.response.GetPruneResponse.component1', 'location':'rest/dev.kord.rest.json.response/-get-prune-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'dev.kord.rest.json.response.PartialChannelResponse.component1', 'location':'rest/dev.kord.rest.json.response/-partial-channel-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Int?', 'description':'dev.kord.rest.json.response.PruneResponse.component1', 'location':'rest/dev.kord.rest.json.response/-prune-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Int', 'description':'dev.kord.rest.json.response.SessionStartLimitResponse.component1', 'location':'rest/dev.kord.rest.json.response/-session-start-limit-response/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Total', 'description':'dev.kord.rest.ratelimit.RateLimit.component1', 'location':'rest/dev.kord.rest.ratelimit/-rate-limit/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): BucketKey?', 'description':'dev.kord.rest.ratelimit.RequestResponse.Accepted.component1', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-accepted/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): BucketKey', 'description':'dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.component1', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): BucketKey?', 'description':'dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.component1', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Int', 'description':'dev.kord.rest.request.HttpStatus.component1', 'location':'rest/dev.kord.rest.request/-http-status/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): SerializationStrategy<T>', 'description':'dev.kord.rest.request.RequestBody.component1', 'location':'rest/dev.kord.rest.request/-request-body/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Route<*>', 'description':'dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.component1', 'location':'rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): Route<*>', 'description':'dev.kord.rest.request.RequestIdentifier.RouteIdentifier.component1', 'location':'rest/dev.kord.rest.request/-request-identifier/-route-identifier/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component2(): List<String>', 'description':'dev.kord.rest.json.request.AllowedMentions.component2', 'location':'rest/dev.kord.rest.json.request/-allowed-mentions/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): AuditLogEvent?', 'description':'dev.kord.rest.json.request.AuditLogGetRequest.component2', 'location':'rest/dev.kord.rest.json.request/-audit-log-get-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): OptionalInt?', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component2', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Int', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component2', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Permissions', 'description':'dev.kord.rest.json.request.ChannelPermissionEditRequest.component2', 'location':'rest/dev.kord.rest.json.request/-channel-permission-edit-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Int?', 'description':'dev.kord.rest.json.request.ChannelPositionSwapRequest.component2', 'location':'rest/dev.kord.rest.json.request/-channel-position-swap-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String?>', 'description':'dev.kord.rest.json.request.CurrentUserModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-current-user-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedAuthorRequest.component2', 'location':'rest/dev.kord.rest.json.request/-embed-author-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.json.request.EmbedFieldRequest.component2', 'location':'rest/dev.kord.rest.json.request/-embed-field-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String?', 'description':'dev.kord.rest.json.request.EmbedFooterRequest.component2', 'location':'rest/dev.kord.rest.json.request/-embed-footer-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedRequest.component2', 'location':'rest/dev.kord.rest.json.request/-embed-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.json.request.EmojiCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-emoji-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<Set<Snowflake>>', 'description':'dev.kord.rest.json.request.EmojiModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-emoji-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Map<String, String>', 'description':'dev.kord.rest.json.request.GroupDMCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-group-d-m-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): OptionalInt', 'description':'dev.kord.rest.json.request.GuildBanCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-ban-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): ChannelType', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Snowflake', 'description':'dev.kord.rest.json.request.GuildEmbedModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-embed-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.json.request.GuildIntegrationCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-integration-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): OptionalInt?', 'description':'dev.kord.rest.json.request.GuildIntegrationModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-integration-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<Iterable<Snowflake>?>', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<Permissions>', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<Permissions?>', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildTemplateCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-template-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): OptionalSnowflake?', 'description':'dev.kord.rest.json.request.GuildWidgetModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-guild-widget-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): OptionalInt', 'description':'dev.kord.rest.json.request.InviteCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.MessageCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-message-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<EmbedRequest?>', 'description':'dev.kord.rest.json.request.MessageEditPatchRequest.component2', 'location':'rest/dev.kord.rest.json.request/-message-edit-patch-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Pair<String, InputStream>?', 'description':'dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.component2', 'location':'rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): List<Pair<String, InputStream>>', 'description':'dev.kord.rest.json.request.MultipartMessageCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-multipart-message-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.json.request.UserAddDMRequest.component2', 'location':'rest/dev.kord.rest.json.request/-user-add-d-m-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.WebhookCreateRequest.component2', 'location':'rest/dev.kord.rest.json.request/-webhook-create-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String>', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.component2', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Optional<String?>', 'description':'dev.kord.rest.json.request.WebhookModifyRequest.component2', 'location':'rest/dev.kord.rest.json.request/-webhook-modify-request/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component2', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): DiscordUser', 'description':'dev.kord.rest.json.response.BanResponse.component2', 'location':'rest/dev.kord.rest.json.response/-ban-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Int', 'description':'dev.kord.rest.json.response.BotGatewayResponse.component2', 'location':'rest/dev.kord.rest.json.response/-bot-gateway-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.json.response.Connection.component2', 'location':'rest/dev.kord.rest.json.response/-connection/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.json.response.EmbedResponse.component2', 'location':'rest/dev.kord.rest.json.response/-embed-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Snowflake', 'description':'dev.kord.rest.json.response.FollowedChannelResponse.component2', 'location':'rest/dev.kord.rest.json.response/-followed-channel-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Int', 'description':'dev.kord.rest.json.response.GatewayResponse.component2', 'location':'rest/dev.kord.rest.json.response/-gateway-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): ChannelType', 'description':'dev.kord.rest.json.response.PartialChannelResponse.component2', 'location':'rest/dev.kord.rest.json.response/-partial-channel-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Int', 'description':'dev.kord.rest.json.response.SessionStartLimitResponse.component2', 'location':'rest/dev.kord.rest.json.response/-session-start-limit-response/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Remaining', 'description':'dev.kord.rest.ratelimit.RateLimit.component2', 'location':'rest/dev.kord.rest.ratelimit/-rate-limit/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): RateLimit?', 'description':'dev.kord.rest.ratelimit.RequestResponse.Accepted.component2', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-accepted/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): RateLimit?', 'description':'dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.component2', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): RateLimit?', 'description':'dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.component2', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.request.HttpStatus.component2', 'location':'rest/dev.kord.rest.request/-http-status/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): T', 'description':'dev.kord.rest.request.RequestBody.component2', 'location':'rest/dev.kord.rest.request/-request-body/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): String', 'description':'dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.component2', 'location':'rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component3(): List<String>', 'description':'dev.kord.rest.json.request.AllowedMentions.component3', 'location':'rest/dev.kord.rest.json.request/-allowed-mentions/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Snowflake?', 'description':'dev.kord.rest.json.request.AuditLogGetRequest.component3', 'location':'rest/dev.kord.rest.json.request/-audit-log-get-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<String?>', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component3', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): String?', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component3', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): OverwriteType', 'description':'dev.kord.rest.json.request.ChannelPermissionEditRequest.component3', 'location':'rest/dev.kord.rest.json.request/-channel-permission-edit-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Boolean?', 'description':'dev.kord.rest.json.request.ChannelPositionSwapRequest.component3', 'location':'rest/dev.kord.rest.json.request/-channel-position-swap-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedAuthorRequest.component3', 'location':'rest/dev.kord.rest.json.request/-embed-author-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): OptionalBoolean', 'description':'dev.kord.rest.json.request.EmbedFieldRequest.component3', 'location':'rest/dev.kord.rest.json.request/-embed-field-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedRequest.component3', 'location':'rest/dev.kord.rest.json.request/-embed-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Set<Snowflake>', 'description':'dev.kord.rest.json.request.EmojiCreateRequest.component3', 'location':'rest/dev.kord.rest.json.request/-emoji-create-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): OptionalBoolean', 'description':'dev.kord.rest.json.request.GuildIntegrationModifyRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-integration-modify-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<Iterable<Snowflake>>', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): OptionalBoolean?', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<VerificationLevel>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<Color>', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<Color>', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest.component3', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): OptionalBoolean', 'description':'dev.kord.rest.json.request.InviteCreateRequest.component3', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): OptionalBoolean', 'description':'dev.kord.rest.json.request.MessageCreateRequest.component3', 'location':'rest/dev.kord.rest.json.request/-message-create-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<UserFlags?>', 'description':'dev.kord.rest.json.request.MessageEditPatchRequest.component3', 'location':'rest/dev.kord.rest.json.request/-message-edit-patch-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Optional<String>', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.component3', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.WebhookModifyRequest.component3', 'location':'rest/dev.kord.rest.json.request/-webhook-modify-request/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): String?', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component3', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): SessionStartLimitResponse', 'description':'dev.kord.rest.json.response.BotGatewayResponse.component3', 'location':'rest/dev.kord.rest.json.response/-bot-gateway-response/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): String', 'description':'dev.kord.rest.json.response.Connection.component3', 'location':'rest/dev.kord.rest.json.response/-connection/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Int', 'description':'dev.kord.rest.json.response.SessionStartLimitResponse.component3', 'location':'rest/dev.kord.rest.json.response/-session-start-limit-response/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Reset', 'description':'dev.kord.rest.ratelimit.RequestResponse.Accepted.component3', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-accepted/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Reset', 'description':'dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.component3', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Reset', 'description':'dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.component3', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component4(): OptionalBoolean', 'description':'dev.kord.rest.json.request.AllowedMentions.component4', 'location':'rest/dev.kord.rest.json.request/-allowed-mentions/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Int', 'description':'dev.kord.rest.json.request.AuditLogGetRequest.component4', 'location':'rest/dev.kord.rest.json.request/-audit-log-get-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalBoolean?', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component4', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Boolean?', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component4', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Snowflake?', 'description':'dev.kord.rest.json.request.ChannelPositionSwapRequest.component4', 'location':'rest/dev.kord.rest.json.request/-channel-position-swap-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedRequest.component4', 'location':'rest/dev.kord.rest.json.request/-embed-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalInt', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component4', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Optional<VerificationLevel>', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component4', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalBoolean', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest.component4', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalBoolean?', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest.component4', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Optional<DefaultMessageNotificationLevel>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component4', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalBoolean', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.component4', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalBoolean?', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest.component4', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalBoolean', 'description':'dev.kord.rest.json.request.InviteCreateRequest.component4', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Optional<EmbedRequest>', 'description':'dev.kord.rest.json.request.MessageCreateRequest.component4', 'location':'rest/dev.kord.rest.json.request/-message-create-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Optional<AllowedMentions?>', 'description':'dev.kord.rest.json.request.MessageEditPatchRequest.component4', 'location':'rest/dev.kord.rest.json.request/-message-edit-patch-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): OptionalBoolean', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.component4', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): String', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component4', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Boolean', 'description':'dev.kord.rest.json.response.Connection.component4', 'location':'rest/dev.kord.rest.json.response/-connection/component4.html', 'searchKey':'component4'},
{'name': 'fun copy(parse: List<AllowedMentionType>, users: List<String>, roles: List<String>, repliedUser: OptionalBoolean): AllowedMentions', 'description':'dev.kord.rest.json.request.AllowedMentions.copy', 'location':'rest/dev.kord.rest.json.request/-allowed-mentions/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(userId: Snowflake?, action: AuditLogEvent?, before: Snowflake?, limit: Int): AuditLogGetRequest', 'description':'dev.kord.rest.json.request.AuditLogGetRequest.copy', 'location':'rest/dev.kord.rest.json.request/-audit-log-get-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(messages: List<Snowflake>): BulkDeleteRequest', 'description':'dev.kord.rest.json.request.BulkDeleteRequest.copy', 'location':'rest/dev.kord.rest.json.request/-bulk-delete-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: Optional<String>, position: OptionalInt?, topic: Optional<String?>, nsfw: OptionalBoolean?, rateLimitPerUser: OptionalInt?, bitrate: OptionalInt?, userLimit: OptionalInt?, permissionOverwrites: Optional<Set<Overwrite>?>, parentId: OptionalSnowflake?): ChannelModifyPatchRequest', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.copy', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, position: Int, topic: String?, nsfw: Boolean?, rateLimitPerUser: Int?, bitrate: Int?, userLimit: Int?, permissionOverwrites: List<Overwrite>, parentId: String?): ChannelModifyPutRequest', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.copy', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(allow: Permissions, deny: Permissions, type: OverwriteType): ChannelPermissionEditRequest', 'description':'dev.kord.rest.json.request.ChannelPermissionEditRequest.copy', 'location':'rest/dev.kord.rest.json.request/-channel-permission-edit-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(id: Snowflake, position: Int?, lockPermissions: Boolean?, parentId: Snowflake?): ChannelPositionSwapRequest', 'description':'dev.kord.rest.json.request.ChannelPositionSwapRequest.copy', 'location':'rest/dev.kord.rest.json.request/-channel-position-swap-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(username: Optional<String>, avatar: Optional<String?>): CurrentUserModifyRequest', 'description':'dev.kord.rest.json.request.CurrentUserModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-current-user-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(nick: Optional<String?>): CurrentUserNicknameModifyRequest', 'description':'dev.kord.rest.json.request.CurrentUserNicknameModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-current-user-nickname-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(userId: String): DMCreateRequest', 'description':'dev.kord.rest.json.request.DMCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-d-m-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: Optional<String>, url: Optional<String>, iconUrl: Optional<String>): EmbedAuthorRequest', 'description':'dev.kord.rest.json.request.EmbedAuthorRequest.copy', 'location':'rest/dev.kord.rest.json.request/-embed-author-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, value: String, inline: OptionalBoolean): EmbedFieldRequest', 'description':'dev.kord.rest.json.request.EmbedFieldRequest.copy', 'location':'rest/dev.kord.rest.json.request/-embed-field-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(text: String, iconUrl: String?): EmbedFooterRequest', 'description':'dev.kord.rest.json.request.EmbedFooterRequest.copy', 'location':'rest/dev.kord.rest.json.request/-embed-footer-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(url: String): EmbedImageRequest', 'description':'dev.kord.rest.json.request.EmbedImageRequest.copy', 'location':'rest/dev.kord.rest.json.request/-embed-image-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(title: Optional<String>, type: Optional<String>, description: Optional<String>, url: Optional<String>, timestamp: Optional<String>, color: Optional<Color>, footer: Optional<EmbedFooterRequest>, image: Optional<EmbedImageRequest>, thumbnail: Optional<EmbedThumbnailRequest>, author: Optional<EmbedAuthorRequest>, fields: Optional<List<EmbedFieldRequest>>): EmbedRequest', 'description':'dev.kord.rest.json.request.EmbedRequest.copy', 'location':'rest/dev.kord.rest.json.request/-embed-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(url: String): EmbedThumbnailRequest', 'description':'dev.kord.rest.json.request.EmbedThumbnailRequest.copy', 'location':'rest/dev.kord.rest.json.request/-embed-thumbnail-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, image: String, roles: Set<Snowflake>): EmojiCreateRequest', 'description':'dev.kord.rest.json.request.EmojiCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-emoji-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: Optional<String>, roles: Optional<Set<Snowflake>>): EmojiModifyRequest', 'description':'dev.kord.rest.json.request.EmojiModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-emoji-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(tokens: List<String>, nick: Map<String, String>): GroupDMCreateRequest', 'description':'dev.kord.rest.json.request.GroupDMCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-group-d-m-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(reason: Optional<String>, deleteMessagesDays: OptionalInt): GuildBanCreateRequest', 'description':'dev.kord.rest.json.request.GuildBanCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-ban-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, type: ChannelType, topic: Optional<String>, bitrate: OptionalInt, userLimit: OptionalInt, rateLimitPerUser: Optional<Int>, position: OptionalInt, permissionOverwrite: Optional<List<Overwrite>>, parentId: OptionalSnowflake, nsfw: OptionalBoolean, id: OptionalSnowflake): GuildChannelCreateRequest', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(swaps: List<ChannelPositionSwapRequest>): GuildChannelPositionModifyRequest', 'description':'dev.kord.rest.json.request.GuildChannelPositionModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-channel-position-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, region: Optional<String>, icon: Optional<String>, verificationLevel: Optional<VerificationLevel>, defaultNotificationLevel: Optional<DefaultMessageNotificationLevel>, explicitContentFilter: Optional<ExplicitContentFilter>, roles: Optional<List<GuildRoleCreateRequest>>, channels: Optional<List<GuildChannelCreateRequest>>, afkChannelId: OptionalSnowflake, afkTimeout: OptionalInt, systemChannelId: OptionalSnowflake): GuildCreateRequest', 'description':'dev.kord.rest.json.request.GuildCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(enabled: Boolean, channelId: Snowflake): GuildEmbedModifyRequest', 'description':'dev.kord.rest.json.request.GuildEmbedModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-embed-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(type: Int, id: String): GuildIntegrationCreateRequest', 'description':'dev.kord.rest.json.request.GuildIntegrationCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-integration-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(expireBehavior: Optional<IntegrationExpireBehavior>, expirePeriod: OptionalInt?, emoticons: OptionalBoolean): GuildIntegrationModifyRequest', 'description':'dev.kord.rest.json.request.GuildIntegrationModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-integration-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(token: String, nick: Optional<String>, roles: Optional<Iterable<Snowflake>>, mute: OptionalBoolean, deaf: OptionalBoolean): GuildMemberAddRequest', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(nick: Optional<String?>, roles: Optional<Iterable<Snowflake>?>, mute: OptionalBoolean?, deaf: OptionalBoolean?, channelId: OptionalSnowflake?): GuildMemberModifyRequest', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: Optional<String>, region: Optional<String>, verificationLevel: Optional<VerificationLevel>, defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel>, contentFilter: Optional<ExplicitContentFilter>, afkChannelId: OptionalSnowflake, afkTimeout: OptionalInt, icon: Optional<String>, ownerId: OptionalSnowflake, splash: Optional<String>, banner: Optional<String>, systemChannelId: OptionalSnowflake, rulesChannelId: OptionalSnowflake, publicUpdatesChannelId: OptionalSnowflake, preferredLocale: Optional<String>): GuildModifyRequest', 'description':'dev.kord.rest.json.request.GuildModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: Optional<String>, permissions: Optional<Permissions>, color: Optional<Color>, separate: OptionalBoolean, mentionable: OptionalBoolean, id: OptionalSnowflake): GuildRoleCreateRequest', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: Optional<String?>, permissions: Optional<Permissions?>, color: Optional<Color>, separate: OptionalBoolean?, mentionable: OptionalBoolean?): GuildRoleModifyRequest', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(swaps: List<Pair<Snowflake, Int>>): GuildRolePositionModifyRequest', 'description':'dev.kord.rest.json.request.GuildRolePositionModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-role-position-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, image: Optional<String>): GuildTemplateCreateRequest', 'description':'dev.kord.rest.json.request.GuildTemplateCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-template-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(enabled: OptionalBoolean, channelId: OptionalSnowflake?): GuildWidgetModifyRequest', 'description':'dev.kord.rest.json.request.GuildWidgetModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-guild-widget-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(age: OptionalInt, uses: OptionalInt, temporary: OptionalBoolean, unique: OptionalBoolean, targetUser: OptionalSnowflake, targetUserType: Optional<TargetUserType>): InviteCreateRequest', 'description':'dev.kord.rest.json.request.InviteCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(content: Optional<String>, nonce: Optional<String>, tts: OptionalBoolean, embed: Optional<EmbedRequest>, allowedMentions: Optional<AllowedMentions>, messageReference: Optional<DiscordMessageReference>): MessageCreateRequest', 'description':'dev.kord.rest.json.request.MessageCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-message-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(content: Optional<String?>, embed: Optional<EmbedRequest?>, flags: Optional<UserFlags?>, allowedMentions: Optional<AllowedMentions?>): MessageEditPatchRequest', 'description':'dev.kord.rest.json.request.MessageEditPatchRequest.copy', 'location':'rest/dev.kord.rest.json.request/-message-edit-patch-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(request: WebhookExecuteRequest, file: Pair<String, InputStream>?): MultiPartWebhookExecuteRequest', 'description':'dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.copy', 'location':'rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(request: MessageCreateRequest, files: List<Pair<String, InputStream>>): MultipartMessageCreateRequest', 'description':'dev.kord.rest.json.request.MultipartMessageCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-multipart-message-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(token: String, nick: String): UserAddDMRequest', 'description':'dev.kord.rest.json.request.UserAddDMRequest.copy', 'location':'rest/dev.kord.rest.json.request/-user-add-d-m-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, avatar: Optional<String>): WebhookCreateRequest', 'description':'dev.kord.rest.json.request.WebhookCreateRequest.copy', 'location':'rest/dev.kord.rest.json.request/-webhook-create-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(content: Optional<String>, username: Optional<String>, avatar: Optional<String>, tts: OptionalBoolean, embeds: Optional<List<EmbedRequest>>, allowedMentions: Optional<AllowedMentions>): WebhookExecuteRequest', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.copy', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: Optional<String>, avatar: Optional<String?>, channelId: OptionalSnowflake): WebhookModifyRequest', 'description':'dev.kord.rest.json.request.WebhookModifyRequest.copy', 'location':'rest/dev.kord.rest.json.request/-webhook-modify-request/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: List<String>?, botPublic: Boolean, botRequireCodeGrant: Boolean, owner: DiscordUser, summary: String, verifyKey: String, team: DiscordTeam?, guildId: OptionalSnowflake, primarySkuId: OptionalSnowflake, slug: Optional<String>, coverImage: Optional<String>): ApplicationInfoResponse', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.copy', 'location':'rest/dev.kord.rest.json.response/-application-info-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(reason: String?, user: DiscordUser): BanResponse', 'description':'dev.kord.rest.json.response.BanResponse.copy', 'location':'rest/dev.kord.rest.json.response/-ban-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(url: String, shards: Int, sessionStartLimit: SessionStartLimitResponse): BotGatewayResponse', 'description':'dev.kord.rest.json.response.BotGatewayResponse.copy', 'location':'rest/dev.kord.rest.json.response/-bot-gateway-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(id: String, name: String, type: String, revoked: Boolean, integrations: List<DiscordGuildIntegrations>, verified: Boolean, friendSync: Boolean, showActivity: Boolean, visibility: Int): Connection', 'description':'dev.kord.rest.json.response.Connection.copy', 'location':'rest/dev.kord.rest.json.response/-connection/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(nick: String): CurrentUserNicknameModifyResponse', 'description':'dev.kord.rest.json.response.CurrentUserNicknameModifyResponse.copy', 'location':'rest/dev.kord.rest.json.response/-current-user-nickname-modify-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(enabled: Boolean, channelId: String): EmbedResponse', 'description':'dev.kord.rest.json.response.EmbedResponse.copy', 'location':'rest/dev.kord.rest.json.response/-embed-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(channelId: Snowflake, webhookId: Snowflake): FollowedChannelResponse', 'description':'dev.kord.rest.json.response.FollowedChannelResponse.copy', 'location':'rest/dev.kord.rest.json.response/-followed-channel-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(url: String, shards: Int): GatewayResponse', 'description':'dev.kord.rest.json.response.GatewayResponse.copy', 'location':'rest/dev.kord.rest.json.response/-gateway-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(pruned: Int): GetPruneResponse', 'description':'dev.kord.rest.json.response.GetPruneResponse.copy', 'location':'rest/dev.kord.rest.json.response/-get-prune-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, type: ChannelType): PartialChannelResponse', 'description':'dev.kord.rest.json.response.PartialChannelResponse.copy', 'location':'rest/dev.kord.rest.json.response/-partial-channel-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(pruned: Int?): PruneResponse', 'description':'dev.kord.rest.json.response.PruneResponse.copy', 'location':'rest/dev.kord.rest.json.response/-prune-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(total: Int, remaining: Int, resetAfter: Int): SessionStartLimitResponse', 'description':'dev.kord.rest.json.response.SessionStartLimitResponse.copy', 'location':'rest/dev.kord.rest.json.response/-session-start-limit-response/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(total: Total, remaining: Remaining): RateLimit', 'description':'dev.kord.rest.ratelimit.RateLimit.copy', 'location':'rest/dev.kord.rest.ratelimit/-rate-limit/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset): RequestResponse.Accepted', 'description':'dev.kord.rest.ratelimit.RequestResponse.Accepted.copy', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-accepted/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(bucketKey: BucketKey, rateLimit: RateLimit?, reset: Reset): RequestResponse.BucketRateLimit', 'description':'dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.copy', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset): RequestResponse.GlobalRateLimit', 'description':'dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.copy', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(code: Int, message: String): HttpStatus', 'description':'dev.kord.rest.request.HttpStatus.copy', 'location':'rest/dev.kord.rest.request/-http-status/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(strategy: SerializationStrategy<T>, body: T): RequestBody<T>', 'description':'dev.kord.rest.request.RequestBody.copy', 'location':'rest/dev.kord.rest.request/-request-body/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(route: Route<*>, param: String): RequestIdentifier.MajorParamIdentifier', 'description':'dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.copy', 'location':'rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(route: Route<*>): RequestIdentifier.RouteIdentifier', 'description':'dev.kord.rest.request.RequestIdentifier.RouteIdentifier.copy', 'location':'rest/dev.kord.rest.request/-request-identifier/-route-identifier/copy.html', 'searchKey':'copy'},
{'name': 'data class AuditLogGetRequest(userId: Snowflake?, action: AuditLogEvent?, before: Snowflake?, limit: Int)', 'description':'dev.kord.rest.json.request.AuditLogGetRequest', 'location':'rest/dev.kord.rest.json.request/-audit-log-get-request/index.html', 'searchKey':'AuditLogGetRequest'},
{'name': 'fun AuditLogGetRequest(userId: Snowflake?, action: AuditLogEvent?, before: Snowflake?, limit: Int)', 'description':'dev.kord.rest.json.request.AuditLogGetRequest.AuditLogGetRequest', 'location':'rest/dev.kord.rest.json.request/-audit-log-get-request/-audit-log-get-request.html', 'searchKey':'AuditLogGetRequest'},
{'name': 'data class BulkDeleteRequest(messages: List<Snowflake>)', 'description':'dev.kord.rest.json.request.BulkDeleteRequest', 'location':'rest/dev.kord.rest.json.request/-bulk-delete-request/index.html', 'searchKey':'BulkDeleteRequest'},
{'name': 'fun BulkDeleteRequest(messages: List<Snowflake>)', 'description':'dev.kord.rest.json.request.BulkDeleteRequest.BulkDeleteRequest', 'location':'rest/dev.kord.rest.json.request/-bulk-delete-request/-bulk-delete-request.html', 'searchKey':'BulkDeleteRequest'},
{'name': 'class ChannelFollowRequest(webhookChannelId: String)', 'description':'dev.kord.rest.json.request.ChannelFollowRequest', 'location':'rest/dev.kord.rest.json.request/-channel-follow-request/index.html', 'searchKey':'ChannelFollowRequest'},
{'name': 'fun ChannelFollowRequest(webhookChannelId: String)', 'description':'dev.kord.rest.json.request.ChannelFollowRequest.ChannelFollowRequest', 'location':'rest/dev.kord.rest.json.request/-channel-follow-request/-channel-follow-request.html', 'searchKey':'ChannelFollowRequest'},
{'name': 'data class ChannelModifyPatchRequest(name: Optional<String>, position: OptionalInt?, topic: Optional<String?>, nsfw: OptionalBoolean?, rateLimitPerUser: OptionalInt?, bitrate: OptionalInt?, userLimit: OptionalInt?, permissionOverwrites: Optional<Set<Overwrite>?>, parentId: OptionalSnowflake?)', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/index.html', 'searchKey':'ChannelModifyPatchRequest'},
{'name': 'fun ChannelModifyPatchRequest(name: Optional<String>, position: OptionalInt?, topic: Optional<String?>, nsfw: OptionalBoolean?, rateLimitPerUser: OptionalInt?, bitrate: OptionalInt?, userLimit: OptionalInt?, permissionOverwrites: Optional<Set<Overwrite>?>, parentId: OptionalSnowflake?)', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.ChannelModifyPatchRequest', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/-channel-modify-patch-request.html', 'searchKey':'ChannelModifyPatchRequest'},
{'name': 'operator fun component5(): OptionalInt?', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component5', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Int?', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component5', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Optional<String>', 'description':'dev.kord.rest.json.request.EmbedRequest.component5', 'location':'rest/dev.kord.rest.json.request/-embed-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): OptionalInt', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component5', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Optional<DefaultMessageNotificationLevel>', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component5', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): OptionalBoolean', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest.component5', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): OptionalSnowflake?', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest.component5', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Optional<ExplicitContentFilter>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component5', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): OptionalBoolean', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.component5', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): OptionalBoolean?', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest.component5', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.InviteCreateRequest.component5', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Optional<AllowedMentions>', 'description':'dev.kord.rest.json.request.MessageCreateRequest.component5', 'location':'rest/dev.kord.rest.json.request/-message-create-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Optional<List<EmbedRequest>>', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.component5', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): List<String>?', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component5', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): List<DiscordGuildIntegrations>', 'description':'dev.kord.rest.json.response.Connection.component5', 'location':'rest/dev.kord.rest.json.response/-connection/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component6(): OptionalInt?', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component6', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Int?', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component6', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Optional<Color>', 'description':'dev.kord.rest.json.request.EmbedRequest.component6', 'location':'rest/dev.kord.rest.json.request/-embed-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Optional<Int>', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component6', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Optional<ExplicitContentFilter>', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component6', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component6', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.component6', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Optional<TargetUserType>', 'description':'dev.kord.rest.json.request.InviteCreateRequest.component6', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Optional<DiscordMessageReference>', 'description':'dev.kord.rest.json.request.MessageCreateRequest.component6', 'location':'rest/dev.kord.rest.json.request/-message-create-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Optional<AllowedMentions>', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.component6', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Boolean', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component6', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): Boolean', 'description':'dev.kord.rest.json.response.Connection.component6', 'location':'rest/dev.kord.rest.json.response/-connection/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component7(): OptionalInt?', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component7', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component7(): Int?', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component7', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component7(): Optional<EmbedFooterRequest>', 'description':'dev.kord.rest.json.request.EmbedRequest.component7', 'location':'rest/dev.kord.rest.json.request/-embed-request/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component7(): OptionalInt', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component7', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component7(): Optional<List<GuildRoleCreateRequest>>', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component7', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component7(): OptionalInt', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component7', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component7(): Boolean', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component7', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component7(): Boolean', 'description':'dev.kord.rest.json.response.Connection.component7', 'location':'rest/dev.kord.rest.json.response/-connection/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component8(): Optional<Set<Overwrite>?>', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component8', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component8(): List<Overwrite>', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component8', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component8(): Optional<EmbedImageRequest>', 'description':'dev.kord.rest.json.request.EmbedRequest.component8', 'location':'rest/dev.kord.rest.json.request/-embed-request/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component8(): Optional<List<Overwrite>>', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component8', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component8(): Optional<List<GuildChannelCreateRequest>>', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component8', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component8(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component8', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component8(): DiscordUser', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component8', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component8(): Boolean', 'description':'dev.kord.rest.json.response.Connection.component8', 'location':'rest/dev.kord.rest.json.response/-connection/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component9(): OptionalSnowflake?', 'description':'dev.kord.rest.json.request.ChannelModifyPatchRequest.component9', 'location':'rest/dev.kord.rest.json.request/-channel-modify-patch-request/component9.html', 'searchKey':'component9'},
{'name': 'operator fun component9(): String?', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.component9', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/component9.html', 'searchKey':'component9'},
{'name': 'operator fun component9(): Optional<EmbedThumbnailRequest>', 'description':'dev.kord.rest.json.request.EmbedRequest.component9', 'location':'rest/dev.kord.rest.json.request/-embed-request/component9.html', 'searchKey':'component9'},
{'name': 'operator fun component9(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component9', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component9.html', 'searchKey':'component9'},
{'name': 'operator fun component9(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component9', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component9.html', 'searchKey':'component9'},
{'name': 'operator fun component9(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component9', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component9.html', 'searchKey':'component9'},
{'name': 'operator fun component9(): String', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component9', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component9.html', 'searchKey':'component9'},
{'name': 'operator fun component9(): Int', 'description':'dev.kord.rest.json.response.Connection.component9', 'location':'rest/dev.kord.rest.json.response/-connection/component9.html', 'searchKey':'component9'},
{'name': 'data class ChannelModifyPutRequest(name: String, position: Int, topic: String?, nsfw: Boolean?, rateLimitPerUser: Int?, bitrate: Int?, userLimit: Int?, permissionOverwrites: List<Overwrite>, parentId: String?)', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/index.html', 'searchKey':'ChannelModifyPutRequest'},
{'name': 'fun ChannelModifyPutRequest(name: String, position: Int, topic: String?, nsfw: Boolean?, rateLimitPerUser: Int?, bitrate: Int?, userLimit: Int?, permissionOverwrites: List<Overwrite>, parentId: String?)', 'description':'dev.kord.rest.json.request.ChannelModifyPutRequest.ChannelModifyPutRequest', 'location':'rest/dev.kord.rest.json.request/-channel-modify-put-request/-channel-modify-put-request.html', 'searchKey':'ChannelModifyPutRequest'},
{'name': 'data class ChannelPermissionEditRequest(allow: Permissions, deny: Permissions, type: OverwriteType)', 'description':'dev.kord.rest.json.request.ChannelPermissionEditRequest', 'location':'rest/dev.kord.rest.json.request/-channel-permission-edit-request/index.html', 'searchKey':'ChannelPermissionEditRequest'},
{'name': 'fun ChannelPermissionEditRequest(allow: Permissions, deny: Permissions, type: OverwriteType)', 'description':'dev.kord.rest.json.request.ChannelPermissionEditRequest.ChannelPermissionEditRequest', 'location':'rest/dev.kord.rest.json.request/-channel-permission-edit-request/-channel-permission-edit-request.html', 'searchKey':'ChannelPermissionEditRequest'},
{'name': 'data class ChannelPositionSwapRequest(id: Snowflake, position: Int?, lockPermissions: Boolean?, parentId: Snowflake?)', 'description':'dev.kord.rest.json.request.ChannelPositionSwapRequest', 'location':'rest/dev.kord.rest.json.request/-channel-position-swap-request/index.html', 'searchKey':'ChannelPositionSwapRequest'},
{'name': 'fun ChannelPositionSwapRequest(id: Snowflake, position: Int?, lockPermissions: Boolean?, parentId: Snowflake?)', 'description':'dev.kord.rest.json.request.ChannelPositionSwapRequest.ChannelPositionSwapRequest', 'location':'rest/dev.kord.rest.json.request/-channel-position-swap-request/-channel-position-swap-request.html', 'searchKey':'ChannelPositionSwapRequest'},
{'name': 'data class CurrentUserModifyRequest(username: Optional<String>, avatar: Optional<String?>)', 'description':'dev.kord.rest.json.request.CurrentUserModifyRequest', 'location':'rest/dev.kord.rest.json.request/-current-user-modify-request/index.html', 'searchKey':'CurrentUserModifyRequest'},
{'name': 'fun CurrentUserModifyRequest(username: Optional<String>, avatar: Optional<String?>)', 'description':'dev.kord.rest.json.request.CurrentUserModifyRequest.CurrentUserModifyRequest', 'location':'rest/dev.kord.rest.json.request/-current-user-modify-request/-current-user-modify-request.html', 'searchKey':'CurrentUserModifyRequest'},
{'name': 'data class CurrentUserNicknameModifyRequest(nick: Optional<String?>)', 'description':'dev.kord.rest.json.request.CurrentUserNicknameModifyRequest', 'location':'rest/dev.kord.rest.json.request/-current-user-nickname-modify-request/index.html', 'searchKey':'CurrentUserNicknameModifyRequest'},
{'name': 'fun CurrentUserNicknameModifyRequest(nick: Optional<String?>)', 'description':'dev.kord.rest.json.request.CurrentUserNicknameModifyRequest.CurrentUserNicknameModifyRequest', 'location':'rest/dev.kord.rest.json.request/-current-user-nickname-modify-request/-current-user-nickname-modify-request.html', 'searchKey':'CurrentUserNicknameModifyRequest'},
{'name': 'data class DMCreateRequest(userId: String)', 'description':'dev.kord.rest.json.request.DMCreateRequest', 'location':'rest/dev.kord.rest.json.request/-d-m-create-request/index.html', 'searchKey':'DMCreateRequest'},
{'name': 'fun DMCreateRequest(userId: String)', 'description':'dev.kord.rest.json.request.DMCreateRequest.DMCreateRequest', 'location':'rest/dev.kord.rest.json.request/-d-m-create-request/-d-m-create-request.html', 'searchKey':'DMCreateRequest'},
{'name': 'data class EmbedAuthorRequest(name: Optional<String>, url: Optional<String>, iconUrl: Optional<String>)', 'description':'dev.kord.rest.json.request.EmbedAuthorRequest', 'location':'rest/dev.kord.rest.json.request/-embed-author-request/index.html', 'searchKey':'EmbedAuthorRequest'},
{'name': 'fun EmbedAuthorRequest(name: Optional<String>, url: Optional<String>, iconUrl: Optional<String>)', 'description':'dev.kord.rest.json.request.EmbedAuthorRequest.EmbedAuthorRequest', 'location':'rest/dev.kord.rest.json.request/-embed-author-request/-embed-author-request.html', 'searchKey':'EmbedAuthorRequest'},
{'name': 'data class EmbedFieldRequest(name: String, value: String, inline: OptionalBoolean)', 'description':'dev.kord.rest.json.request.EmbedFieldRequest', 'location':'rest/dev.kord.rest.json.request/-embed-field-request/index.html', 'searchKey':'EmbedFieldRequest'},
{'name': 'fun EmbedFieldRequest(name: String, value: String, inline: OptionalBoolean)', 'description':'dev.kord.rest.json.request.EmbedFieldRequest.EmbedFieldRequest', 'location':'rest/dev.kord.rest.json.request/-embed-field-request/-embed-field-request.html', 'searchKey':'EmbedFieldRequest'},
{'name': 'data class EmbedFooterRequest(text: String, iconUrl: String?)', 'description':'dev.kord.rest.json.request.EmbedFooterRequest', 'location':'rest/dev.kord.rest.json.request/-embed-footer-request/index.html', 'searchKey':'EmbedFooterRequest'},
{'name': 'fun EmbedFooterRequest(text: String, iconUrl: String?)', 'description':'dev.kord.rest.json.request.EmbedFooterRequest.EmbedFooterRequest', 'location':'rest/dev.kord.rest.json.request/-embed-footer-request/-embed-footer-request.html', 'searchKey':'EmbedFooterRequest'},
{'name': 'data class EmbedImageRequest(url: String)', 'description':'dev.kord.rest.json.request.EmbedImageRequest', 'location':'rest/dev.kord.rest.json.request/-embed-image-request/index.html', 'searchKey':'EmbedImageRequest'},
{'name': 'fun EmbedImageRequest(url: String)', 'description':'dev.kord.rest.json.request.EmbedImageRequest.EmbedImageRequest', 'location':'rest/dev.kord.rest.json.request/-embed-image-request/-embed-image-request.html', 'searchKey':'EmbedImageRequest'},
{'name': 'data class EmbedRequest(title: Optional<String>, type: Optional<String>, description: Optional<String>, url: Optional<String>, timestamp: Optional<String>, color: Optional<Color>, footer: Optional<EmbedFooterRequest>, image: Optional<EmbedImageRequest>, thumbnail: Optional<EmbedThumbnailRequest>, author: Optional<EmbedAuthorRequest>, fields: Optional<List<EmbedFieldRequest>>)', 'description':'dev.kord.rest.json.request.EmbedRequest', 'location':'rest/dev.kord.rest.json.request/-embed-request/index.html', 'searchKey':'EmbedRequest'},
{'name': 'fun EmbedRequest(title: Optional<String>, type: Optional<String>, description: Optional<String>, url: Optional<String>, timestamp: Optional<String>, color: Optional<Color>, footer: Optional<EmbedFooterRequest>, image: Optional<EmbedImageRequest>, thumbnail: Optional<EmbedThumbnailRequest>, author: Optional<EmbedAuthorRequest>, fields: Optional<List<EmbedFieldRequest>>)', 'description':'dev.kord.rest.json.request.EmbedRequest.EmbedRequest', 'location':'rest/dev.kord.rest.json.request/-embed-request/-embed-request.html', 'searchKey':'EmbedRequest'},
{'name': 'operator fun component10(): Optional<EmbedAuthorRequest>', 'description':'dev.kord.rest.json.request.EmbedRequest.component10', 'location':'rest/dev.kord.rest.json.request/-embed-request/component10.html', 'searchKey':'component10'},
{'name': 'operator fun component10(): OptionalBoolean', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component10', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component10.html', 'searchKey':'component10'},
{'name': 'operator fun component10(): OptionalInt', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component10', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component10.html', 'searchKey':'component10'},
{'name': 'operator fun component10(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component10', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component10.html', 'searchKey':'component10'},
{'name': 'operator fun component10(): String', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component10', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component10.html', 'searchKey':'component10'},
{'name': 'operator fun component11(): Optional<List<EmbedFieldRequest>>', 'description':'dev.kord.rest.json.request.EmbedRequest.component11', 'location':'rest/dev.kord.rest.json.request/-embed-request/component11.html', 'searchKey':'component11'},
{'name': 'operator fun component11(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.component11', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/component11.html', 'searchKey':'component11'},
{'name': 'operator fun component11(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildCreateRequest.component11', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/component11.html', 'searchKey':'component11'},
{'name': 'operator fun component11(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component11', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component11.html', 'searchKey':'component11'},
{'name': 'operator fun component11(): DiscordTeam?', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component11', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component11.html', 'searchKey':'component11'},
{'name': 'data class EmbedThumbnailRequest(url: String)', 'description':'dev.kord.rest.json.request.EmbedThumbnailRequest', 'location':'rest/dev.kord.rest.json.request/-embed-thumbnail-request/index.html', 'searchKey':'EmbedThumbnailRequest'},
{'name': 'fun EmbedThumbnailRequest(url: String)', 'description':'dev.kord.rest.json.request.EmbedThumbnailRequest.EmbedThumbnailRequest', 'location':'rest/dev.kord.rest.json.request/-embed-thumbnail-request/-embed-thumbnail-request.html', 'searchKey':'EmbedThumbnailRequest'},
{'name': 'data class EmojiCreateRequest(name: String, image: String, roles: Set<Snowflake>)', 'description':'dev.kord.rest.json.request.EmojiCreateRequest', 'location':'rest/dev.kord.rest.json.request/-emoji-create-request/index.html', 'searchKey':'EmojiCreateRequest'},
{'name': 'fun EmojiCreateRequest(name: String, image: String, roles: Set<Snowflake>)', 'description':'dev.kord.rest.json.request.EmojiCreateRequest.EmojiCreateRequest', 'location':'rest/dev.kord.rest.json.request/-emoji-create-request/-emoji-create-request.html', 'searchKey':'EmojiCreateRequest'},
{'name': 'data class EmojiModifyRequest(name: Optional<String>, roles: Optional<Set<Snowflake>>)', 'description':'dev.kord.rest.json.request.EmojiModifyRequest', 'location':'rest/dev.kord.rest.json.request/-emoji-modify-request/index.html', 'searchKey':'EmojiModifyRequest'},
{'name': 'fun EmojiModifyRequest(name: Optional<String>, roles: Optional<Set<Snowflake>>)', 'description':'dev.kord.rest.json.request.EmojiModifyRequest.EmojiModifyRequest', 'location':'rest/dev.kord.rest.json.request/-emoji-modify-request/-emoji-modify-request.html', 'searchKey':'EmojiModifyRequest'},
{'name': 'data class GroupDMCreateRequest(tokens: List<String>, nick: Map<String, String>)', 'description':'dev.kord.rest.json.request.GroupDMCreateRequest', 'location':'rest/dev.kord.rest.json.request/-group-d-m-create-request/index.html', 'searchKey':'GroupDMCreateRequest'},
{'name': 'fun GroupDMCreateRequest(tokens: List<String>, nick: Map<String, String>)', 'description':'dev.kord.rest.json.request.GroupDMCreateRequest.GroupDMCreateRequest', 'location':'rest/dev.kord.rest.json.request/-group-d-m-create-request/-group-d-m-create-request.html', 'searchKey':'GroupDMCreateRequest'},
{'name': 'data class GuildBanCreateRequest(reason: Optional<String>, deleteMessagesDays: OptionalInt)', 'description':'dev.kord.rest.json.request.GuildBanCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-ban-create-request/index.html', 'searchKey':'GuildBanCreateRequest'},
{'name': 'fun GuildBanCreateRequest(reason: Optional<String>, deleteMessagesDays: OptionalInt)', 'description':'dev.kord.rest.json.request.GuildBanCreateRequest.GuildBanCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-ban-create-request/-guild-ban-create-request.html', 'searchKey':'GuildBanCreateRequest'},
{'name': 'data class GuildChannelCreateRequest(name: String, type: ChannelType, topic: Optional<String>, bitrate: OptionalInt, userLimit: OptionalInt, rateLimitPerUser: Optional<Int>, position: OptionalInt, permissionOverwrite: Optional<List<Overwrite>>, parentId: OptionalSnowflake, nsfw: OptionalBoolean, id: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/index.html', 'searchKey':'GuildChannelCreateRequest'},
{'name': 'fun GuildChannelCreateRequest(name: String, type: ChannelType, topic: Optional<String>, bitrate: OptionalInt, userLimit: OptionalInt, rateLimitPerUser: Optional<Int>, position: OptionalInt, permissionOverwrite: Optional<List<Overwrite>>, parentId: OptionalSnowflake, nsfw: OptionalBoolean, id: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.GuildChannelCreateRequest.GuildChannelCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-channel-create-request/-guild-channel-create-request.html', 'searchKey':'GuildChannelCreateRequest'},
{'name': 'data class GuildChannelPositionModifyRequest(swaps: List<ChannelPositionSwapRequest>)', 'description':'dev.kord.rest.json.request.GuildChannelPositionModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-channel-position-modify-request/index.html', 'searchKey':'GuildChannelPositionModifyRequest'},
{'name': 'fun GuildChannelPositionModifyRequest(swaps: List<ChannelPositionSwapRequest>)', 'description':'dev.kord.rest.json.request.GuildChannelPositionModifyRequest.GuildChannelPositionModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-channel-position-modify-request/-guild-channel-position-modify-request.html', 'searchKey':'GuildChannelPositionModifyRequest'},
{'name': 'data class GuildCreateRequest(name: String, region: Optional<String>, icon: Optional<String>, verificationLevel: Optional<VerificationLevel>, defaultNotificationLevel: Optional<DefaultMessageNotificationLevel>, explicitContentFilter: Optional<ExplicitContentFilter>, roles: Optional<List<GuildRoleCreateRequest>>, channels: Optional<List<GuildChannelCreateRequest>>, afkChannelId: OptionalSnowflake, afkTimeout: OptionalInt, systemChannelId: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.GuildCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/index.html', 'searchKey':'GuildCreateRequest'},
{'name': 'fun GuildCreateRequest(name: String, region: Optional<String>, icon: Optional<String>, verificationLevel: Optional<VerificationLevel>, defaultNotificationLevel: Optional<DefaultMessageNotificationLevel>, explicitContentFilter: Optional<ExplicitContentFilter>, roles: Optional<List<GuildRoleCreateRequest>>, channels: Optional<List<GuildChannelCreateRequest>>, afkChannelId: OptionalSnowflake, afkTimeout: OptionalInt, systemChannelId: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.GuildCreateRequest.GuildCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-create-request/-guild-create-request.html', 'searchKey':'GuildCreateRequest'},
{'name': 'data class GuildEmbedModifyRequest(enabled: Boolean, channelId: Snowflake)', 'description':'dev.kord.rest.json.request.GuildEmbedModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-embed-modify-request/index.html', 'searchKey':'GuildEmbedModifyRequest'},
{'name': 'fun GuildEmbedModifyRequest(enabled: Boolean, channelId: Snowflake)', 'description':'dev.kord.rest.json.request.GuildEmbedModifyRequest.GuildEmbedModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-embed-modify-request/-guild-embed-modify-request.html', 'searchKey':'GuildEmbedModifyRequest'},
{'name': 'data class GuildIntegrationCreateRequest(type: Int, id: String)', 'description':'dev.kord.rest.json.request.GuildIntegrationCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-integration-create-request/index.html', 'searchKey':'GuildIntegrationCreateRequest'},
{'name': 'fun GuildIntegrationCreateRequest(type: Int, id: String)', 'description':'dev.kord.rest.json.request.GuildIntegrationCreateRequest.GuildIntegrationCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-integration-create-request/-guild-integration-create-request.html', 'searchKey':'GuildIntegrationCreateRequest'},
{'name': 'data class GuildIntegrationModifyRequest(expireBehavior: Optional<IntegrationExpireBehavior>, expirePeriod: OptionalInt?, emoticons: OptionalBoolean)', 'description':'dev.kord.rest.json.request.GuildIntegrationModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-integration-modify-request/index.html', 'searchKey':'GuildIntegrationModifyRequest'},
{'name': 'fun GuildIntegrationModifyRequest(expireBehavior: Optional<IntegrationExpireBehavior>, expirePeriod: OptionalInt?, emoticons: OptionalBoolean)', 'description':'dev.kord.rest.json.request.GuildIntegrationModifyRequest.GuildIntegrationModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-integration-modify-request/-guild-integration-modify-request.html', 'searchKey':'GuildIntegrationModifyRequest'},
{'name': 'data class GuildMemberAddRequest(token: String, nick: Optional<String>, roles: Optional<Iterable<Snowflake>>, mute: OptionalBoolean, deaf: OptionalBoolean)', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/index.html', 'searchKey':'GuildMemberAddRequest'},
{'name': 'fun GuildMemberAddRequest(token: String, nick: Optional<String>, roles: Optional<Iterable<Snowflake>>, mute: OptionalBoolean, deaf: OptionalBoolean)', 'description':'dev.kord.rest.json.request.GuildMemberAddRequest.GuildMemberAddRequest', 'location':'rest/dev.kord.rest.json.request/-guild-member-add-request/-guild-member-add-request.html', 'searchKey':'GuildMemberAddRequest'},
{'name': 'data class GuildMemberModifyRequest(nick: Optional<String?>, roles: Optional<Iterable<Snowflake>?>, mute: OptionalBoolean?, deaf: OptionalBoolean?, channelId: OptionalSnowflake?)', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/index.html', 'searchKey':'GuildMemberModifyRequest'},
{'name': 'fun GuildMemberModifyRequest(nick: Optional<String?>, roles: Optional<Iterable<Snowflake>?>, mute: OptionalBoolean?, deaf: OptionalBoolean?, channelId: OptionalSnowflake?)', 'description':'dev.kord.rest.json.request.GuildMemberModifyRequest.GuildMemberModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-member-modify-request/-guild-member-modify-request.html', 'searchKey':'GuildMemberModifyRequest'},
{'name': 'data class GuildModifyRequest(name: Optional<String>, region: Optional<String>, verificationLevel: Optional<VerificationLevel>, defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel>, contentFilter: Optional<ExplicitContentFilter>, afkChannelId: OptionalSnowflake, afkTimeout: OptionalInt, icon: Optional<String>, ownerId: OptionalSnowflake, splash: Optional<String>, banner: Optional<String>, systemChannelId: OptionalSnowflake, rulesChannelId: OptionalSnowflake, publicUpdatesChannelId: OptionalSnowflake, preferredLocale: Optional<String>)', 'description':'dev.kord.rest.json.request.GuildModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/index.html', 'searchKey':'GuildModifyRequest'},
{'name': 'fun GuildModifyRequest(name: Optional<String>, region: Optional<String>, verificationLevel: Optional<VerificationLevel>, defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel>, contentFilter: Optional<ExplicitContentFilter>, afkChannelId: OptionalSnowflake, afkTimeout: OptionalInt, icon: Optional<String>, ownerId: OptionalSnowflake, splash: Optional<String>, banner: Optional<String>, systemChannelId: OptionalSnowflake, rulesChannelId: OptionalSnowflake, publicUpdatesChannelId: OptionalSnowflake, preferredLocale: Optional<String>)', 'description':'dev.kord.rest.json.request.GuildModifyRequest.GuildModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/-guild-modify-request.html', 'searchKey':'GuildModifyRequest'},
{'name': 'operator fun component12(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component12', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component12.html', 'searchKey':'component12'},
{'name': 'operator fun component12(): OptionalSnowflake', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component12', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component12.html', 'searchKey':'component12'},
{'name': 'operator fun component13(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component13', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component13.html', 'searchKey':'component13'},
{'name': 'operator fun component13(): OptionalSnowflake', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component13', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component13.html', 'searchKey':'component13'},
{'name': 'operator fun component14(): OptionalSnowflake', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component14', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component14.html', 'searchKey':'component14'},
{'name': 'operator fun component14(): Optional<String>', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component14', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component14.html', 'searchKey':'component14'},
{'name': 'operator fun component15(): Optional<String>', 'description':'dev.kord.rest.json.request.GuildModifyRequest.component15', 'location':'rest/dev.kord.rest.json.request/-guild-modify-request/component15.html', 'searchKey':'component15'},
{'name': 'operator fun component15(): Optional<String>', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.component15', 'location':'rest/dev.kord.rest.json.response/-application-info-response/component15.html', 'searchKey':'component15'},
{'name': 'data class GuildRoleCreateRequest(name: Optional<String>, permissions: Optional<Permissions>, color: Optional<Color>, separate: OptionalBoolean, mentionable: OptionalBoolean, id: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/index.html', 'searchKey':'GuildRoleCreateRequest'},
{'name': 'fun GuildRoleCreateRequest(name: Optional<String>, permissions: Optional<Permissions>, color: Optional<Color>, separate: OptionalBoolean, mentionable: OptionalBoolean, id: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.GuildRoleCreateRequest.GuildRoleCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-role-create-request/-guild-role-create-request.html', 'searchKey':'GuildRoleCreateRequest'},
{'name': 'data class GuildRoleModifyRequest(name: Optional<String?>, permissions: Optional<Permissions?>, color: Optional<Color>, separate: OptionalBoolean?, mentionable: OptionalBoolean?)', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/index.html', 'searchKey':'GuildRoleModifyRequest'},
{'name': 'fun GuildRoleModifyRequest(name: Optional<String?>, permissions: Optional<Permissions?>, color: Optional<Color>, separate: OptionalBoolean?, mentionable: OptionalBoolean?)', 'description':'dev.kord.rest.json.request.GuildRoleModifyRequest.GuildRoleModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-role-modify-request/-guild-role-modify-request.html', 'searchKey':'GuildRoleModifyRequest'},
{'name': 'data class GuildRolePositionModifyRequest(swaps: List<Pair<Snowflake, Int>>)', 'description':'dev.kord.rest.json.request.GuildRolePositionModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-role-position-modify-request/index.html', 'searchKey':'GuildRolePositionModifyRequest'},
{'name': 'fun GuildRolePositionModifyRequest(swaps: List<Pair<Snowflake, Int>>)', 'description':'dev.kord.rest.json.request.GuildRolePositionModifyRequest.GuildRolePositionModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-role-position-modify-request/-guild-role-position-modify-request.html', 'searchKey':'GuildRolePositionModifyRequest'},
{'name': 'data class GuildTemplateCreateRequest(name: String, image: Optional<String>)', 'description':'dev.kord.rest.json.request.GuildTemplateCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-template-create-request/index.html', 'searchKey':'GuildTemplateCreateRequest'},
{'name': 'fun GuildTemplateCreateRequest(name: String, image: Optional<String>)', 'description':'dev.kord.rest.json.request.GuildTemplateCreateRequest.GuildTemplateCreateRequest', 'location':'rest/dev.kord.rest.json.request/-guild-template-create-request/-guild-template-create-request.html', 'searchKey':'GuildTemplateCreateRequest'},
{'name': 'data class GuildWidgetModifyRequest(enabled: OptionalBoolean, channelId: OptionalSnowflake?)', 'description':'dev.kord.rest.json.request.GuildWidgetModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-widget-modify-request/index.html', 'searchKey':'GuildWidgetModifyRequest'},
{'name': 'fun GuildWidgetModifyRequest(enabled: OptionalBoolean, channelId: OptionalSnowflake?)', 'description':'dev.kord.rest.json.request.GuildWidgetModifyRequest.GuildWidgetModifyRequest', 'location':'rest/dev.kord.rest.json.request/-guild-widget-modify-request/-guild-widget-modify-request.html', 'searchKey':'GuildWidgetModifyRequest'},
{'name': 'data class InviteCreateRequest(age: OptionalInt, uses: OptionalInt, temporary: OptionalBoolean, unique: OptionalBoolean, targetUser: OptionalSnowflake, targetUserType: Optional<TargetUserType>)', 'description':'dev.kord.rest.json.request.InviteCreateRequest', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/index.html', 'searchKey':'InviteCreateRequest'},
{'name': 'fun InviteCreateRequest(age: OptionalInt, uses: OptionalInt, temporary: OptionalBoolean, unique: OptionalBoolean, targetUser: OptionalSnowflake, targetUserType: Optional<TargetUserType>)', 'description':'dev.kord.rest.json.request.InviteCreateRequest.InviteCreateRequest', 'location':'rest/dev.kord.rest.json.request/-invite-create-request/-invite-create-request.html', 'searchKey':'InviteCreateRequest'},
{'name': 'data class MessageCreateRequest(content: Optional<String>, nonce: Optional<String>, tts: OptionalBoolean, embed: Optional<EmbedRequest>, allowedMentions: Optional<AllowedMentions>, messageReference: Optional<DiscordMessageReference>)', 'description':'dev.kord.rest.json.request.MessageCreateRequest', 'location':'rest/dev.kord.rest.json.request/-message-create-request/index.html', 'searchKey':'MessageCreateRequest'},
{'name': 'fun MessageCreateRequest(content: Optional<String>, nonce: Optional<String>, tts: OptionalBoolean, embed: Optional<EmbedRequest>, allowedMentions: Optional<AllowedMentions>, messageReference: Optional<DiscordMessageReference>)', 'description':'dev.kord.rest.json.request.MessageCreateRequest.MessageCreateRequest', 'location':'rest/dev.kord.rest.json.request/-message-create-request/-message-create-request.html', 'searchKey':'MessageCreateRequest'},
{'name': 'data class MessageEditPatchRequest(content: Optional<String?>, embed: Optional<EmbedRequest?>, flags: Optional<UserFlags?>, allowedMentions: Optional<AllowedMentions?>)', 'description':'dev.kord.rest.json.request.MessageEditPatchRequest', 'location':'rest/dev.kord.rest.json.request/-message-edit-patch-request/index.html', 'searchKey':'MessageEditPatchRequest'},
{'name': 'fun MessageEditPatchRequest(content: Optional<String?>, embed: Optional<EmbedRequest?>, flags: Optional<UserFlags?>, allowedMentions: Optional<AllowedMentions?>)', 'description':'dev.kord.rest.json.request.MessageEditPatchRequest.MessageEditPatchRequest', 'location':'rest/dev.kord.rest.json.request/-message-edit-patch-request/-message-edit-patch-request.html', 'searchKey':'MessageEditPatchRequest'},
{'name': 'data class MultiPartWebhookExecuteRequest(request: WebhookExecuteRequest, file: Pair<String, InputStream>?)', 'description':'dev.kord.rest.json.request.MultiPartWebhookExecuteRequest', 'location':'rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/index.html', 'searchKey':'MultiPartWebhookExecuteRequest'},
{'name': 'fun MultiPartWebhookExecuteRequest(request: WebhookExecuteRequest, file: Pair<String, InputStream>?)', 'description':'dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.MultiPartWebhookExecuteRequest', 'location':'rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/-multi-part-webhook-execute-request.html', 'searchKey':'MultiPartWebhookExecuteRequest'},
{'name': 'data class MultipartMessageCreateRequest(request: MessageCreateRequest, files: List<Pair<String, InputStream>>)', 'description':'dev.kord.rest.json.request.MultipartMessageCreateRequest', 'location':'rest/dev.kord.rest.json.request/-multipart-message-create-request/index.html', 'searchKey':'MultipartMessageCreateRequest'},
{'name': 'fun MultipartMessageCreateRequest(request: MessageCreateRequest, files: List<Pair<String, InputStream>>)', 'description':'dev.kord.rest.json.request.MultipartMessageCreateRequest.MultipartMessageCreateRequest', 'location':'rest/dev.kord.rest.json.request/-multipart-message-create-request/-multipart-message-create-request.html', 'searchKey':'MultipartMessageCreateRequest'},
{'name': 'data class UserAddDMRequest(token: String, nick: String)', 'description':'dev.kord.rest.json.request.UserAddDMRequest', 'location':'rest/dev.kord.rest.json.request/-user-add-d-m-request/index.html', 'searchKey':'UserAddDMRequest'},
{'name': 'fun UserAddDMRequest(token: String, nick: String)', 'description':'dev.kord.rest.json.request.UserAddDMRequest.UserAddDMRequest', 'location':'rest/dev.kord.rest.json.request/-user-add-d-m-request/-user-add-d-m-request.html', 'searchKey':'UserAddDMRequest'},
{'name': 'data class WebhookCreateRequest(name: String, avatar: Optional<String>)', 'description':'dev.kord.rest.json.request.WebhookCreateRequest', 'location':'rest/dev.kord.rest.json.request/-webhook-create-request/index.html', 'searchKey':'WebhookCreateRequest'},
{'name': 'fun WebhookCreateRequest(name: String, avatar: Optional<String>)', 'description':'dev.kord.rest.json.request.WebhookCreateRequest.WebhookCreateRequest', 'location':'rest/dev.kord.rest.json.request/-webhook-create-request/-webhook-create-request.html', 'searchKey':'WebhookCreateRequest'},
{'name': 'data class WebhookExecuteRequest(content: Optional<String>, username: Optional<String>, avatar: Optional<String>, tts: OptionalBoolean, embeds: Optional<List<EmbedRequest>>, allowedMentions: Optional<AllowedMentions>)', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/index.html', 'searchKey':'WebhookExecuteRequest'},
{'name': 'fun WebhookExecuteRequest(content: Optional<String>, username: Optional<String>, avatar: Optional<String>, tts: OptionalBoolean, embeds: Optional<List<EmbedRequest>>, allowedMentions: Optional<AllowedMentions>)', 'description':'dev.kord.rest.json.request.WebhookExecuteRequest.WebhookExecuteRequest', 'location':'rest/dev.kord.rest.json.request/-webhook-execute-request/-webhook-execute-request.html', 'searchKey':'WebhookExecuteRequest'},
{'name': 'data class WebhookModifyRequest(name: Optional<String>, avatar: Optional<String?>, channelId: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.WebhookModifyRequest', 'location':'rest/dev.kord.rest.json.request/-webhook-modify-request/index.html', 'searchKey':'WebhookModifyRequest'},
{'name': 'fun WebhookModifyRequest(name: Optional<String>, avatar: Optional<String?>, channelId: OptionalSnowflake)', 'description':'dev.kord.rest.json.request.WebhookModifyRequest.WebhookModifyRequest', 'location':'rest/dev.kord.rest.json.request/-webhook-modify-request/-webhook-modify-request.html', 'searchKey':'WebhookModifyRequest'},
{'name': 'data class ApplicationInfoResponse(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: List<String>?, botPublic: Boolean, botRequireCodeGrant: Boolean, owner: DiscordUser, summary: String, verifyKey: String, team: DiscordTeam?, guildId: OptionalSnowflake, primarySkuId: OptionalSnowflake, slug: Optional<String>, coverImage: Optional<String>)', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse', 'location':'rest/dev.kord.rest.json.response/-application-info-response/index.html', 'searchKey':'ApplicationInfoResponse'},
{'name': 'fun ApplicationInfoResponse(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: List<String>?, botPublic: Boolean, botRequireCodeGrant: Boolean, owner: DiscordUser, summary: String, verifyKey: String, team: DiscordTeam?, guildId: OptionalSnowflake, primarySkuId: OptionalSnowflake, slug: Optional<String>, coverImage: Optional<String>)', 'description':'dev.kord.rest.json.response.ApplicationInfoResponse.ApplicationInfoResponse', 'location':'rest/dev.kord.rest.json.response/-application-info-response/-application-info-response.html', 'searchKey':'ApplicationInfoResponse'},
{'name': 'data class BanResponse(reason: String?, user: DiscordUser)', 'description':'dev.kord.rest.json.response.BanResponse', 'location':'rest/dev.kord.rest.json.response/-ban-response/index.html', 'searchKey':'BanResponse'},
{'name': 'fun BanResponse(reason: String?, user: DiscordUser)', 'description':'dev.kord.rest.json.response.BanResponse.BanResponse', 'location':'rest/dev.kord.rest.json.response/-ban-response/-ban-response.html', 'searchKey':'BanResponse'},
{'name': 'data class BotGatewayResponse(url: String, shards: Int, sessionStartLimit: SessionStartLimitResponse)', 'description':'dev.kord.rest.json.response.BotGatewayResponse', 'location':'rest/dev.kord.rest.json.response/-bot-gateway-response/index.html', 'searchKey':'BotGatewayResponse'},
{'name': 'fun BotGatewayResponse(url: String, shards: Int, sessionStartLimit: SessionStartLimitResponse)', 'description':'dev.kord.rest.json.response.BotGatewayResponse.BotGatewayResponse', 'location':'rest/dev.kord.rest.json.response/-bot-gateway-response/-bot-gateway-response.html', 'searchKey':'BotGatewayResponse'},
{'name': 'data class Connection(id: String, name: String, type: String, revoked: Boolean, integrations: List<DiscordGuildIntegrations>, verified: Boolean, friendSync: Boolean, showActivity: Boolean, visibility: Int)', 'description':'dev.kord.rest.json.response.Connection', 'location':'rest/dev.kord.rest.json.response/-connection/index.html', 'searchKey':'Connection'},
{'name': 'fun Connection(id: String, name: String, type: String, revoked: Boolean, integrations: List<DiscordGuildIntegrations>, verified: Boolean, friendSync: Boolean, showActivity: Boolean, visibility: Int)', 'description':'dev.kord.rest.json.response.Connection.Connection', 'location':'rest/dev.kord.rest.json.response/-connection/-connection.html', 'searchKey':'Connection'},
{'name': 'data class CurrentUserNicknameModifyResponse(nick: String)', 'description':'dev.kord.rest.json.response.CurrentUserNicknameModifyResponse', 'location':'rest/dev.kord.rest.json.response/-current-user-nickname-modify-response/index.html', 'searchKey':'CurrentUserNicknameModifyResponse'},
{'name': 'fun CurrentUserNicknameModifyResponse(nick: String)', 'description':'dev.kord.rest.json.response.CurrentUserNicknameModifyResponse.CurrentUserNicknameModifyResponse', 'location':'rest/dev.kord.rest.json.response/-current-user-nickname-modify-response/-current-user-nickname-modify-response.html', 'searchKey':'CurrentUserNicknameModifyResponse'},
{'name': 'class DiscordErrorDetail(code: String, message: String)', 'description':'dev.kord.rest.json.response.DiscordErrorDetail', 'location':'rest/dev.kord.rest.json.response/-discord-error-detail/index.html', 'searchKey':'DiscordErrorDetail'},
{'name': 'fun DiscordErrorDetail(code: String, message: String)', 'description':'dev.kord.rest.json.response.DiscordErrorDetail.DiscordErrorDetail', 'location':'rest/dev.kord.rest.json.response/-discord-error-detail/-discord-error-detail.html', 'searchKey':'DiscordErrorDetail'},
{'name': 'class DiscordErrorResponse(code: JsonErrorCode, errors: Map<String, DiscordFieldError>, message: String)', 'description':'dev.kord.rest.json.response.DiscordErrorResponse', 'location':'rest/dev.kord.rest.json.response/-discord-error-response/index.html', 'searchKey':'DiscordErrorResponse'},
{'name': 'fun DiscordErrorResponse(code: JsonErrorCode, errors: Map<String, DiscordFieldError>, message: String)', 'description':'dev.kord.rest.json.response.DiscordErrorResponse.DiscordErrorResponse', 'location':'rest/dev.kord.rest.json.response/-discord-error-response/-discord-error-response.html', 'searchKey':'DiscordErrorResponse'},
{'name': 'class DiscordFieldError(errors: List<DiscordErrorDetail>)', 'description':'dev.kord.rest.json.response.DiscordFieldError', 'location':'rest/dev.kord.rest.json.response/-discord-field-error/index.html', 'searchKey':'DiscordFieldError'},
{'name': 'fun DiscordFieldError(errors: List<DiscordErrorDetail>)', 'description':'dev.kord.rest.json.response.DiscordFieldError.DiscordFieldError', 'location':'rest/dev.kord.rest.json.response/-discord-field-error/-discord-field-error.html', 'searchKey':'DiscordFieldError'},
{'name': 'data class EmbedResponse(enabled: Boolean, channelId: String)', 'description':'dev.kord.rest.json.response.EmbedResponse', 'location':'rest/dev.kord.rest.json.response/-embed-response/index.html', 'searchKey':'EmbedResponse'},
{'name': 'fun EmbedResponse(enabled: Boolean, channelId: String)', 'description':'dev.kord.rest.json.response.EmbedResponse.EmbedResponse', 'location':'rest/dev.kord.rest.json.response/-embed-response/-embed-response.html', 'searchKey':'EmbedResponse'},
{'name': 'data class FollowedChannelResponse(channelId: Snowflake, webhookId: Snowflake)', 'description':'dev.kord.rest.json.response.FollowedChannelResponse', 'location':'rest/dev.kord.rest.json.response/-followed-channel-response/index.html', 'searchKey':'FollowedChannelResponse'},
{'name': 'fun FollowedChannelResponse(channelId: Snowflake, webhookId: Snowflake)', 'description':'dev.kord.rest.json.response.FollowedChannelResponse.FollowedChannelResponse', 'location':'rest/dev.kord.rest.json.response/-followed-channel-response/-followed-channel-response.html', 'searchKey':'FollowedChannelResponse'},
{'name': 'data class GatewayResponse(url: String, shards: Int)', 'description':'dev.kord.rest.json.response.GatewayResponse', 'location':'rest/dev.kord.rest.json.response/-gateway-response/index.html', 'searchKey':'GatewayResponse'},
{'name': 'fun GatewayResponse(url: String, shards: Int)', 'description':'dev.kord.rest.json.response.GatewayResponse.GatewayResponse', 'location':'rest/dev.kord.rest.json.response/-gateway-response/-gateway-response.html', 'searchKey':'GatewayResponse'},
{'name': 'data class GetPruneResponse(pruned: Int)', 'description':'dev.kord.rest.json.response.GetPruneResponse', 'location':'rest/dev.kord.rest.json.response/-get-prune-response/index.html', 'searchKey':'GetPruneResponse'},
{'name': 'fun GetPruneResponse(pruned: Int)', 'description':'dev.kord.rest.json.response.GetPruneResponse.GetPruneResponse', 'location':'rest/dev.kord.rest.json.response/-get-prune-response/-get-prune-response.html', 'searchKey':'GetPruneResponse'},
{'name': 'data class PartialChannelResponse(name: String, type: ChannelType)', 'description':'dev.kord.rest.json.response.PartialChannelResponse', 'location':'rest/dev.kord.rest.json.response/-partial-channel-response/index.html', 'searchKey':'PartialChannelResponse'},
{'name': 'fun PartialChannelResponse(name: String, type: ChannelType)', 'description':'dev.kord.rest.json.response.PartialChannelResponse.PartialChannelResponse', 'location':'rest/dev.kord.rest.json.response/-partial-channel-response/-partial-channel-response.html', 'searchKey':'PartialChannelResponse'},
{'name': 'data class PruneResponse(pruned: Int?)', 'description':'dev.kord.rest.json.response.PruneResponse', 'location':'rest/dev.kord.rest.json.response/-prune-response/index.html', 'searchKey':'PruneResponse'},
{'name': 'fun PruneResponse(pruned: Int?)', 'description':'dev.kord.rest.json.response.PruneResponse.PruneResponse', 'location':'rest/dev.kord.rest.json.response/-prune-response/-prune-response.html', 'searchKey':'PruneResponse'},
{'name': 'data class SessionStartLimitResponse(total: Int, remaining: Int, resetAfter: Int)', 'description':'dev.kord.rest.json.response.SessionStartLimitResponse', 'location':'rest/dev.kord.rest.json.response/-session-start-limit-response/index.html', 'searchKey':'SessionStartLimitResponse'},
{'name': 'fun SessionStartLimitResponse(total: Int, remaining: Int, resetAfter: Int)', 'description':'dev.kord.rest.json.response.SessionStartLimitResponse.SessionStartLimitResponse', 'location':'rest/dev.kord.rest.json.response/-session-start-limit-response/-session-start-limit-response.html', 'searchKey':'SessionStartLimitResponse'},
{'name': 'abstract class AbstractRateLimiter : RequestRateLimiter', 'description':'dev.kord.rest.ratelimit.AbstractRateLimiter', 'location':'rest/dev.kord.rest.ratelimit/-abstract-rate-limiter/index.html', 'searchKey':'AbstractRateLimiter'},
{'name': 'open suspend override fun await(request: Request<*, *>): RequestToken', 'description':'dev.kord.rest.ratelimit.AbstractRateLimiter.await', 'location':'rest/dev.kord.rest.ratelimit/-abstract-rate-limiter/await.html', 'searchKey':'await'},
{'name': 'open suspend override fun await(request: Request<*, *>): RequestToken', 'description':'dev.kord.rest.ratelimit.ExclusionRequestRateLimiter.await', 'location':'rest/dev.kord.rest.ratelimit/-exclusion-request-rate-limiter/await.html', 'searchKey':'await'},
{'name': 'abstract suspend fun await(request: Request<*, *>): RequestToken', 'description':'dev.kord.rest.ratelimit.RequestRateLimiter.await', 'location':'rest/dev.kord.rest.ratelimit/-request-rate-limiter/await.html', 'searchKey':'await'},
{'name': 'inline class BucketKey(value: String)', 'description':'dev.kord.rest.ratelimit.BucketKey', 'location':'rest/dev.kord.rest.ratelimit/-bucket-key/index.html', 'searchKey':'BucketKey'},
{'name': 'fun BucketKey(value: String)', 'description':'dev.kord.rest.ratelimit.BucketKey.BucketKey', 'location':'rest/dev.kord.rest.ratelimit/-bucket-key/-bucket-key.html', 'searchKey':'BucketKey'},
{'name': 'class ExclusionRequestRateLimiter(clock: Clock) : AbstractRateLimiter', 'description':'dev.kord.rest.ratelimit.ExclusionRequestRateLimiter', 'location':'rest/dev.kord.rest.ratelimit/-exclusion-request-rate-limiter/index.html', 'searchKey':'ExclusionRequestRateLimiter'},
{'name': 'fun ExclusionRequestRateLimiter(clock: Clock)', 'description':'dev.kord.rest.ratelimit.ExclusionRequestRateLimiter.ExclusionRequestRateLimiter', 'location':'rest/dev.kord.rest.ratelimit/-exclusion-request-rate-limiter/-exclusion-request-rate-limiter.html', 'searchKey':'ExclusionRequestRateLimiter'},
{'name': 'class ParallelRequestRateLimiter(clock: Clock) : AbstractRateLimiter', 'description':'dev.kord.rest.ratelimit.ParallelRequestRateLimiter', 'location':'rest/dev.kord.rest.ratelimit/-parallel-request-rate-limiter/index.html', 'searchKey':'ParallelRequestRateLimiter'},
{'name': 'fun ParallelRequestRateLimiter(clock: Clock)', 'description':'dev.kord.rest.ratelimit.ParallelRequestRateLimiter.ParallelRequestRateLimiter', 'location':'rest/dev.kord.rest.ratelimit/-parallel-request-rate-limiter/-parallel-request-rate-limiter.html', 'searchKey':'ParallelRequestRateLimiter'},
{'name': 'data class RateLimit(total: Total, remaining: Remaining)', 'description':'dev.kord.rest.ratelimit.RateLimit', 'location':'rest/dev.kord.rest.ratelimit/-rate-limit/index.html', 'searchKey':'RateLimit'},
{'name': 'fun RateLimit(total: Total, remaining: Remaining)', 'description':'dev.kord.rest.ratelimit.RateLimit.RateLimit', 'location':'rest/dev.kord.rest.ratelimit/-rate-limit/-rate-limit.html', 'searchKey':'RateLimit'},
{'name': 'inline class Remaining(value: Long)', 'description':'dev.kord.rest.ratelimit.Remaining', 'location':'rest/dev.kord.rest.ratelimit/-remaining/index.html', 'searchKey':'Remaining'},
{'name': 'fun Remaining(value: Long)', 'description':'dev.kord.rest.ratelimit.Remaining.Remaining', 'location':'rest/dev.kord.rest.ratelimit/-remaining/-remaining.html', 'searchKey':'Remaining'},
{'name': 'interface RequestRateLimiter', 'description':'dev.kord.rest.ratelimit.RequestRateLimiter', 'location':'rest/dev.kord.rest.ratelimit/-request-rate-limiter/index.html', 'searchKey':'RequestRateLimiter'},
{'name': 'sealed class RequestResponse', 'description':'dev.kord.rest.ratelimit.RequestResponse', 'location':'rest/dev.kord.rest.ratelimit/-request-response/index.html', 'searchKey':'RequestResponse'},
{'name': 'data class Accepted(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset) : RequestResponse', 'description':'dev.kord.rest.ratelimit.RequestResponse.Accepted', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-accepted/index.html', 'searchKey':'Accepted'},
{'name': 'fun Accepted(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset)', 'description':'dev.kord.rest.ratelimit.RequestResponse.Accepted.Accepted', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-accepted/-accepted.html', 'searchKey':'Accepted'},
{'name': 'data class BucketRateLimit(bucketKey: BucketKey, rateLimit: RateLimit?, reset: Reset) : RequestResponse', 'description':'dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/index.html', 'searchKey':'BucketRateLimit'},
{'name': 'fun BucketRateLimit(bucketKey: BucketKey, rateLimit: RateLimit?, reset: Reset)', 'description':'dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.BucketRateLimit', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/-bucket-rate-limit.html', 'searchKey':'BucketRateLimit'},
{'name': 'object Error : RequestResponse', 'description':'dev.kord.rest.ratelimit.RequestResponse.Error', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-error/index.html', 'searchKey':'Error'},
{'name': 'data class GlobalRateLimit(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset) : RequestResponse', 'description':'dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/index.html', 'searchKey':'GlobalRateLimit'},
{'name': 'fun GlobalRateLimit(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset)', 'description':'dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.GlobalRateLimit', 'location':'rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/-global-rate-limit.html', 'searchKey':'GlobalRateLimit'},
{'name': 'interface RequestToken', 'description':'dev.kord.rest.ratelimit.RequestToken', 'location':'rest/dev.kord.rest.ratelimit/-request-token/index.html', 'searchKey':'RequestToken'},
{'name': 'abstract suspend fun complete(response: RequestResponse)', 'description':'dev.kord.rest.ratelimit.RequestToken.complete', 'location':'rest/dev.kord.rest.ratelimit/-request-token/complete.html', 'searchKey':'complete'},
{'name': 'inline class Reset(value: Instant)', 'description':'dev.kord.rest.ratelimit.Reset', 'location':'rest/dev.kord.rest.ratelimit/-reset/index.html', 'searchKey':'Reset'},
{'name': 'fun Reset(value: Instant)', 'description':'dev.kord.rest.ratelimit.Reset.Reset', 'location':'rest/dev.kord.rest.ratelimit/-reset/-reset.html', 'searchKey':'Reset'},
{'name': 'inline class Total(value: Long)', 'description':'dev.kord.rest.ratelimit.Total', 'location':'rest/dev.kord.rest.ratelimit/-total/index.html', 'searchKey':'Total'},
{'name': 'fun Total(value: Long)', 'description':'dev.kord.rest.ratelimit.Total.Total', 'location':'rest/dev.kord.rest.ratelimit/-total/-total.html', 'searchKey':'Total'},
{'name': 'inline suspend fun <T> RequestRateLimiter.consume(request: Request<*, *>, consumer: (RequestToken) -> T): T', 'description':'dev.kord.rest.ratelimit.consume', 'location':'rest/dev.kord.rest.ratelimit/consume.html', 'searchKey':'consume'},
{'name': 'data class HttpStatus(code: Int, message: String)', 'description':'dev.kord.rest.request.HttpStatus', 'location':'rest/dev.kord.rest.request/-http-status/index.html', 'searchKey':'HttpStatus'},
{'name': 'fun HttpStatus(code: Int, message: String)', 'description':'dev.kord.rest.request.HttpStatus.HttpStatus', 'location':'rest/dev.kord.rest.request/-http-status/-http-status.html', 'searchKey':'HttpStatus'},
{'name': 'class JsonRequest<B : Any, R>(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?) : Request<B, R> ', 'description':'dev.kord.rest.request.JsonRequest', 'location':'rest/dev.kord.rest.request/-json-request/index.html', 'searchKey':'JsonRequest'},
{'name': 'fun <B : Any, R> JsonRequest(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?)', 'description':'dev.kord.rest.request.JsonRequest.JsonRequest', 'location':'rest/dev.kord.rest.request/-json-request/-json-request.html', 'searchKey':'JsonRequest'},
{'name': 'class KtorRequestException(httpResponse: HttpResponse, discordError: DiscordErrorResponse?) : RestRequestException', 'description':'dev.kord.rest.request.KtorRequestException', 'location':'rest/dev.kord.rest.request/-ktor-request-exception/index.html', 'searchKey':'KtorRequestException'},
{'name': 'fun KtorRequestException(httpResponse: HttpResponse, discordError: DiscordErrorResponse?)', 'description':'dev.kord.rest.request.KtorRequestException.KtorRequestException', 'location':'rest/dev.kord.rest.request/-ktor-request-exception/-ktor-request-exception.html', 'searchKey':'KtorRequestException'},
{'name': 'class KtorRequestHandler(client: HttpClient, requestRateLimiter: RequestRateLimiter, clock: Clock, parser: Json) : RequestHandler', 'description':'dev.kord.rest.request.KtorRequestHandler', 'location':'rest/dev.kord.rest.request/-ktor-request-handler/index.html', 'searchKey':'KtorRequestHandler'},
{'name': 'fun KtorRequestHandler(client: HttpClient, requestRateLimiter: RequestRateLimiter, clock: Clock, parser: Json)', 'description':'dev.kord.rest.request.KtorRequestHandler.KtorRequestHandler', 'location':'rest/dev.kord.rest.request/-ktor-request-handler/-ktor-request-handler.html', 'searchKey':'KtorRequestHandler'},
{'name': 'operator fun invoke(token: String, requestRateLimiter: RequestRateLimiter, clock: Clock, parser: Json): KtorRequestHandler', 'description':'dev.kord.rest.request.KtorRequestHandler.Companion.invoke', 'location':'rest/dev.kord.rest.request/-ktor-request-handler/-companion/invoke.html', 'searchKey':'invoke'},
{'name': 'operator fun invoke(token: String): RestClient', 'description':'dev.kord.rest.service.RestClient.Companion.invoke', 'location':'rest/dev.kord.rest.service/-rest-client/-companion/invoke.html', 'searchKey':'invoke'},
{'name': 'open suspend tailrec override fun <B : Any, R> handle(request: Request<B, R>): R', 'description':'dev.kord.rest.request.KtorRequestHandler.handle', 'location':'rest/dev.kord.rest.request/-ktor-request-handler/handle.html', 'searchKey':'handle'},
{'name': 'abstract suspend fun <B : Any, R> handle(request: Request<B, R>): R', 'description':'dev.kord.rest.request.RequestHandler.handle', 'location':'rest/dev.kord.rest.request/-request-handler/handle.html', 'searchKey':'handle'},
{'name': 'class MultipartRequest<B : Any, R>(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?, files: List<Pair<String, InputStream>>) : Request<B, R> ', 'description':'dev.kord.rest.request.MultipartRequest', 'location':'rest/dev.kord.rest.request/-multipart-request/index.html', 'searchKey':'MultipartRequest'},
{'name': 'fun <B : Any, R> MultipartRequest(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?, files: List<Pair<String, InputStream>>)', 'description':'dev.kord.rest.request.MultipartRequest.MultipartRequest', 'location':'rest/dev.kord.rest.request/-multipart-request/-multipart-request.html', 'searchKey':'MultipartRequest'},
{'name': 'sealed class Request<B : Any, R>', 'description':'dev.kord.rest.request.Request', 'location':'rest/dev.kord.rest.request/-request/index.html', 'searchKey':'Request'},
{'name': 'data class RequestBody<T : Any>(strategy: SerializationStrategy<T>, body: T)', 'description':'dev.kord.rest.request.RequestBody', 'location':'rest/dev.kord.rest.request/-request-body/index.html', 'searchKey':'RequestBody'},
{'name': 'fun <T : Any> RequestBody(strategy: SerializationStrategy<T>, body: T)', 'description':'dev.kord.rest.request.RequestBody.RequestBody', 'location':'rest/dev.kord.rest.request/-request-body/-request-body.html', 'searchKey':'RequestBody'},
{'name': 'fun <E : Any> body(strategy: SerializationStrategy<E>, body: E)', 'description':'dev.kord.rest.request.RequestBuilder.body', 'location':'rest/dev.kord.rest.request/-request-builder/body.html', 'searchKey':'body'},
{'name': 'fun header(key: String, value: String)', 'description':'dev.kord.rest.request.RequestBuilder.header', 'location':'rest/dev.kord.rest.request/-request-builder/header.html', 'searchKey':'header'},
{'name': 'interface RequestHandler', 'description':'dev.kord.rest.request.RequestHandler', 'location':'rest/dev.kord.rest.request/-request-handler/index.html', 'searchKey':'RequestHandler'},
{'name': 'sealed class RequestIdentifier', 'description':'dev.kord.rest.request.RequestIdentifier', 'location':'rest/dev.kord.rest.request/-request-identifier/index.html', 'searchKey':'RequestIdentifier'},
{'name': 'data class MajorParamIdentifier(route: Route<*>, param: String) : RequestIdentifier', 'description':'dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier', 'location':'rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/index.html', 'searchKey':'MajorParamIdentifier'},
{'name': 'fun MajorParamIdentifier(route: Route<*>, param: String)', 'description':'dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.MajorParamIdentifier', 'location':'rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/-major-param-identifier.html', 'searchKey':'MajorParamIdentifier'},
{'name': 'data class RouteIdentifier(route: Route<*>) : RequestIdentifier', 'description':'dev.kord.rest.request.RequestIdentifier.RouteIdentifier', 'location':'rest/dev.kord.rest.request/-request-identifier/-route-identifier/index.html', 'searchKey':'RouteIdentifier'},
{'name': 'fun RouteIdentifier(route: Route<*>)', 'description':'dev.kord.rest.request.RequestIdentifier.RouteIdentifier.RouteIdentifier', 'location':'rest/dev.kord.rest.request/-request-identifier/-route-identifier/-route-identifier.html', 'searchKey':'RouteIdentifier'},
{'name': 'abstract class RestRequestException(status: HttpStatus, error: DiscordErrorResponse?) : RequestException', 'description':'dev.kord.rest.request.RestRequestException', 'location':'rest/dev.kord.rest.request/-rest-request-exception/index.html', 'searchKey':'RestRequestException'},
{'name': 'fun RestRequestException(status: HttpStatus, error: DiscordErrorResponse?)', 'description':'dev.kord.rest.request.RestRequestException.RestRequestException', 'location':'rest/dev.kord.rest.request/-rest-request-exception/-rest-request-exception.html', 'searchKey':'RestRequestException'},
{'name': 'fun HttpResponse.channelResetPoint(clock: Clock): Instant', 'description':'dev.kord.rest.request.channelResetPoint', 'location':'rest/dev.kord.rest.request/channel-reset-point.html', 'searchKey':'channelResetPoint'},
{'name': 'suspend fun HttpResponse.errorString(): String', 'description':'dev.kord.rest.request.errorString', 'location':'rest/dev.kord.rest.request/error-string.html', 'searchKey':'errorString'},
{'name': 'fun RequestResponse.Companion.from(response: HttpResponse, clock: Clock): RequestResponse', 'description':'dev.kord.rest.request.from', 'location':'rest/dev.kord.rest.request/from.html', 'searchKey':'from'},
{'name': 'fun HttpResponse.globalSuspensionPoint(clock: Clock): Long', 'description':'dev.kord.rest.request.globalSuspensionPoint', 'location':'rest/dev.kord.rest.request/global-suspension-point.html', 'searchKey':'globalSuspensionPoint'},
{'name': 'sealed class Position', 'description':'dev.kord.rest.route.Position', 'location':'rest/dev.kord.rest.route/-position/index.html', 'searchKey':'Position'},
{'name': 'class After(id: Snowflake) : Position', 'description':'dev.kord.rest.route.Position.After', 'location':'rest/dev.kord.rest.route/-position/-after/index.html', 'searchKey':'After'},
{'name': 'fun After(id: Snowflake)', 'description':'dev.kord.rest.route.Position.After.After', 'location':'rest/dev.kord.rest.route/-position/-after/-after.html', 'searchKey':'After'},
{'name': 'class Around(id: Snowflake) : Position', 'description':'dev.kord.rest.route.Position.Around', 'location':'rest/dev.kord.rest.route/-position/-around/index.html', 'searchKey':'Around'},
{'name': 'fun Around(id: Snowflake)', 'description':'dev.kord.rest.route.Position.Around.Around', 'location':'rest/dev.kord.rest.route/-position/-around/-around.html', 'searchKey':'Around'},
{'name': 'class Before(id: Snowflake) : Position', 'description':'dev.kord.rest.route.Position.Before', 'location':'rest/dev.kord.rest.route/-position/-before/index.html', 'searchKey':'Before'},
{'name': 'fun Before(id: Snowflake)', 'description':'dev.kord.rest.route.Position.Before.Before', 'location':'rest/dev.kord.rest.route/-position/-before/-before.html', 'searchKey':'Before'},
{'name': 'sealed class Route<T>', 'description':'dev.kord.rest.route.Route', 'location':'rest/dev.kord.rest.route/-route/index.html', 'searchKey':'Route'},
{'name': 'object AllReactionsDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.AllReactionsDelete', 'location':'rest/dev.kord.rest.route/-route/-all-reactions-delete/index.html', 'searchKey':'AllReactionsDelete'},
{'name': 'object AuditLogGet : Route<DiscordAuditLog> ', 'description':'dev.kord.rest.route.Route.AuditLogGet', 'location':'rest/dev.kord.rest.route/-route/-audit-log-get/index.html', 'searchKey':'AuditLogGet'},
{'name': 'object BulkMessageDeletePost : Route<Unit> ', 'description':'dev.kord.rest.route.Route.BulkMessageDeletePost', 'location':'rest/dev.kord.rest.route/-route/-bulk-message-delete-post/index.html', 'searchKey':'BulkMessageDeletePost'},
{'name': 'object ChannelDelete : Route<DiscordChannel> ', 'description':'dev.kord.rest.route.Route.ChannelDelete', 'location':'rest/dev.kord.rest.route/-route/-channel-delete/index.html', 'searchKey':'ChannelDelete'},
{'name': 'object ChannelGet : Route<DiscordChannel> ', 'description':'dev.kord.rest.route.Route.ChannelGet', 'location':'rest/dev.kord.rest.route/-route/-channel-get/index.html', 'searchKey':'ChannelGet'},
{'name': 'object ChannelId : Route.Key', 'description':'dev.kord.rest.route.Route.ChannelId', 'location':'rest/dev.kord.rest.route/-route/-channel-id/index.html', 'searchKey':'ChannelId'},
{'name': 'object ChannelPatch : Route<DiscordChannel> ', 'description':'dev.kord.rest.route.Route.ChannelPatch', 'location':'rest/dev.kord.rest.route/-route/-channel-patch/index.html', 'searchKey':'ChannelPatch'},
{'name': 'object ChannelPermissionDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.ChannelPermissionDelete', 'location':'rest/dev.kord.rest.route/-route/-channel-permission-delete/index.html', 'searchKey':'ChannelPermissionDelete'},
{'name': 'object ChannelPermissionPut : Route<Unit> ', 'description':'dev.kord.rest.route.Route.ChannelPermissionPut', 'location':'rest/dev.kord.rest.route/-route/-channel-permission-put/index.html', 'searchKey':'ChannelPermissionPut'},
{'name': 'object ChannelPut : Route<DiscordChannel> ', 'description':'dev.kord.rest.route.Route.ChannelPut', 'location':'rest/dev.kord.rest.route/-route/-channel-put/index.html', 'searchKey':'ChannelPut'},
{'name': 'object ChannelWebhooksGet : Route<List<DiscordWebhook>> ', 'description':'dev.kord.rest.route.Route.ChannelWebhooksGet', 'location':'rest/dev.kord.rest.route/-route/-channel-webhooks-get/index.html', 'searchKey':'ChannelWebhooksGet'},
{'name': 'object CurrentApplicationInfo : Route<ApplicationInfoResponse> ', 'description':'dev.kord.rest.route.Route.CurrentApplicationInfo', 'location':'rest/dev.kord.rest.route/-route/-current-application-info/index.html', 'searchKey':'CurrentApplicationInfo'},
{'name': 'object CurrentUserGet : Route<DiscordUser> ', 'description':'dev.kord.rest.route.Route.CurrentUserGet', 'location':'rest/dev.kord.rest.route/-route/-current-user-get/index.html', 'searchKey':'CurrentUserGet'},
{'name': 'object CurrentUserPatch : Route<DiscordUser> ', 'description':'dev.kord.rest.route.Route.CurrentUserPatch', 'location':'rest/dev.kord.rest.route/-route/-current-user-patch/index.html', 'searchKey':'CurrentUserPatch'},
{'name': 'object CurrentUsersGuildsGet : Route<List<DiscordPartialGuild>> ', 'description':'dev.kord.rest.route.Route.CurrentUsersGuildsGet', 'location':'rest/dev.kord.rest.route/-route/-current-users-guilds-get/index.html', 'searchKey':'CurrentUsersGuildsGet'},
{'name': 'object DMPost : Route<DiscordChannel> ', 'description':'dev.kord.rest.route.Route.DMPost', 'location':'rest/dev.kord.rest.route/-route/-d-m-post/index.html', 'searchKey':'DMPost'},
{'name': 'object DeleteAllReactionsForEmoji : Route<Unit> ', 'description':'dev.kord.rest.route.Route.DeleteAllReactionsForEmoji', 'location':'rest/dev.kord.rest.route/-route/-delete-all-reactions-for-emoji/index.html', 'searchKey':'DeleteAllReactionsForEmoji'},
{'name': 'object EditMessagePatch : Route<DiscordMessage> ', 'description':'dev.kord.rest.route.Route.EditMessagePatch', 'location':'rest/dev.kord.rest.route/-route/-edit-message-patch/index.html', 'searchKey':'EditMessagePatch'},
{'name': 'object Emoji : Route.Key', 'description':'dev.kord.rest.route.Route.Emoji', 'location':'rest/dev.kord.rest.route/-route/-emoji/index.html', 'searchKey':'Emoji'},
{'name': 'object EmojiId : Route.Key', 'description':'dev.kord.rest.route.Route.EmojiId', 'location':'rest/dev.kord.rest.route/-route/-emoji-id/index.html', 'searchKey':'EmojiId'},
{'name': 'object ExecuteGithubWebhookPost : Route<Unit> ', 'description':'dev.kord.rest.route.Route.ExecuteGithubWebhookPost', 'location':'rest/dev.kord.rest.route/-route/-execute-github-webhook-post/index.html', 'searchKey':'ExecuteGithubWebhookPost'},
{'name': 'object ExecuteSlackWebhookPost : Route<Unit> ', 'description':'dev.kord.rest.route.Route.ExecuteSlackWebhookPost', 'location':'rest/dev.kord.rest.route/-route/-execute-slack-webhook-post/index.html', 'searchKey':'ExecuteSlackWebhookPost'},
{'name': 'object ExecuteWebhookPost : Route<DiscordMessage?> ', 'description':'dev.kord.rest.route.Route.ExecuteWebhookPost', 'location':'rest/dev.kord.rest.route/-route/-execute-webhook-post/index.html', 'searchKey':'ExecuteWebhookPost'},
{'name': 'object GatewayBotGet : Route<BotGatewayResponse> ', 'description':'dev.kord.rest.route.Route.GatewayBotGet', 'location':'rest/dev.kord.rest.route/-route/-gateway-bot-get/index.html', 'searchKey':'GatewayBotGet'},
{'name': 'object GatewayGet : Route<GatewayResponse> ', 'description':'dev.kord.rest.route.Route.GatewayGet', 'location':'rest/dev.kord.rest.route/-route/-gateway-get/index.html', 'searchKey':'GatewayGet'},
{'name': 'object GroupDMUserDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GroupDMUserDelete', 'location':'rest/dev.kord.rest.route/-route/-group-d-m-user-delete/index.html', 'searchKey':'GroupDMUserDelete'},
{'name': 'object GroupDMUserPut : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GroupDMUserPut', 'location':'rest/dev.kord.rest.route/-route/-group-d-m-user-put/index.html', 'searchKey':'GroupDMUserPut'},
{'name': 'object GuildBanDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildBanDelete', 'location':'rest/dev.kord.rest.route/-route/-guild-ban-delete/index.html', 'searchKey':'GuildBanDelete'},
{'name': 'object GuildBanGet : Route<BanResponse> ', 'description':'dev.kord.rest.route.Route.GuildBanGet', 'location':'rest/dev.kord.rest.route/-route/-guild-ban-get/index.html', 'searchKey':'GuildBanGet'},
{'name': 'object GuildBanPut : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildBanPut', 'location':'rest/dev.kord.rest.route/-route/-guild-ban-put/index.html', 'searchKey':'GuildBanPut'},
{'name': 'object GuildBansGet : Route<List<BanResponse>> ', 'description':'dev.kord.rest.route.Route.GuildBansGet', 'location':'rest/dev.kord.rest.route/-route/-guild-bans-get/index.html', 'searchKey':'GuildBansGet'},
{'name': 'object GuildChannelsGet : Route<List<DiscordChannel>> ', 'description':'dev.kord.rest.route.Route.GuildChannelsGet', 'location':'rest/dev.kord.rest.route/-route/-guild-channels-get/index.html', 'searchKey':'GuildChannelsGet'},
{'name': 'object GuildChannelsPatch : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildChannelsPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-channels-patch/index.html', 'searchKey':'GuildChannelsPatch'},
{'name': 'object GuildChannelsPost : Route<DiscordChannel> ', 'description':'dev.kord.rest.route.Route.GuildChannelsPost', 'location':'rest/dev.kord.rest.route/-route/-guild-channels-post/index.html', 'searchKey':'GuildChannelsPost'},
{'name': 'object GuildCurrentUserNickPatch : Route<CurrentUserNicknameModifyResponse> ', 'description':'dev.kord.rest.route.Route.GuildCurrentUserNickPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-current-user-nick-patch/index.html', 'searchKey':'GuildCurrentUserNickPatch'},
{'name': 'object GuildDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildDelete', 'location':'rest/dev.kord.rest.route/-route/-guild-delete/index.html', 'searchKey':'GuildDelete'},
{'name': 'object GuildEmbedGet : Route<Nothing> ', 'description':'dev.kord.rest.route.Route.GuildEmbedGet', 'location':'rest/dev.kord.rest.route/-route/-guild-embed-get/index.html', 'searchKey':'GuildEmbedGet'},
{'name': 'object GuildEmbedPatch : Route<Nothing> ', 'description':'dev.kord.rest.route.Route.GuildEmbedPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-embed-patch/index.html', 'searchKey':'GuildEmbedPatch'},
{'name': 'object GuildEmojiDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildEmojiDelete', 'location':'rest/dev.kord.rest.route/-route/-guild-emoji-delete/index.html', 'searchKey':'GuildEmojiDelete'},
{'name': 'object GuildEmojiGet : Route<DiscordEmoji> ', 'description':'dev.kord.rest.route.Route.GuildEmojiGet', 'location':'rest/dev.kord.rest.route/-route/-guild-emoji-get/index.html', 'searchKey':'GuildEmojiGet'},
{'name': 'object GuildEmojiPatch : Route<DiscordEmoji> ', 'description':'dev.kord.rest.route.Route.GuildEmojiPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-emoji-patch/index.html', 'searchKey':'GuildEmojiPatch'},
{'name': 'object GuildEmojiPost : Route<DiscordEmoji> ', 'description':'dev.kord.rest.route.Route.GuildEmojiPost', 'location':'rest/dev.kord.rest.route/-route/-guild-emoji-post/index.html', 'searchKey':'GuildEmojiPost'},
{'name': 'object GuildEmojisGet : Route<List<DiscordEmoji>> ', 'description':'dev.kord.rest.route.Route.GuildEmojisGet', 'location':'rest/dev.kord.rest.route/-route/-guild-emojis-get/index.html', 'searchKey':'GuildEmojisGet'},
{'name': 'object GuildGet : Route<DiscordGuild> ', 'description':'dev.kord.rest.route.Route.GuildGet', 'location':'rest/dev.kord.rest.route/-route/-guild-get/index.html', 'searchKey':'GuildGet'},
{'name': 'object GuildId : Route.Key', 'description':'dev.kord.rest.route.Route.GuildId', 'location':'rest/dev.kord.rest.route/-route/-guild-id/index.html', 'searchKey':'GuildId'},
{'name': 'object GuildIntegrationDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildIntegrationDelete', 'location':'rest/dev.kord.rest.route/-route/-guild-integration-delete/index.html', 'searchKey':'GuildIntegrationDelete'},
{'name': 'object GuildIntegrationGet : Route<List<DiscordIntegration>> ', 'description':'dev.kord.rest.route.Route.GuildIntegrationGet', 'location':'rest/dev.kord.rest.route/-route/-guild-integration-get/index.html', 'searchKey':'GuildIntegrationGet'},
{'name': 'object GuildIntegrationPatch : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildIntegrationPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-integration-patch/index.html', 'searchKey':'GuildIntegrationPatch'},
{'name': 'object GuildIntegrationPost : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildIntegrationPost', 'location':'rest/dev.kord.rest.route/-route/-guild-integration-post/index.html', 'searchKey':'GuildIntegrationPost'},
{'name': 'object GuildIntegrationSyncPost : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildIntegrationSyncPost', 'location':'rest/dev.kord.rest.route/-route/-guild-integration-sync-post/index.html', 'searchKey':'GuildIntegrationSyncPost'},
{'name': 'object GuildInvitesGet : Route<List<DiscordInvite>> ', 'description':'dev.kord.rest.route.Route.GuildInvitesGet', 'location':'rest/dev.kord.rest.route/-route/-guild-invites-get/index.html', 'searchKey':'GuildInvitesGet'},
{'name': 'object GuildLeave : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildLeave', 'location':'rest/dev.kord.rest.route/-route/-guild-leave/index.html', 'searchKey':'GuildLeave'},
{'name': 'object GuildMemberDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildMemberDelete', 'location':'rest/dev.kord.rest.route/-route/-guild-member-delete/index.html', 'searchKey':'GuildMemberDelete'},
{'name': 'object GuildMemberGet : Route<DiscordGuildMember> ', 'description':'dev.kord.rest.route.Route.GuildMemberGet', 'location':'rest/dev.kord.rest.route/-route/-guild-member-get/index.html', 'searchKey':'GuildMemberGet'},
{'name': 'object GuildMemberPatch : Route<DiscordGuildMember> ', 'description':'dev.kord.rest.route.Route.GuildMemberPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-member-patch/index.html', 'searchKey':'GuildMemberPatch'},
{'name': 'object GuildMemberPut : Route<DiscordGuildMember?> ', 'description':'dev.kord.rest.route.Route.GuildMemberPut', 'location':'rest/dev.kord.rest.route/-route/-guild-member-put/index.html', 'searchKey':'GuildMemberPut'},
{'name': 'object GuildMemberRoleDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildMemberRoleDelete', 'location':'rest/dev.kord.rest.route/-route/-guild-member-role-delete/index.html', 'searchKey':'GuildMemberRoleDelete'},
{'name': 'object GuildMemberRolePut : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildMemberRolePut', 'location':'rest/dev.kord.rest.route/-route/-guild-member-role-put/index.html', 'searchKey':'GuildMemberRolePut'},
{'name': 'object GuildMembersGet : Route<List<DiscordGuildMember>> ', 'description':'dev.kord.rest.route.Route.GuildMembersGet', 'location':'rest/dev.kord.rest.route/-route/-guild-members-get/index.html', 'searchKey':'GuildMembersGet'},
{'name': 'object GuildMembersSearchGet : Route<List<DiscordGuildMember>> ', 'description':'dev.kord.rest.route.Route.GuildMembersSearchGet', 'location':'rest/dev.kord.rest.route/-route/-guild-members-search-get/index.html', 'searchKey':'GuildMembersSearchGet'},
{'name': 'object GuildPatch : Route<DiscordGuild> ', 'description':'dev.kord.rest.route.Route.GuildPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-patch/index.html', 'searchKey':'GuildPatch'},
{'name': 'object GuildPost : Route<DiscordGuild> ', 'description':'dev.kord.rest.route.Route.GuildPost', 'location':'rest/dev.kord.rest.route/-route/-guild-post/index.html', 'searchKey':'GuildPost'},
{'name': 'object GuildPreviewGet : Route<DiscordGuildPreview> ', 'description':'dev.kord.rest.route.Route.GuildPreviewGet', 'location':'rest/dev.kord.rest.route/-route/-guild-preview-get/index.html', 'searchKey':'GuildPreviewGet'},
{'name': 'object GuildPruneCountGet : Route<GetPruneResponse> ', 'description':'dev.kord.rest.route.Route.GuildPruneCountGet', 'location':'rest/dev.kord.rest.route/-route/-guild-prune-count-get/index.html', 'searchKey':'GuildPruneCountGet'},
{'name': 'object GuildPrunePost : Route<PruneResponse> ', 'description':'dev.kord.rest.route.Route.GuildPrunePost', 'location':'rest/dev.kord.rest.route/-route/-guild-prune-post/index.html', 'searchKey':'GuildPrunePost'},
{'name': 'object GuildRoleDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.GuildRoleDelete', 'location':'rest/dev.kord.rest.route/-route/-guild-role-delete/index.html', 'searchKey':'GuildRoleDelete'},
{'name': 'object GuildRolePatch : Route<DiscordRole> ', 'description':'dev.kord.rest.route.Route.GuildRolePatch', 'location':'rest/dev.kord.rest.route/-route/-guild-role-patch/index.html', 'searchKey':'GuildRolePatch'},
{'name': 'object GuildRolePost : Route<DiscordRole> ', 'description':'dev.kord.rest.route.Route.GuildRolePost', 'location':'rest/dev.kord.rest.route/-route/-guild-role-post/index.html', 'searchKey':'GuildRolePost'},
{'name': 'object GuildRolesGet : Route<List<DiscordRole>> ', 'description':'dev.kord.rest.route.Route.GuildRolesGet', 'location':'rest/dev.kord.rest.route/-route/-guild-roles-get/index.html', 'searchKey':'GuildRolesGet'},
{'name': 'object GuildRolesPatch : Route<List<DiscordRole>> ', 'description':'dev.kord.rest.route.Route.GuildRolesPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-roles-patch/index.html', 'searchKey':'GuildRolesPatch'},
{'name': 'object GuildVanityInviteGet : Route<DiscordPartialInvite> ', 'description':'dev.kord.rest.route.Route.GuildVanityInviteGet', 'location':'rest/dev.kord.rest.route/-route/-guild-vanity-invite-get/index.html', 'searchKey':'GuildVanityInviteGet'},
{'name': 'object GuildVoiceRegionsGet : Route<List<DiscordVoiceRegion>> ', 'description':'dev.kord.rest.route.Route.GuildVoiceRegionsGet', 'location':'rest/dev.kord.rest.route/-route/-guild-voice-regions-get/index.html', 'searchKey':'GuildVoiceRegionsGet'},
{'name': 'object GuildWebhooksGet : Route<List<DiscordWebhook>> ', 'description':'dev.kord.rest.route.Route.GuildWebhooksGet', 'location':'rest/dev.kord.rest.route/-route/-guild-webhooks-get/index.html', 'searchKey':'GuildWebhooksGet'},
{'name': 'object GuildWidgetGet : Route<DiscordGuildWidget> ', 'description':'dev.kord.rest.route.Route.GuildWidgetGet', 'location':'rest/dev.kord.rest.route/-route/-guild-widget-get/index.html', 'searchKey':'GuildWidgetGet'},
{'name': 'object GuildWidgetPatch : Route<DiscordGuildWidget> ', 'description':'dev.kord.rest.route.Route.GuildWidgetPatch', 'location':'rest/dev.kord.rest.route/-route/-guild-widget-patch/index.html', 'searchKey':'GuildWidgetPatch'},
{'name': 'object IntegrationId : Route.Key', 'description':'dev.kord.rest.route.Route.IntegrationId', 'location':'rest/dev.kord.rest.route/-route/-integration-id/index.html', 'searchKey':'IntegrationId'},
{'name': 'object InviteCode : Route.Key', 'description':'dev.kord.rest.route.Route.InviteCode', 'location':'rest/dev.kord.rest.route/-route/-invite-code/index.html', 'searchKey':'InviteCode'},
{'name': 'object InviteDelete : Route<DiscordInvite> ', 'description':'dev.kord.rest.route.Route.InviteDelete', 'location':'rest/dev.kord.rest.route/-route/-invite-delete/index.html', 'searchKey':'InviteDelete'},
{'name': 'object InviteGet : Route<DiscordInvite> ', 'description':'dev.kord.rest.route.Route.InviteGet', 'location':'rest/dev.kord.rest.route/-route/-invite-get/index.html', 'searchKey':'InviteGet'},
{'name': 'object InvitePost : Route<DiscordInvite> ', 'description':'dev.kord.rest.route.Route.InvitePost', 'location':'rest/dev.kord.rest.route/-route/-invite-post/index.html', 'searchKey':'InvitePost'},
{'name': 'object InvitesGet : Route<List<DiscordInvite>> ', 'description':'dev.kord.rest.route.Route.InvitesGet', 'location':'rest/dev.kord.rest.route/-route/-invites-get/index.html', 'searchKey':'InvitesGet'},
{'name': 'open class Key(identifier: String, isMajor: Boolean)', 'description':'dev.kord.rest.route.Route.Key', 'location':'rest/dev.kord.rest.route/-route/-key/index.html', 'searchKey':'Key'},
{'name': 'fun Key(identifier: String, isMajor: Boolean)', 'description':'dev.kord.rest.route.Route.Key.Key', 'location':'rest/dev.kord.rest.route/-route/-key/-key.html', 'searchKey':'Key'},
{'name': 'open override fun toString(): String', 'description':'dev.kord.rest.route.Route.Key.toString', 'location':'rest/dev.kord.rest.route/-route/-key/to-string.html', 'searchKey':'toString'},
{'name': 'open override fun toString(): String', 'description':'dev.kord.rest.route.Route.toString', 'location':'rest/dev.kord.rest.route/-route/to-string.html', 'searchKey':'toString'},
{'name': 'object MessageCrosspost : Route<DiscordMessage> ', 'description':'dev.kord.rest.route.Route.MessageCrosspost', 'location':'rest/dev.kord.rest.route/-route/-message-crosspost/index.html', 'searchKey':'MessageCrosspost'},
{'name': 'object MessageDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.MessageDelete', 'location':'rest/dev.kord.rest.route/-route/-message-delete/index.html', 'searchKey':'MessageDelete'},
{'name': 'object MessageGet : Route<DiscordMessage> ', 'description':'dev.kord.rest.route.Route.MessageGet', 'location':'rest/dev.kord.rest.route/-route/-message-get/index.html', 'searchKey':'MessageGet'},
{'name': 'object MessageId : Route.Key', 'description':'dev.kord.rest.route.Route.MessageId', 'location':'rest/dev.kord.rest.route/-route/-message-id/index.html', 'searchKey':'MessageId'},
{'name': 'object MessagePost : Route<DiscordMessage> ', 'description':'dev.kord.rest.route.Route.MessagePost', 'location':'rest/dev.kord.rest.route/-route/-message-post/index.html', 'searchKey':'MessagePost'},
{'name': 'object MessagesGet : Route<List<DiscordMessage>> ', 'description':'dev.kord.rest.route.Route.MessagesGet', 'location':'rest/dev.kord.rest.route/-route/-messages-get/index.html', 'searchKey':'MessagesGet'},
{'name': 'object NewsChannelFollow : Route<FollowedChannelResponse> ', 'description':'dev.kord.rest.route.Route.NewsChannelFollow', 'location':'rest/dev.kord.rest.route/-route/-news-channel-follow/index.html', 'searchKey':'NewsChannelFollow'},
{'name': 'object OverwriteId : Route.Key', 'description':'dev.kord.rest.route.Route.OverwriteId', 'location':'rest/dev.kord.rest.route/-route/-overwrite-id/index.html', 'searchKey':'OverwriteId'},
{'name': 'object OwnReactionDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.OwnReactionDelete', 'location':'rest/dev.kord.rest.route/-route/-own-reaction-delete/index.html', 'searchKey':'OwnReactionDelete'},
{'name': 'object PinDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.PinDelete', 'location':'rest/dev.kord.rest.route/-route/-pin-delete/index.html', 'searchKey':'PinDelete'},
{'name': 'object PinPut : Route<Unit> ', 'description':'dev.kord.rest.route.Route.PinPut', 'location':'rest/dev.kord.rest.route/-route/-pin-put/index.html', 'searchKey':'PinPut'},
{'name': 'object PinsGet : Route<List<DiscordMessage>> ', 'description':'dev.kord.rest.route.Route.PinsGet', 'location':'rest/dev.kord.rest.route/-route/-pins-get/index.html', 'searchKey':'PinsGet'},
{'name': 'object ReactionDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.ReactionDelete', 'location':'rest/dev.kord.rest.route/-route/-reaction-delete/index.html', 'searchKey':'ReactionDelete'},
{'name': 'object ReactionPut : Route<Unit> ', 'description':'dev.kord.rest.route.Route.ReactionPut', 'location':'rest/dev.kord.rest.route/-route/-reaction-put/index.html', 'searchKey':'ReactionPut'},
{'name': 'object ReactionsGet : Route<List<DiscordUser>> ', 'description':'dev.kord.rest.route.Route.ReactionsGet', 'location':'rest/dev.kord.rest.route/-route/-reactions-get/index.html', 'searchKey':'ReactionsGet'},
{'name': 'object RoleId : Route.Key', 'description':'dev.kord.rest.route.Route.RoleId', 'location':'rest/dev.kord.rest.route/-route/-role-id/index.html', 'searchKey':'RoleId'},
{'name': 'object TemplateCode : Route.Key', 'description':'dev.kord.rest.route.Route.TemplateCode', 'location':'rest/dev.kord.rest.route/-route/-template-code/index.html', 'searchKey':'TemplateCode'},
{'name': 'object TemplateGet : Route<DiscordTemplate> ', 'description':'dev.kord.rest.route.Route.TemplateGet', 'location':'rest/dev.kord.rest.route/-route/-template-get/index.html', 'searchKey':'TemplateGet'},
{'name': 'object TemplatePost : Route<DiscordGuild> ', 'description':'dev.kord.rest.route.Route.TemplatePost', 'location':'rest/dev.kord.rest.route/-route/-template-post/index.html', 'searchKey':'TemplatePost'},
{'name': 'object TypingIndicatorPost : Route<Unit> ', 'description':'dev.kord.rest.route.Route.TypingIndicatorPost', 'location':'rest/dev.kord.rest.route/-route/-typing-indicator-post/index.html', 'searchKey':'TypingIndicatorPost'},
{'name': 'object UserConnectionsGet : Route<List<Connection>> ', 'description':'dev.kord.rest.route.Route.UserConnectionsGet', 'location':'rest/dev.kord.rest.route/-route/-user-connections-get/index.html', 'searchKey':'UserConnectionsGet'},
{'name': 'object UserGet : Route<DiscordUser> ', 'description':'dev.kord.rest.route.Route.UserGet', 'location':'rest/dev.kord.rest.route/-route/-user-get/index.html', 'searchKey':'UserGet'},
{'name': 'object UserId : Route.Key', 'description':'dev.kord.rest.route.Route.UserId', 'location':'rest/dev.kord.rest.route/-route/-user-id/index.html', 'searchKey':'UserId'},
{'name': 'object VoiceRegionsGet : Route<List<DiscordVoiceRegion>> ', 'description':'dev.kord.rest.route.Route.VoiceRegionsGet', 'location':'rest/dev.kord.rest.route/-route/-voice-regions-get/index.html', 'searchKey':'VoiceRegionsGet'},
{'name': 'object WebhookByTokenDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.WebhookByTokenDelete', 'location':'rest/dev.kord.rest.route/-route/-webhook-by-token-delete/index.html', 'searchKey':'WebhookByTokenDelete'},
{'name': 'object WebhookByTokenGet : Route<DiscordWebhook> ', 'description':'dev.kord.rest.route.Route.WebhookByTokenGet', 'location':'rest/dev.kord.rest.route/-route/-webhook-by-token-get/index.html', 'searchKey':'WebhookByTokenGet'},
{'name': 'object WebhookByTokenPatch : Route<DiscordWebhook> ', 'description':'dev.kord.rest.route.Route.WebhookByTokenPatch', 'location':'rest/dev.kord.rest.route/-route/-webhook-by-token-patch/index.html', 'searchKey':'WebhookByTokenPatch'},
{'name': 'object WebhookDelete : Route<Unit> ', 'description':'dev.kord.rest.route.Route.WebhookDelete', 'location':'rest/dev.kord.rest.route/-route/-webhook-delete/index.html', 'searchKey':'WebhookDelete'},
{'name': 'object WebhookGet : Route<DiscordWebhook> ', 'description':'dev.kord.rest.route.Route.WebhookGet', 'location':'rest/dev.kord.rest.route/-route/-webhook-get/index.html', 'searchKey':'WebhookGet'},
{'name': 'object WebhookId : Route.Key', 'description':'dev.kord.rest.route.Route.WebhookId', 'location':'rest/dev.kord.rest.route/-route/-webhook-id/index.html', 'searchKey':'WebhookId'},
{'name': 'object WebhookPatch : Route<DiscordWebhook> ', 'description':'dev.kord.rest.route.Route.WebhookPatch', 'location':'rest/dev.kord.rest.route/-route/-webhook-patch/index.html', 'searchKey':'WebhookPatch'},
{'name': 'object WebhookPost : Route<DiscordWebhook> ', 'description':'dev.kord.rest.route.Route.WebhookPost', 'location':'rest/dev.kord.rest.route/-route/-webhook-post/index.html', 'searchKey':'WebhookPost'},
{'name': 'object WebhookToken : Route.Key', 'description':'dev.kord.rest.route.Route.WebhookToken', 'location':'rest/dev.kord.rest.route/-route/-webhook-token/index.html', 'searchKey':'WebhookToken'},
{'name': 'class ApplicationService(handler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.ApplicationService', 'location':'rest/dev.kord.rest.service/-application-service/index.html', 'searchKey':'ApplicationService'},
{'name': 'fun ApplicationService(handler: RequestHandler)', 'description':'dev.kord.rest.service.ApplicationService.ApplicationService', 'location':'rest/dev.kord.rest.service/-application-service/-application-service.html', 'searchKey':'ApplicationService'},
{'name': 'suspend fun getCurrentApplicationInfo(): ApplicationInfoResponse', 'description':'dev.kord.rest.service.ApplicationService.getCurrentApplicationInfo', 'location':'rest/dev.kord.rest.service/-application-service/get-current-application-info.html', 'searchKey':'getCurrentApplicationInfo'},
{'name': 'class AuditLogService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.AuditLogService', 'location':'rest/dev.kord.rest.service/-audit-log-service/index.html', 'searchKey':'AuditLogService'},
{'name': 'fun AuditLogService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.AuditLogService.AuditLogService', 'location':'rest/dev.kord.rest.service/-audit-log-service/-audit-log-service.html', 'searchKey':'AuditLogService'},
{'name': 'class ChannelService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.ChannelService', 'location':'rest/dev.kord.rest.service/-channel-service/index.html', 'searchKey':'ChannelService'},
{'name': 'fun ChannelService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.ChannelService.ChannelService', 'location':'rest/dev.kord.rest.service/-channel-service/-channel-service.html', 'searchKey':'ChannelService'},
{'name': 'suspend fun addPinnedMessage(channelId: Snowflake, messageId: Snowflake)', 'description':'dev.kord.rest.service.ChannelService.addPinnedMessage', 'location':'rest/dev.kord.rest.service/-channel-service/add-pinned-message.html', 'searchKey':'addPinnedMessage'},
{'name': 'suspend fun addToGroup(channelId: Snowflake, userId: Snowflake, addUser: UserAddDMRequest)', 'description':'dev.kord.rest.service.ChannelService.addToGroup', 'location':'rest/dev.kord.rest.service/-channel-service/add-to-group.html', 'searchKey':'addToGroup'},
{'name': 'suspend fun bulkDelete(channelId: Snowflake, messages: BulkDeleteRequest)', 'description':'dev.kord.rest.service.ChannelService.bulkDelete', 'location':'rest/dev.kord.rest.service/-channel-service/bulk-delete.html', 'searchKey':'bulkDelete'},
{'name': 'inline suspend fun createInvite(channelId: Snowflake, builder: InviteCreateBuilder.() -> Unit): DiscordInvite', 'description':'dev.kord.rest.service.ChannelService.createInvite', 'location':'rest/dev.kord.rest.service/-channel-service/create-invite.html', 'searchKey':'createInvite'},
{'name': 'inline suspend fun createMessage(channelId: Snowflake, builder: MessageCreateBuilder.() -> Unit): DiscordMessage', 'description':'dev.kord.rest.service.ChannelService.createMessage', 'location':'rest/dev.kord.rest.service/-channel-service/create-message.html', 'searchKey':'createMessage'},
{'name': 'suspend fun createReaction(channelId: Snowflake, messageId: Snowflake, emoji: String)', 'description':'dev.kord.rest.service.ChannelService.createReaction', 'location':'rest/dev.kord.rest.service/-channel-service/create-reaction.html', 'searchKey':'createReaction'},
{'name': 'suspend fun crossPost(channelId: Snowflake, messageId: Snowflake): DiscordMessage', 'description':'dev.kord.rest.service.ChannelService.crossPost', 'location':'rest/dev.kord.rest.service/-channel-service/cross-post.html', 'searchKey':'crossPost'},
{'name': 'suspend fun deleteAllReactions(channelId: Snowflake, messageId: Snowflake)', 'description':'dev.kord.rest.service.ChannelService.deleteAllReactions', 'location':'rest/dev.kord.rest.service/-channel-service/delete-all-reactions.html', 'searchKey':'deleteAllReactions'},
{'name': 'suspend fun deleteAllReactionsForEmoji(channelId: Snowflake, messageId: Snowflake, emoji: String)', 'description':'dev.kord.rest.service.ChannelService.deleteAllReactionsForEmoji', 'location':'rest/dev.kord.rest.service/-channel-service/delete-all-reactions-for-emoji.html', 'searchKey':'deleteAllReactionsForEmoji'},
{'name': 'suspend fun deleteChannel(channelId: Snowflake, reason: String?): DiscordChannel', 'description':'dev.kord.rest.service.ChannelService.deleteChannel', 'location':'rest/dev.kord.rest.service/-channel-service/delete-channel.html', 'searchKey':'deleteChannel'},
{'name': 'suspend fun deleteChannelPermission(channelId: Snowflake, overwriteId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.ChannelService.deleteChannelPermission', 'location':'rest/dev.kord.rest.service/-channel-service/delete-channel-permission.html', 'searchKey':'deleteChannelPermission'},
{'name': 'suspend fun deleteMessage(channelId: Snowflake, messageId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.ChannelService.deleteMessage', 'location':'rest/dev.kord.rest.service/-channel-service/delete-message.html', 'searchKey':'deleteMessage'},
{'name': 'suspend fun deleteOwnReaction(channelId: Snowflake, messageId: Snowflake, emoji: String)', 'description':'dev.kord.rest.service.ChannelService.deleteOwnReaction', 'location':'rest/dev.kord.rest.service/-channel-service/delete-own-reaction.html', 'searchKey':'deleteOwnReaction'},
{'name': 'suspend fun deletePinnedMessage(channelId: Snowflake, messageId: Snowflake)', 'description':'dev.kord.rest.service.ChannelService.deletePinnedMessage', 'location':'rest/dev.kord.rest.service/-channel-service/delete-pinned-message.html', 'searchKey':'deletePinnedMessage'},
{'name': 'suspend fun deleteReaction(channelId: Snowflake, messageId: Snowflake, userId: Snowflake, emoji: String)', 'description':'dev.kord.rest.service.ChannelService.deleteReaction', 'location':'rest/dev.kord.rest.service/-channel-service/delete-reaction.html', 'searchKey':'deleteReaction'},
{'name': 'suspend fun editChannelPermissions(channelId: Snowflake, overwriteId: Snowflake, permissions: ChannelPermissionEditRequest, reason: String?)', 'description':'dev.kord.rest.service.ChannelService.editChannelPermissions', 'location':'rest/dev.kord.rest.service/-channel-service/edit-channel-permissions.html', 'searchKey':'editChannelPermissions'},
{'name': 'inline suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, builder: MessageModifyBuilder.() -> Unit): DiscordMessage', 'description':'dev.kord.rest.service.ChannelService.editMessage', 'location':'rest/dev.kord.rest.service/-channel-service/edit-message.html', 'searchKey':'editMessage'},
{'name': 'suspend fun followNewsChannel(channelId: Snowflake, request: ChannelFollowRequest): FollowedChannelResponse', 'description':'dev.kord.rest.service.ChannelService.followNewsChannel', 'location':'rest/dev.kord.rest.service/-channel-service/follow-news-channel.html', 'searchKey':'followNewsChannel'},
{'name': 'suspend fun getChannel(channelId: Snowflake): DiscordChannel', 'description':'dev.kord.rest.service.ChannelService.getChannel', 'location':'rest/dev.kord.rest.service/-channel-service/get-channel.html', 'searchKey':'getChannel'},
{'name': 'suspend fun getChannelInvites(channelId: Snowflake): List<DiscordInvite>', 'description':'dev.kord.rest.service.ChannelService.getChannelInvites', 'location':'rest/dev.kord.rest.service/-channel-service/get-channel-invites.html', 'searchKey':'getChannelInvites'},
{'name': 'suspend fun getChannelPins(channelId: Snowflake): List<DiscordMessage>', 'description':'dev.kord.rest.service.ChannelService.getChannelPins', 'location':'rest/dev.kord.rest.service/-channel-service/get-channel-pins.html', 'searchKey':'getChannelPins'},
{'name': 'suspend fun getMessage(channelId: Snowflake, messageId: Snowflake): DiscordMessage', 'description':'dev.kord.rest.service.ChannelService.getMessage', 'location':'rest/dev.kord.rest.service/-channel-service/get-message.html', 'searchKey':'getMessage'},
{'name': 'suspend fun getMessages(channelId: Snowflake, position: Position?, limit: Int): List<DiscordMessage>', 'description':'dev.kord.rest.service.ChannelService.getMessages', 'location':'rest/dev.kord.rest.service/-channel-service/get-messages.html', 'searchKey':'getMessages'},
{'name': 'suspend fun getReactions(channelId: Snowflake, messageId: Snowflake, emoji: String, position: Position?, limit: Int): List<DiscordUser>', 'description':'dev.kord.rest.service.ChannelService.getReactions', 'location':'rest/dev.kord.rest.service/-channel-service/get-reactions.html', 'searchKey':'getReactions'},
{'name': 'suspend fun patchChannel(channelId: Snowflake, channel: ChannelModifyPatchRequest, reason: String?): DiscordChannel', 'description':'dev.kord.rest.service.ChannelService.patchChannel', 'location':'rest/dev.kord.rest.service/-channel-service/patch-channel.html', 'searchKey':'patchChannel'},
{'name': 'suspend fun putChannel(channelId: Snowflake, channel: ChannelModifyPutRequest, reason: String?): DiscordChannel', 'description':'dev.kord.rest.service.ChannelService.putChannel', 'location':'rest/dev.kord.rest.service/-channel-service/put-channel.html', 'searchKey':'putChannel'},
{'name': 'suspend fun removeFromGroup(channelId: Snowflake, userId: Snowflake)', 'description':'dev.kord.rest.service.ChannelService.removeFromGroup', 'location':'rest/dev.kord.rest.service/-channel-service/remove-from-group.html', 'searchKey':'removeFromGroup'},
{'name': 'suspend fun triggerTypingIndicator(channelId: Snowflake)', 'description':'dev.kord.rest.service.ChannelService.triggerTypingIndicator', 'location':'rest/dev.kord.rest.service/-channel-service/trigger-typing-indicator.html', 'searchKey':'triggerTypingIndicator'},
{'name': 'class EmojiService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.EmojiService', 'location':'rest/dev.kord.rest.service/-emoji-service/index.html', 'searchKey':'EmojiService'},
{'name': 'fun EmojiService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.EmojiService.EmojiService', 'location':'rest/dev.kord.rest.service/-emoji-service/-emoji-service.html', 'searchKey':'EmojiService'},
{'name': 'suspend fun deleteEmoji(guildId: Snowflake, emojiId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.EmojiService.deleteEmoji', 'location':'rest/dev.kord.rest.service/-emoji-service/delete-emoji.html', 'searchKey':'deleteEmoji'},
{'name': 'suspend fun getEmoji(guildId: Snowflake, emojiId: Snowflake): DiscordEmoji', 'description':'dev.kord.rest.service.EmojiService.getEmoji', 'location':'rest/dev.kord.rest.service/-emoji-service/get-emoji.html', 'searchKey':'getEmoji'},
{'name': 'suspend fun getEmojis(guildId: Snowflake): List<DiscordEmoji>', 'description':'dev.kord.rest.service.EmojiService.getEmojis', 'location':'rest/dev.kord.rest.service/-emoji-service/get-emojis.html', 'searchKey':'getEmojis'},
{'name': 'inline suspend fun modifyEmoji(guildId: Snowflake, emojiId: Snowflake, builder: EmojiModifyBuilder.() -> Unit): DiscordEmoji', 'description':'dev.kord.rest.service.EmojiService.modifyEmoji', 'location':'rest/dev.kord.rest.service/-emoji-service/modify-emoji.html', 'searchKey':'modifyEmoji'},
{'name': 'class GuildService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.GuildService', 'location':'rest/dev.kord.rest.service/-guild-service/index.html', 'searchKey':'GuildService'},
{'name': 'fun GuildService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.GuildService.GuildService', 'location':'rest/dev.kord.rest.service/-guild-service/-guild-service.html', 'searchKey':'GuildService'},
{'name': 'inline suspend fun addGuildBan(guildId: Snowflake, userId: Snowflake, builder: BanCreateBuilder.() -> Unit)', 'description':'dev.kord.rest.service.GuildService.addGuildBan', 'location':'rest/dev.kord.rest.service/-guild-service/add-guild-ban.html', 'searchKey':'addGuildBan'},
{'name': 'suspend fun addGuildMember(guildId: Snowflake, userId: Snowflake, token: String, builder: MemberAddBuilder.() -> Unit): DiscordGuildMember?', 'description':'dev.kord.rest.service.GuildService.addGuildMember', 'location':'rest/dev.kord.rest.service/-guild-service/add-guild-member.html', 'searchKey':'addGuildMember'},
{'name': 'suspend fun addRoleToGuildMember(guildId: Snowflake, userId: Snowflake, roleId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.GuildService.addRoleToGuildMember', 'location':'rest/dev.kord.rest.service/-guild-service/add-role-to-guild-member.html', 'searchKey':'addRoleToGuildMember'},
{'name': 'suspend fun beginGuildPrune(guildId: Snowflake, days: Int, computePruneCount: Boolean, reason: String?): PruneResponse', 'description':'dev.kord.rest.service.GuildService.beginGuildPrune', 'location':'rest/dev.kord.rest.service/-guild-service/begin-guild-prune.html', 'searchKey':'beginGuildPrune'},
{'name': 'inline suspend fun createGuild(name: String, builder: GuildCreateBuilder.() -> Unit): DiscordGuild', 'description':'dev.kord.rest.service.GuildService.createGuild', 'location':'rest/dev.kord.rest.service/-guild-service/create-guild.html', 'searchKey':'createGuild'},
{'name': 'suspend fun createGuildChannel(guildId: Snowflake, channel: GuildChannelCreateRequest, reason: String?): DiscordChannel', 'description':'dev.kord.rest.service.GuildService.createGuildChannel', 'location':'rest/dev.kord.rest.service/-guild-service/create-guild-channel.html', 'searchKey':'createGuildChannel'},
{'name': 'suspend fun createGuildIntegration(guildId: Snowflake, integration: GuildIntegrationCreateRequest)', 'description':'dev.kord.rest.service.GuildService.createGuildIntegration', 'location':'rest/dev.kord.rest.service/-guild-service/create-guild-integration.html', 'searchKey':'createGuildIntegration'},
{'name': 'inline suspend fun createGuildRole(guildId: Snowflake, builder: RoleCreateBuilder.() -> Unit): DiscordRole', 'description':'dev.kord.rest.service.GuildService.createGuildRole', 'location':'rest/dev.kord.rest.service/-guild-service/create-guild-role.html', 'searchKey':'createGuildRole'},
{'name': 'suspend fun deleteGuild(guildId: Snowflake)', 'description':'dev.kord.rest.service.GuildService.deleteGuild', 'location':'rest/dev.kord.rest.service/-guild-service/delete-guild.html', 'searchKey':'deleteGuild'},
{'name': 'suspend fun deleteGuildBan(guildId: Snowflake, userId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.GuildService.deleteGuildBan', 'location':'rest/dev.kord.rest.service/-guild-service/delete-guild-ban.html', 'searchKey':'deleteGuildBan'},
{'name': 'suspend fun deleteGuildIntegration(guildId: Snowflake, integrationId: Snowflake)', 'description':'dev.kord.rest.service.GuildService.deleteGuildIntegration', 'location':'rest/dev.kord.rest.service/-guild-service/delete-guild-integration.html', 'searchKey':'deleteGuildIntegration'},
{'name': 'suspend fun deleteGuildMember(guildId: Snowflake, userId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.GuildService.deleteGuildMember', 'location':'rest/dev.kord.rest.service/-guild-service/delete-guild-member.html', 'searchKey':'deleteGuildMember'},
{'name': 'suspend fun deleteGuildRole(guildId: Snowflake, roleId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.GuildService.deleteGuildRole', 'location':'rest/dev.kord.rest.service/-guild-service/delete-guild-role.html', 'searchKey':'deleteGuildRole'},
{'name': 'suspend fun deleteRoleFromGuildMember(guildId: Snowflake, userId: Snowflake, roleId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.GuildService.deleteRoleFromGuildMember', 'location':'rest/dev.kord.rest.service/-guild-service/delete-role-from-guild-member.html', 'searchKey':'deleteRoleFromGuildMember'},
{'name': 'suspend fun getGuild(guildId: Snowflake, withCounts: Boolean): DiscordGuild', 'description':'dev.kord.rest.service.GuildService.getGuild', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild.html', 'searchKey':'getGuild'},
{'name': 'suspend fun getGuildBan(guildId: Snowflake, userId: Snowflake): BanResponse', 'description':'dev.kord.rest.service.GuildService.getGuildBan', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-ban.html', 'searchKey':'getGuildBan'},
{'name': 'suspend fun getGuildBans(guildId: Snowflake): List<BanResponse>', 'description':'dev.kord.rest.service.GuildService.getGuildBans', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-bans.html', 'searchKey':'getGuildBans'},
{'name': 'suspend fun getGuildChannels(guildId: Snowflake): List<DiscordChannel>', 'description':'dev.kord.rest.service.GuildService.getGuildChannels', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-channels.html', 'searchKey':'getGuildChannels'},
{'name': 'suspend fun getGuildEmbed(guildId: Snowflake): Nothing', 'description':'dev.kord.rest.service.GuildService.getGuildEmbed', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-embed.html', 'searchKey':'getGuildEmbed'},
{'name': 'suspend fun getGuildIntegrations(guildId: Snowflake): List<DiscordIntegration>', 'description':'dev.kord.rest.service.GuildService.getGuildIntegrations', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-integrations.html', 'searchKey':'getGuildIntegrations'},
{'name': 'suspend fun getGuildInvites(guildId: Snowflake): List<DiscordInvite>', 'description':'dev.kord.rest.service.GuildService.getGuildInvites', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-invites.html', 'searchKey':'getGuildInvites'},
{'name': 'suspend fun getGuildMember(guildId: Snowflake, userId: Snowflake): DiscordGuildMember', 'description':'dev.kord.rest.service.GuildService.getGuildMember', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-member.html', 'searchKey':'getGuildMember'},
{'name': 'suspend fun getGuildPreview(guildId: Snowflake): DiscordGuildPreview', 'description':'dev.kord.rest.service.GuildService.getGuildPreview', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-preview.html', 'searchKey':'getGuildPreview'},
{'name': 'suspend fun getGuildPruneCount(guildId: Snowflake, days: Int): GetPruneResponse', 'description':'dev.kord.rest.service.GuildService.getGuildPruneCount', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-prune-count.html', 'searchKey':'getGuildPruneCount'},
{'name': 'suspend fun getGuildRoles(guildId: Snowflake): List<DiscordRole>', 'description':'dev.kord.rest.service.GuildService.getGuildRoles', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-roles.html', 'searchKey':'getGuildRoles'},
{'name': 'suspend fun getGuildVoiceRegions(guildId: Snowflake): List<DiscordVoiceRegion>', 'description':'dev.kord.rest.service.GuildService.getGuildVoiceRegions', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-voice-regions.html', 'searchKey':'getGuildVoiceRegions'},
{'name': 'suspend fun getGuildWidget(guildId: Snowflake): DiscordGuildWidget', 'description':'dev.kord.rest.service.GuildService.getGuildWidget', 'location':'rest/dev.kord.rest.service/-guild-service/get-guild-widget.html', 'searchKey':'getGuildWidget'},
{'name': 'suspend fun getVanityInvite(guildId: Snowflake): DiscordPartialInvite', 'description':'dev.kord.rest.service.GuildService.getVanityInvite', 'location':'rest/dev.kord.rest.service/-guild-service/get-vanity-invite.html', 'searchKey':'getVanityInvite'},
{'name': 'suspend fun modifyCurrentUserNickname(guildId: Snowflake, nick: CurrentUserNicknameModifyRequest): CurrentUserNicknameModifyResponse', 'description':'dev.kord.rest.service.GuildService.modifyCurrentUserNickname', 'location':'rest/dev.kord.rest.service/-guild-service/modify-current-user-nickname.html', 'searchKey':'modifyCurrentUserNickname'},
{'name': 'inline suspend fun modifyGuild(guildId: Snowflake, builder: GuildModifyBuilder.() -> Unit): DiscordGuild', 'description':'dev.kord.rest.service.GuildService.modifyGuild', 'location':'rest/dev.kord.rest.service/-guild-service/modify-guild.html', 'searchKey':'modifyGuild'},
{'name': 'inline suspend fun modifyGuildChannelPosition(guildId: Snowflake, builder: GuildChannelPositionModifyBuilder.() -> Unit)', 'description':'dev.kord.rest.service.GuildService.modifyGuildChannelPosition', 'location':'rest/dev.kord.rest.service/-guild-service/modify-guild-channel-position.html', 'searchKey':'modifyGuildChannelPosition'},
{'name': 'suspend fun modifyGuildEmbed(guildId: Snowflake, embed: Any): Nothing', 'description':'dev.kord.rest.service.GuildService.modifyGuildEmbed', 'location':'rest/dev.kord.rest.service/-guild-service/modify-guild-embed.html', 'searchKey':'modifyGuildEmbed'},
{'name': 'inline suspend fun modifyGuildIntegration(guildId: Snowflake, integrationId: Snowflake, builder: IntegrationModifyBuilder.() -> Unit)', 'description':'dev.kord.rest.service.GuildService.modifyGuildIntegration', 'location':'rest/dev.kord.rest.service/-guild-service/modify-guild-integration.html', 'searchKey':'modifyGuildIntegration'},
{'name': 'inline suspend fun modifyGuildMember(guildId: Snowflake, userId: Snowflake, builder: MemberModifyBuilder.() -> Unit): DiscordGuildMember', 'description':'dev.kord.rest.service.GuildService.modifyGuildMember', 'location':'rest/dev.kord.rest.service/-guild-service/modify-guild-member.html', 'searchKey':'modifyGuildMember'},
{'name': 'inline suspend fun modifyGuildRole(guildId: Snowflake, roleId: Snowflake, builder: RoleModifyBuilder.() -> Unit): DiscordRole', 'description':'dev.kord.rest.service.GuildService.modifyGuildRole', 'location':'rest/dev.kord.rest.service/-guild-service/modify-guild-role.html', 'searchKey':'modifyGuildRole'},
{'name': 'inline suspend fun modifyGuildRolePosition(guildId: Snowflake, builder: RolePositionsModifyBuilder.() -> Unit): List<DiscordRole>', 'description':'dev.kord.rest.service.GuildService.modifyGuildRolePosition', 'location':'rest/dev.kord.rest.service/-guild-service/modify-guild-role-position.html', 'searchKey':'modifyGuildRolePosition'},
{'name': 'suspend fun syncGuildIntegration(guildId: Snowflake, integrationId: Snowflake)', 'description':'dev.kord.rest.service.GuildService.syncGuildIntegration', 'location':'rest/dev.kord.rest.service/-guild-service/sync-guild-integration.html', 'searchKey':'syncGuildIntegration'},
{'name': 'class InviteService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.InviteService', 'location':'rest/dev.kord.rest.service/-invite-service/index.html', 'searchKey':'InviteService'},
{'name': 'fun InviteService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.InviteService.InviteService', 'location':'rest/dev.kord.rest.service/-invite-service/-invite-service.html', 'searchKey':'InviteService'},
{'name': 'suspend fun deleteInvite(code: String, reason: String?): DiscordInvite', 'description':'dev.kord.rest.service.InviteService.deleteInvite', 'location':'rest/dev.kord.rest.service/-invite-service/delete-invite.html', 'searchKey':'deleteInvite'},
{'name': 'suspend fun getInvite(code: String, withCounts: Boolean): DiscordInvite', 'description':'dev.kord.rest.service.InviteService.getInvite', 'location':'rest/dev.kord.rest.service/-invite-service/get-invite.html', 'searchKey':'getInvite'},
{'name': 'class RestClient(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.RestClient', 'location':'rest/dev.kord.rest.service/-rest-client/index.html', 'searchKey':'RestClient'},
{'name': 'fun RestClient(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.RestClient.RestClient', 'location':'rest/dev.kord.rest.service/-rest-client/-rest-client.html', 'searchKey':'RestClient'},
{'name': 'inline suspend fun <T> unsafe(route: Route<T>, block: RequestBuilder<T>.() -> Unit): T', 'description':'dev.kord.rest.service.RestClient.unsafe', 'location':'rest/dev.kord.rest.service/-rest-client/unsafe.html', 'searchKey':'unsafe'},
{'name': 'abstract class RestService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.RestService', 'location':'rest/dev.kord.rest.service/-rest-service/index.html', 'searchKey':'RestService'},
{'name': 'fun RestService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.RestService.RestService', 'location':'rest/dev.kord.rest.service/-rest-service/-rest-service.html', 'searchKey':'RestService'},
{'name': 'class TemplateService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.TemplateService', 'location':'rest/dev.kord.rest.service/-template-service/index.html', 'searchKey':'TemplateService'},
{'name': 'fun TemplateService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.TemplateService.TemplateService', 'location':'rest/dev.kord.rest.service/-template-service/-template-service.html', 'searchKey':'TemplateService'},
{'name': 'suspend fun getTemplate(code: String): DiscordTemplate', 'description':'dev.kord.rest.service.TemplateService.getTemplate', 'location':'rest/dev.kord.rest.service/-template-service/get-template.html', 'searchKey':'getTemplate'},
{'name': 'class UserService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.UserService', 'location':'rest/dev.kord.rest.service/-user-service/index.html', 'searchKey':'UserService'},
{'name': 'fun UserService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.UserService.UserService', 'location':'rest/dev.kord.rest.service/-user-service/-user-service.html', 'searchKey':'UserService'},
{'name': 'suspend fun createDM(dm: DMCreateRequest): DiscordChannel', 'description':'dev.kord.rest.service.UserService.createDM', 'location':'rest/dev.kord.rest.service/-user-service/create-d-m.html', 'searchKey':'createDM'},
{'name': 'inline suspend fun createGroupDM(builder: GroupDMCreateBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.UserService.createGroupDM', 'location':'rest/dev.kord.rest.service/-user-service/create-group-d-m.html', 'searchKey':'createGroupDM'},
{'name': 'suspend fun getCurrentUser(): DiscordUser', 'description':'dev.kord.rest.service.UserService.getCurrentUser', 'location':'rest/dev.kord.rest.service/-user-service/get-current-user.html', 'searchKey':'getCurrentUser'},
{'name': 'suspend fun getCurrentUserGuilds(position: Position?, limit: Int): List<DiscordPartialGuild>', 'description':'dev.kord.rest.service.UserService.getCurrentUserGuilds', 'location':'rest/dev.kord.rest.service/-user-service/get-current-user-guilds.html', 'searchKey':'getCurrentUserGuilds'},
{'name': 'suspend fun getUser(userId: Snowflake): DiscordUser', 'description':'dev.kord.rest.service.UserService.getUser', 'location':'rest/dev.kord.rest.service/-user-service/get-user.html', 'searchKey':'getUser'},
{'name': 'suspend fun getUserConnections(): List<Connection>', 'description':'dev.kord.rest.service.UserService.getUserConnections', 'location':'rest/dev.kord.rest.service/-user-service/get-user-connections.html', 'searchKey':'getUserConnections'},
{'name': 'suspend fun leaveGuild(guildId: Snowflake)', 'description':'dev.kord.rest.service.UserService.leaveGuild', 'location':'rest/dev.kord.rest.service/-user-service/leave-guild.html', 'searchKey':'leaveGuild'},
{'name': 'inline suspend fun modifyCurrentUser(builder: CurrentUserModifyBuilder.() -> Unit): DiscordUser', 'description':'dev.kord.rest.service.UserService.modifyCurrentUser', 'location':'rest/dev.kord.rest.service/-user-service/modify-current-user.html', 'searchKey':'modifyCurrentUser'},
{'name': 'class VoiceService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.VoiceService', 'location':'rest/dev.kord.rest.service/-voice-service/index.html', 'searchKey':'VoiceService'},
{'name': 'fun VoiceService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.VoiceService.VoiceService', 'location':'rest/dev.kord.rest.service/-voice-service/-voice-service.html', 'searchKey':'VoiceService'},
{'name': 'suspend fun getVoiceRegions(): List<DiscordVoiceRegion>', 'description':'dev.kord.rest.service.VoiceService.getVoiceRegions', 'location':'rest/dev.kord.rest.service/-voice-service/get-voice-regions.html', 'searchKey':'getVoiceRegions'},
{'name': 'class WebhookService(requestHandler: RequestHandler) : RestService', 'description':'dev.kord.rest.service.WebhookService', 'location':'rest/dev.kord.rest.service/-webhook-service/index.html', 'searchKey':'WebhookService'},
{'name': 'fun WebhookService(requestHandler: RequestHandler)', 'description':'dev.kord.rest.service.WebhookService.WebhookService', 'location':'rest/dev.kord.rest.service/-webhook-service/-webhook-service.html', 'searchKey':'WebhookService'},
{'name': 'inline suspend fun createWebhook(channelId: Snowflake, name: String, builder: WebhookCreateBuilder.() -> Unit): DiscordWebhook', 'description':'dev.kord.rest.service.WebhookService.createWebhook', 'location':'rest/dev.kord.rest.service/-webhook-service/create-webhook.html', 'searchKey':'createWebhook'},
{'name': 'suspend fun deleteWebhook(webhookId: Snowflake, reason: String?)', 'description':'dev.kord.rest.service.WebhookService.deleteWebhook', 'location':'rest/dev.kord.rest.service/-webhook-service/delete-webhook.html', 'searchKey':'deleteWebhook'},
{'name': 'suspend fun deleteWebhookWithToken(webhookId: Snowflake, token: String, reason: String?)', 'description':'dev.kord.rest.service.WebhookService.deleteWebhookWithToken', 'location':'rest/dev.kord.rest.service/-webhook-service/delete-webhook-with-token.html', 'searchKey':'deleteWebhookWithToken'},
{'name': 'suspend fun executeGithubWebhook(webhookId: Snowflake, token: String, body: JsonObject, wait: Boolean)', 'description':'dev.kord.rest.service.WebhookService.executeGithubWebhook', 'location':'rest/dev.kord.rest.service/-webhook-service/execute-github-webhook.html', 'searchKey':'executeGithubWebhook'},
{'name': 'suspend fun executeSlackWebhook(webhookId: Snowflake, token: String, body: JsonObject, wait: Boolean)', 'description':'dev.kord.rest.service.WebhookService.executeSlackWebhook', 'location':'rest/dev.kord.rest.service/-webhook-service/execute-slack-webhook.html', 'searchKey':'executeSlackWebhook'},
{'name': 'inline suspend fun executeWebhook(webhookId: Snowflake, token: String, wait: Boolean, builder: ExecuteWebhookBuilder.() -> Unit): DiscordMessage?', 'description':'dev.kord.rest.service.WebhookService.executeWebhook', 'location':'rest/dev.kord.rest.service/-webhook-service/execute-webhook.html', 'searchKey':'executeWebhook'},
{'name': 'suspend fun getChannelWebhooks(channelId: Snowflake): List<DiscordWebhook>', 'description':'dev.kord.rest.service.WebhookService.getChannelWebhooks', 'location':'rest/dev.kord.rest.service/-webhook-service/get-channel-webhooks.html', 'searchKey':'getChannelWebhooks'},
{'name': 'suspend fun getGuildWebhooks(guildId: Snowflake): List<DiscordWebhook>', 'description':'dev.kord.rest.service.WebhookService.getGuildWebhooks', 'location':'rest/dev.kord.rest.service/-webhook-service/get-guild-webhooks.html', 'searchKey':'getGuildWebhooks'},
{'name': 'suspend fun getWebhook(webhookId: Snowflake): DiscordWebhook', 'description':'dev.kord.rest.service.WebhookService.getWebhook', 'location':'rest/dev.kord.rest.service/-webhook-service/get-webhook.html', 'searchKey':'getWebhook'},
{'name': 'suspend fun getWebhookWithToken(webhookId: Snowflake, token: String): DiscordWebhook', 'description':'dev.kord.rest.service.WebhookService.getWebhookWithToken', 'location':'rest/dev.kord.rest.service/-webhook-service/get-webhook-with-token.html', 'searchKey':'getWebhookWithToken'},
{'name': 'inline suspend fun modifyWebhook(webhookId: Snowflake, builder: WebhookModifyBuilder.() -> Unit): DiscordWebhook', 'description':'dev.kord.rest.service.WebhookService.modifyWebhook', 'location':'rest/dev.kord.rest.service/-webhook-service/modify-webhook.html', 'searchKey':'modifyWebhook'},
{'name': 'inline suspend fun modifyWebhookWithToken(webhookId: Snowflake, token: String, builder: WebhookModifyBuilder.() -> Unit): DiscordWebhook', 'description':'dev.kord.rest.service.WebhookService.modifyWebhookWithToken', 'location':'rest/dev.kord.rest.service/-webhook-service/modify-webhook-with-token.html', 'searchKey':'modifyWebhookWithToken'},
{'name': 'inline suspend fun GuildService.createCategory(guildId: Snowflake, name: String, builder: CategoryCreateBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.createCategory', 'location':'rest/dev.kord.rest.service/create-category.html', 'searchKey':'createCategory'},
{'name': 'inline suspend fun GuildService.createNewsChannel(guildId: Snowflake, name: String, builder: NewsChannelCreateBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.createNewsChannel', 'location':'rest/dev.kord.rest.service/create-news-channel.html', 'searchKey':'createNewsChannel'},
{'name': 'inline suspend fun GuildService.createTextChannel(guildId: Snowflake, name: String, builder: TextChannelCreateBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.createTextChannel', 'location':'rest/dev.kord.rest.service/create-text-channel.html', 'searchKey':'createTextChannel'},
{'name': 'inline suspend fun GuildService.createVoiceChannel(guildId: Snowflake, name: String, builder: VoiceChannelCreateBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.createVoiceChannel', 'location':'rest/dev.kord.rest.service/create-voice-channel.html', 'searchKey':'createVoiceChannel'},
{'name': 'inline suspend fun ChannelService.editMemberPermissions(channelId: Snowflake, memberId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)', 'description':'dev.kord.rest.service.editMemberPermissions', 'location':'rest/dev.kord.rest.service/edit-member-permissions.html', 'searchKey':'editMemberPermissions'},
{'name': 'inline suspend fun ChannelService.editRolePermission(channelId: Snowflake, roleId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)', 'description':'dev.kord.rest.service.editRolePermission', 'location':'rest/dev.kord.rest.service/edit-role-permission.html', 'searchKey':'editRolePermission'},
{'name': 'inline suspend fun ChannelService.patchCategory(channelId: Snowflake, builder: CategoryModifyBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.patchCategory', 'location':'rest/dev.kord.rest.service/patch-category.html', 'searchKey':'patchCategory'},
{'name': 'inline suspend fun ChannelService.patchNewsChannel(channelId: Snowflake, builder: NewsChannelModifyBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.patchNewsChannel', 'location':'rest/dev.kord.rest.service/patch-news-channel.html', 'searchKey':'patchNewsChannel'},
{'name': 'inline suspend fun ChannelService.patchStoreChannel(channelId: Snowflake, builder: StoreChannelModifyBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.patchStoreChannel', 'location':'rest/dev.kord.rest.service/patch-store-channel.html', 'searchKey':'patchStoreChannel'},
{'name': 'inline suspend fun ChannelService.patchTextChannel(channelId: Snowflake, builder: TextChannelModifyBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.patchTextChannel', 'location':'rest/dev.kord.rest.service/patch-text-channel.html', 'searchKey':'patchTextChannel'},
{'name': 'inline suspend fun ChannelService.patchVoiceChannel(channelId: Snowflake, builder: VoiceChannelModifyBuilder.() -> Unit): DiscordChannel', 'description':'dev.kord.rest.service.patchVoiceChannel', 'location':'rest/dev.kord.rest.service/patch-voice-channel.html', 'searchKey':'patchVoiceChannel'}]
